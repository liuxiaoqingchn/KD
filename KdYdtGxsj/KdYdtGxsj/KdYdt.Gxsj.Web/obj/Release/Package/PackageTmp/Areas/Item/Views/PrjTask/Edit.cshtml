@model  PrjTask

@{
    Model.AllowedEdit = !Model.IsLssued;
}

@section scripts{
    <script type="text/javascript">
        function lssuedShow() {
            $("[name='IsLssued']").val(true);
        }
</script>
}
@using (Html.BbBeginForm())
{
    using (@Html.BeginPageTitle())
    {
        if (Model.IsLssued)
        {
            <input class="btn btn-primary" data-target="form" role="button" title="修改当前已下达的任务"
                   type="submit" value="修改任务" onclick='this.form.action="@Url.Action("Lssued", new { id = Model.Id })"' />
        }
        else
        {
            @Html.BbBtnSave()
            @Html.BbBtnSubmit("lssuedShow", "确认下达", "", new { Class = "btn btn-primary" })
        }
        @Html.BbBtnLinkReturn()
    }

    @Html.NavBreadcrumb()
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)
    @Html.ValidationSummary(true)

    <div class="panel panel-info">
        <div class="panel-heading">
            <span class="panel-title">任务安排</span>
        </div>
        <div class="panel-body">
            <div class="row">
                @Html.BbTextFor(x => x.PrjName)
                @Html.BbTextFor(x => x.PrjCode)
            </div>
            <div class="row">                                                                      
                @Html.BbTextBoxFor(x => x.BondMoney, null, "万元", 4, 0, new { ReadOnly = true })
                @*@Html.BbCheckBoxFor(x => x.IsBond, 0, new { ReadOnly = true })*@
                @Html.BbRadioListFor(x => x.IsBond,4,0,false, new { ReadOnly = true })
            </div>
            <div class="row">
                @Html.BbUserPickFor(x => x.LetterId, x => x.LetterName, 1@*, null, 0, 0, null, null, null, new { Required = true }*@)
                @Html.BbTextBoxFor(x => x.LetterTime, 4@*, new { Required = true }*@)
            </div>
            <div class="row">
                @Html.BbUserPickFor(x => x.BusinessId, x => x.BusinessName, 1@*, null, 0, 0, null, null, null, new { Required = true }*@)
                @Html.BbTextBoxFor(x => x.BusinessTime, 4@*, new { Required = true }*@)
            </div>
            <div class="row">
                @Html.BbUserPickFor(x => x.SkillId, x => x.SkillName, 1@*, null, 0, 0, null, null, null, new { Required = true }*@)
                @Html.BbTextBoxFor(x => x.SkillTime, 4@*, new { Required = true }*@)
            </div>
            <div class="row">
                @Html.BbUserPickFor(x => x.SealId, x => x.SealName, 1@*, null, 0, 0, null, null, null, new { Required = true }*@)
                @Html.BbTextBoxFor(x => x.SealTime, 4@*, new { Required = true }*@)
            </div>
            <div class="row">
                @Html.BbUserPickFor(x => x.CreditId, x => x.CreditName@*, 1, null, 0, 0, null, null, null, new { Required = true }*@)
                @Html.BbTextBoxFor(x => x.CreditTime, 4@*, new { Required = true }*@)
            </div>
            <div class="row">
                @Html.BbUserPickFor(x => x.DesignId, x => x.DesignName, 1@*, null, 0, 0, null, null, null, new { Required = true }*@)
                @Html.BbTextBoxFor(x => x.DesignTime, 4@*, new { Required = true }*@)
            </div>
            <div class="row">
                @Html.HiddenFor(x => x.IsLssued)
                @Html.HiddenFor(x => x.TaskPersonId)
                @Html.HiddenFor(x => x.TaskPersonName)
                @Html.HiddenFor(x => x.TaskTime)
                @Html.HiddenFor(x => x.SignDate)
                @Html.HiddenFor(x => x.BidManId)
                @Html.HiddenFor(x => x.BidMan)

                @Html.BbTextFor(x => x.TaskPersonName)
                @Html.BbTextFor(x => x.TaskTime)
            </div>
            <div class="row">
                @Html.BbTextBoxFor(x => x.Remarks)
            </div>
            <div>
                @Html.AnnexUnit()
            </div>
        </div>
    </div>
}
@Html.AnnexUpload()
