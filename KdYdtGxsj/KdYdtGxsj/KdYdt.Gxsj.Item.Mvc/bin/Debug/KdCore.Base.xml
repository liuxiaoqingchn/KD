<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KdCore.Base</name>
    </assembly>
    <members>
        <member name="T:KdCore.BbEnableType">
            <summary>
            是否允许的设置类型
            </summary>
        </member>
        <member name="F:KdCore.BbEnableType.Disable">
            <summary>
            禁止
            </summary>
        </member>
        <member name="F:KdCore.BbEnableType.Inherit">
            <summary>
            默认，继承基类或上级设置
            </summary>
        </member>
        <member name="F:KdCore.BbEnableType.Enable">
            <summary>
            允许
            </summary>
        </member>
        <member name="T:KdCore.BbUtilPinyin">
            <summary>
            中文字符串处理：全半角、简繁体、拼音等
            拼音在未设置额外处理方法时，只能获取区位码中按拼音排序的 3755 个常用汉字的拼音
            </summary>
        </member>
        <member name="P:KdCore.BbUtilPinyin.GB2312">
            <summary>
            获取简体中文 (GB2312) 编码的 <see cref="T:System.Text.Encoding"/> 的实例
            </summary>
        </member>
        <member name="P:KdCore.BbUtilPinyin.GB18030">
            <summary>
            获取简体中文 (GB18030) 编码的 <see cref="T:System.Text.Encoding"/> 的实例
            </summary>
        </member>
        <member name="P:KdCore.BbUtilPinyin.InitialOnlyOneLetter">
            <summary>
            获取或设置在首字母缩写时只使用一个字母；默认值 true；
            如 zh 取首字母时仅取 z，但根据资料查询更规范的应该使用完整的zh
            </summary>
        </member>
        <member name="P:KdCore.BbUtilPinyin.PhrasePinYinConfigFilePath">
            <summary>
            获取或设置词汇拼音配置文件的物理路径
            </summary>
        </member>
        <member name="F:KdCore.BbUtilPinyin.ChsCharMinValid">
            <summary>
            CJK 统一汉字扩充：最小有效的汉字 
            </summary>
        </member>
        <member name="F:KdCore.BbUtilPinyin.ChsCharMin">
            <summary>
            CJK 统一汉字：最小常规的汉字 
            </summary>
        </member>
        <member name="F:KdCore.BbUtilPinyin.ChsCharMax">
            <summary>
            CJK 统一汉字：最大常规的汉字
            </summary>
        </member>
        <member name="F:KdCore.BbUtilPinyin.ChsCharMaxValid">
            <summary>
            CJK 统一汉字扩充：最大有效的汉字
            </summary>
        </member>
        <member name="F:KdCore.BbUtilPinyin.ChsCharSpecial">
            <summary>
            有效的特殊汉字：〇
            </summary>
        </member>
        <member name="F:KdCore.BbUtilPinyin.ChsCharSpecialPinYin">
            <summary>
            有效的特殊汉字：〇的拼音
            </summary>
        </member>
        <member name="F:KdCore.BbUtilPinyin.ChsCharMinQuwei">
            <summary>
            区位码汉字：最小：啊 区位码 1601 按拼音排序的开始字符
            </summary>
        </member>
        <member name="F:KdCore.BbUtilPinyin.ChsCharMaxQuwei">
            <summary>
            区位码汉字：最大：齄 区位码 8794
            </summary>
        </member>
        <member name="F:KdCore.BbUtilPinyin.ChsCharMinQuweiPinyi">
            <summary>
            区位码汉字：最小：啊 区位码 1601 按拼音排序的开始字符
            </summary>
        </member>
        <member name="F:KdCore.BbUtilPinyin.ChsCharMaxQuweiPinyi">
            <summary>
            区位码汉字：按拼音排序最大：座 区位码 5589 按拼音排序的结束字符
            </summary>
        </member>
        <member name="P:KdCore.BbUtilPinyin.Func_OnGetInitPinYinDefault">
            <summary>
            获取或设置获取汉字区位码中无法自动获取的一些拼音设置。
            返回值要遵守声母大写的原则
            </summary>
        </member>
        <member name="P:KdCore.BbUtilPinyin.Func_GetPinYin_Char">
            <summary>
            获取或设置获取汉字拼音的处理方法。
            返回值要遵守声母大写的原则
            </summary>
        </member>
        <member name="P:KdCore.BbUtilPinyin.Func_GetPinYin_String">
            <summary>
            获取或设置获取汉字拼音的处理方法。
            返回值为数组，数组中的每一项对应原本字符串中一个字符的拼音，并且要遵守声母大写的原则
            </summary>
        </member>
        <member name="P:KdCore.BbUtilPinyin.Func_GetPinYin_Filter">
            <summary>
            获取或设置获取汉字拼音的格式化过滤处理方法。
            </summary>
        </member>
        <member name="M:KdCore.BbUtilPinyin.IsChinese(System.Char)">
            <summary>
            获取字符是否可视为汉字字符（默认仅识别 CJK 统一汉字）
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.IsChineseOrEnlarge(System.Char)">
            <summary>
            判断字符是否可视为汉字字符（CJK 统一汉字及CJK 统一汉字扩充）
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.ToSBC(System.String)">
             <summary>
             转全角的函数(SBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>全角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>        
        </member>
        <member name="M:KdCore.BbUtilPinyin.ToDBC(System.String)">
             <summary>
             转半角的函数(DBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:KdCore.BbUtilPinyin.ToSimplified(System.String)">
            <summary>
            将字符串转换成简体中文
            </summary>
            <param name="source">输入要转换的字符串</param>
            <returns>转换完成后的字符串</returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.ToTraditional(System.String)">
            <summary>
            将字符串转换为繁体中文
            </summary>
            <param name="source">输入要转换的字符串</param>
            <returns>转换完成后的字符串</returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.GetZoneBitCode(System.Char)">
            <summary>
            获取字符的中文区位码，如果返回 -1，则表示区位码不支持该字符
            </summary>
            <param name="character"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.PinyinFilter(System.String,System.Boolean,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            对单个字符的拼音进行过滤处理
            </summary>
            <param name="pinyin"></param>
            <param name="onlyInitial"></param>
            <param name="toUpperCase"></param>
            <param name="removeTone"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.PinyinFilterDefault(System.String,System.Boolean,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            对单个字符的拼音进行过滤处理
            </summary>
            <param name="pinyin"></param>
            <param name="onlyInitial"></param>
            <param name="toUpperCase"></param>
            <param name="removeTone"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.BbUtilPinyin.ChsStringSection">
            <summary>
            中英文分段
            </summary>
        </member>
        <member name="P:KdCore.BbUtilPinyin.ChsStringSection.Content">
            <summary>
            获取或设置原始的字符串内容
            </summary>
        </member>
        <member name="P:KdCore.BbUtilPinyin.ChsStringSection.IsChinese">
            <summary>
            获取或设置原始字符串是否中文
            </summary>
        </member>
        <member name="P:KdCore.BbUtilPinyin.ChsStringSection.PinYin">
            <summary>
            获取或设置原始字符串对应的拼音
            </summary>
        </member>
        <member name="T:KdCore.BbUtilPinyin.ChsPinyinPhraseHandler">
            <summary>
            特殊设置词组拼音处理链节点
            </summary>
        </member>
        <member name="T:KdCore.BbUtilPinyin.ChsPhraseSectionNode">
            <summary>
            特殊设置词组分隔节点
            </summary>
        </member>
        <member name="M:KdCore.BbUtilPinyin.ChsPhraseSectionNode.GetPinYin(System.Func{System.String,System.String[]})">
            <summary>
            获取原始字符串对应的拼音
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.ChsPhraseSectionNode.SplitPhrases(KdCore.BbUtilPinyin.ChsPinyinPhraseHandler)">
            <summary>
            使用特殊设置分割字符串
            </summary>
            <param name="handler"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.SplitChsSections(System.String)">
            <summary>
            按是否连续中文，将字符串拆分不同的小节
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.GetPinYinPhraseConfigFilePath">
            <summary>
            获取特殊词汇的指定拼音配置文件的物理路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.GetPinYinPhraseDefaults">
            <summary>
            设置默认设置的例外字词对应的拼音。
            键：汉语词汇、习惯用语或汉字等；
            值：与键对应的拼音，用空格间隔，并且声母大写。
            </summary>
        </member>
        <member name="M:KdCore.BbUtilPinyin.InitPinYinPhraseHandlerChains">
            <summary>
            初始化设置的例外字词对应的拼音。
            如多音字，可通过设置词组的方式来强制识别使用哪个音
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.ResetPinYinPhraseConfigs">
            <summary>
            重新初始化例外的词或字的拼音设置缓存
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.InternalGetPinYinPure(System.Char)">
            <summary>
            获取中文字符的拼音，纯粹的，传入参数视为已处理过特殊词语或汉字
            </summary>
            <param name="chinese">已经确认是中文的字符</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.InternalGetPinYin(System.Char)">
            <summary>
            获取中文字符的拼音
            </summary>
            <param name="chinese">已经确认是中文的字符</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.InternalGetPinYinPure(System.String)">
            <summary>
            获取中文字符串的拼音，纯粹的，传入参数视为已处理过特殊词语或汉字
            </summary>
            <param name="chinese"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.InternalGetPinYin(System.String)">
            <summary>
            处理特别指定的例外发音的词汇和汉字后，获取中文字符串的拼音
            </summary>
            <param name="chinese"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.GetPinYin(System.Char,System.Boolean,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            转换为汉字拼音
            </summary>
            <param name="character"></param>
            <param name="onlyInitial">是否仅返回拼音的首写字母</param>
            <param name="toUpperCase">大小写格式，设置为null时仅声母大写</param>
            <param name="removeTone">是否移除声调</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.GetPinYin(System.String,System.Boolean,System.String,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            转换为汉字拼音
            </summary>
            <param name="content">要获取拼音的字符串</param>
            <param name="onlyInitial">是否仅返回拼音的首写字母</param>
            <param name="separator">拼音之间的间隔字符串</param>
            <param name="toUpperCase">大小写格式，设置为null时仅首字母大写</param>
            <param name="removeTone">是否移除声调</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbUtilPinyin.InitPinYinDefault">
            <summary>
            初始化区位码中无法自动获取的一些拼音设置
            </summary>
        </member>
        <member name="M:KdCore.BbUtilPinyin.InitPinYinDefault(System.Boolean)">
            <summary>
            初始化区位码中无法自动获取的一些拼音设置
            </summary>
            <param name="initialOnlyOneLetter"></param>
        </member>
        <member name="M:KdCore.BbUtilPinyin.SetPinYinDefault(System.Char,System.String)">
            <summary>
            获取中文字符的默认拼音
            </summary>
            <param name="character"></param>
            <param name="pinyin"></param>
        </member>
        <member name="M:KdCore.BbUtilPinyin.ClearPinYinDefaults">
            <summary>
            清除已添加的区位码中无法自动获取的拼音设置
            </summary>
        </member>
        <member name="M:KdCore.BbUtilPinyin.GetPinYinDefault(System.Char,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            获取中文字符的拼音，不识别的返回原字符
            </summary>
            <param name="character">要获取拼音的字符</param>
            <param name="onlyInitial">是否仅返回拼音的首写字母</param>
            <param name="toUpperCase">大小写格式，设置为null时仅首字母大写</param>
            <returns></returns>
        </member>
        <member name="F:KdCore.BbUtilPinyin.pyCodeIndexs">
            <summary>
            拼音区编码的整形数组。
            </summary>
        </member>
        <member name="F:KdCore.BbUtilPinyin.pyCodeValues">
            <summary>
            汉字拼音的字符串数组。
            </summary>
        </member>
        <member name="T:KdCore.DataBase.BbDbTableConfigs">
            <summary>
            数据库表的列配置管理
            </summary>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.GetColOrder(System.Type,System.String)">
            <summary>
            获取指定的类型中列名的生成顺序
            </summary>
            <param name="type"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.GetColIndex(System.Type,System.String)">
            <summary>
            获取指定的类型中是否为列创建索引
            </summary>
            <param name="type"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SortConvert``1(System.String)">
            <summary>
            排序名称转换
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sortName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SortConvert(System.Type,System.String)">
            <summary>
            排序名称转换
            </summary>
            <param name="type"></param>
            <param name="sortName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetColHead(System.String[])">
            <summary>
            重新设置通用设置排在开头的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddColHead(System.String[])">
            <summary>
            为通用设置在现有设置的基础上添加排在开头的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveColHead(System.String[])">
            <summary>
            为通用设置在现有设置的基础上移除排在开头的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetColFoot(System.String[])">
            <summary>
            重新设置通用设置排在结尾的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddColFoot(System.String[])">
            <summary>
            为通用设置在现有设置的基础上添加排在结尾的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveColFoot(System.String[])">
            <summary>
            为通用设置在现有设置的基础上移除排在结尾的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetColIndex(System.String[])">
            <summary>
            重新设置通用设置创建索引的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddColIndex(System.String[])">
            <summary>
            为通用设置在现有设置的基础上添加创建索引的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveColIndex(System.String[])">
            <summary>
            为通用设置在现有设置的基础上移除创建索引的列名称
            </summary> 
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetColHead(System.Type,System.String[])">
            <summary>
            重新设置指定类型排在开头的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddColHead(System.Type,System.String[])">
            <summary>
            为指定类型在现有设置的基础上添加排在开头的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveColHead(System.Type,System.String[])">
            <summary>
            为指定类型在现有设置的基础上移除排在开头的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetColFoot(System.Type,System.String[])">
            <summary>
            重新设置指定类型排在结尾的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddColFoot(System.Type,System.String[])">
            <summary>
            为指定类型在现有设置的基础上添加排在结尾的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveColFoot(System.Type,System.String[])">
            <summary>
            为指定类型在现有设置的基础上移除排在结尾的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetColIndex(System.Type,System.String[])">
            <summary>
            重新设置指定类型创建索引的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddColIndex(System.Type,System.String[])">
            <summary>
            为指定类型在现有设置的基础上添加创建索引的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveColIndex(System.Type,System.String[])">
            <summary>
            为指定类型在现有设置的基础上移除创建索引的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddColSortConvert(System.String,System.String)">
            <summary>
            在现有配置的基础上为通用设置添加排序字段转换设置
            </summary>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetColSortConvert(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            为通用设置重新设置排序字段转换设置
            </summary>
            <param name="sortConverts"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveColSortConverts(System.String[])">
            <summary>
            在现有配置的基础上为通用设置移除排序字段转换设置
            </summary>
            <param name="sortOriginals"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddColSortConvert(System.Type,System.String,System.String)">
            <summary>
            在现有配置的基础上为指定类型添加排序字段转换设置
            </summary>
            <param name="type"></param>
            <param name="sortOriginal"></param>
            <param name="sortConvert"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetColSortConvert(System.Type,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            为指定类型重新设置排序字段转换设置
            </summary>
            <param name="type"></param>
            <param name="sortConverts"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveColSortConverts(System.Type,System.String[])">
            <summary>
            在现有配置的基础上为指定类型移除排序字段转换设置
            </summary>
            <param name="type"></param>
            <param name="sortOriginals"></param>
        </member>
        <member name="P:KdCore.DataBase.BbDbTableConfigs.TypesConfigs">
            <summary>
            指定类型的排在数据表开头的列名称
            </summary>
        </member>
        <member name="P:KdCore.DataBase.BbDbTableConfigs.BaseConfig">
            <summary>
            当前配置未设置时采用的替代基础配置
            </summary>
        </member>
        <member name="P:KdCore.DataBase.BbDbTableConfigs.DbTableHeadColumns">
            <summary>
            排在数据表开头的列名称：所有类型在未做特殊设置时通用，全局生效
            </summary>
        </member>
        <member name="P:KdCore.DataBase.BbDbTableConfigs.DbTableFootColumns">
            <summary>
            排在数据表结尾的列名称：所有类型在未做特殊设置时通用，全局生效
            </summary>
        </member>
        <member name="P:KdCore.DataBase.BbDbTableConfigs.DbTableIndexColumns">
            <summary>
            默认创建索引的列名称：所有类型在未做特殊设置时通用，全局生效
            </summary>
        </member>
        <member name="P:KdCore.DataBase.BbDbTableConfigs.DbTableSortConverts">
            <summary>
            默认进行排序的列名称：所有类型在未做特殊设置时通用，全局生效
            </summary>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.GetTypeConfig(System.Type,System.Boolean)">
            <summary>
            获取指定类型的数据库表配置
            </summary>
            <param name="type"></param>
            <param name="autoAdd"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.GetColumnOrder(System.String)">
            <summary>
            获取指定列名的通用配置的表结构生成顺序
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.GetColumnIndex(System.String)">
            <summary>
            获取指定列名的通用配置的索引生成顺序
            </summary>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.GetSortConvert(System.String)">
            <summary>
            获取指定排序字段的通用配置的排序名称转换结果
            </summary>
            <param name="sortName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.GetColumnOrder(System.Type,System.String)">
            <summary>
            获取指定列名的在指定类型的配置中的表结构生成顺序
            </summary>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.GetColumnIndex(System.Type,System.String)">
            <summary>
            获取指定列名的在指定类型的配置中的索引生成顺序
            </summary>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.GetSortConvert(System.Type,System.String)">
            <summary>
            获取指定排序字段的在指定类型的配置中的排序名称转换结果
            </summary>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetHeadColumns(System.String[])">
            <summary>
            为通用设置重新设置排在开头的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddHeadColumns(System.String[])">
            <summary>
            在现有配置的基础上为通用设置添加排在开头的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveHeadColumns(System.String[])">
            <summary>
            在现有配置的基础上为通用设置移除排在开头的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetFootColumns(System.String[])">
            <summary>
            为通用设置重新设置排在结尾的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddFootColumns(System.String[])">
            <summary>
            在现有配置的基础上为通用设置添加排在结尾的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveFootColumns(System.String[])">
            <summary>
            在现有配置的基础上为通用设置移除排在结尾的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddIndexColumns(System.String[])">
            <summary>
            在现有配置的基础上为通用设置添加生成索引的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetIndexColumns(System.String[])">
            <summary>
            为通用设置重新设置生成索引的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveIndexColumns(System.String[])">
            <summary>
            在现有配置的基础上为通用设置移除生成索引的列名称
            </summary>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetHeadColumns(System.Type,System.String[])">
            <summary>
            为指定类型重新设置排在开头的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddHeadColumns(System.Type,System.String[])">
            <summary>
            为指定类型添加排在开头的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveHeadColumns(System.Type,System.String[])">
            <summary>
            为指定类型移除排在开头的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetFootColumns(System.Type,System.String[])">
            <summary>
            为指定类型重新设置排在结尾的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddFootColumns(System.Type,System.String[])">
            <summary>
            为指定类型添加排在结尾的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveFootColumns(System.Type,System.String[])">
            <summary>
            为指定类型移除排在结尾的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetIndexColumns(System.Type,System.String[])">
            <summary>
            为指定类型重新设置生成索引的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddIndexColumns(System.Type,System.String[])">
            <summary>
            为指定类型添加生成索引的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveIndexColumns(System.Type,System.String[])">
            <summary>
            为指定类型移除生成索引的列名称
            </summary>
            <param name="type"></param>
            <param name="columnNames"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddSortConvert(System.String,System.String)">
            <summary>
            在现有配置的基础上为通用设置添加排序字段转换设置
            </summary>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetSortConvert(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            为通用设置重新设置排序字段转换设置
            </summary>
            <param name="sortConverts"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveSortConverts(System.String[])">
            <summary>
            在现有配置的基础上为通用设置移除排序字段转换设置
            </summary>
            <param name="sortOriginals"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.AddSortConvert(System.Type,System.String,System.String)">
            <summary>
            在现有配置的基础上为指定类型添加排序字段转换设置
            </summary>
            <param name="type"></param>
            <param name="sortOriginal"></param>
            <param name="sortConvert"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.SetSortConvert(System.Type,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            为指定类型重新设置排序字段转换设置
            </summary>
            <param name="type"></param>
            <param name="sortConverts"></param>
        </member>
        <member name="M:KdCore.DataBase.BbDbTableConfigs.RemoveSortConverts(System.Type,System.String[])">
            <summary>
            在现有配置的基础上为指定类型移除排序字段转换设置
            </summary>
            <param name="type"></param>
            <param name="sortOriginals"></param>
        </member>
        <member name="T:KdCore.DataBase.IDbCommandExtensions">
            <summary>
             IDbCommand 扩展
            </summary>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.CreateCommand(System.Data.IDbConnection,System.Boolean@,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Data.IDbTransaction,System.Data.CommandType)">
            <summary>
            构造 IDbCommand 对象
            </summary>
            <param name="connection">数据库连接</param>
            <param name="needCloseConnection">数据库连接如果当前是关闭的，则可能IDbCommond执行完成后需要进行关闭连接操作</param>
            <param name="commandText">执行的命令字符串</param>
            <param name="parameters">执行SQL 语句或存储过程的有关参数，字典的键为参数名，值为参数值</param>
            <param name="transaction">当前的事务对象</param>
            <param name="type">命令字符串类型</param>
            <returns>IDbCommand对象</returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.CreateCommandSqlText(System.Data.IDbConnection,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Data.IDbTransaction)">
            <summary>
            构造执行 SQL 语句的 IDbCommand 对象
            </summary>
            <param name="connection">数据库连接</param> 
            <param name="commandText">执行的命令文本</param>
            <param name="parameters">执行 SQL 语句的有关参数，字典的键为参数名，值为参数值</param>
            <param name="transaction">当前的事务对象</param>
            <returns>IDbCommand对象</returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.CreateCommondProcedure(System.Data.IDbConnection,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Data.IDbTransaction)">
            <summary>
            构造执行 SQL 语句的 IDbCommand 对象
            </summary>
            <param name="connection">数据库连接</param> 
            <param name="commandProcedure">执行的存储过程</param>
            <param name="parameters">执行存储过程的有关参数，字典的键为参数名，值为参数值</param>
            <param name="transaction">当前的事务对象</param>
            <returns>IDbCommand对象</returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.GetParameter(System.Data.IDbCommand,System.String)">
            <summary>
            获取IDbCommand对象的参数
            </summary>
            <param name="command">IDbCommand对象</param>
            <param name="parameterName">参数名称</param>
            <returns>IDbDataParameter参数对象</returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.CreateParameter(System.Data.IDbCommand,System.String,System.Object,System.Data.ParameterDirection,System.Data.DbType)">
            <summary>
            生成 DbParameter 参数，但不给 command 对象附加
            </summary>
            <param name="command"></param>
            <param name="parameterName"></param>
            <param name="parameterValue"></param>
            <param name="direction"></param>
            <param name="dbType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.AttachParameters(System.Data.IDbCommand,System.Collections.Generic.IEnumerable{System.Data.IDbDataParameter})">
            <summary>
            给IDbCommand对象添加参数
            </summary>
            <param name="command">IDbCommand对象</param>
            <param name="parameters">添加的参数枚举</param>
            <returns>当前的IDbCommand对象</returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.AttachParameters(System.Data.IDbCommand,System.Data.IDataParameterCollection)">
            <summary>
            给IDbCommand对象添加参数
            </summary>
            <param name="command">IDbCommand对象</param>
            <param name="collection"></param>
            <returns>当前的IDbCommand对象</returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.AddOutParameter(System.Data.IDbCommand,System.String,System.Data.DbType,System.Nullable{System.Int32})">
            <summary>
            给IDbCommand对象添加输出参数
            </summary>
            <param name="command">IDbCommand对象</param>
            <param name="parameterName">参数名称</param>
            <param name="dbType">参数数据类型；默认值为 String。  </param>
            <param name="size">参数列中数据的最大大小（以字节为单位）。 从参数值推断默认值。 </param>
            <returns>当前的IDbCommand对象</returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.AddInParameter(System.Data.IDbCommand,System.String,System.Object,System.Data.DbType)">
            <summary>
            给IDbCommand对象添加输入参数
            </summary>
            <param name="command">IDbCommand对象</param>
            <param name="parameterName">参数名称</param>
            <param name="dbType">参数数据类型；默认值为 String。</param>
            <param name="parameterValue">参数数据值</param>
            <returns>当前的IDbCommand对象</returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.AddInOutParameter(System.Data.IDbCommand,System.String,System.Object,System.Data.DbType,System.Nullable{System.Int32})">
            <summary>
            给IDbCommand对象添加输入参数
            </summary>
            <param name="command">IDbCommand对象</param>
            <param name="parameterName">参数名称</param>
            <param name="dbType">参数数据类型；默认值为 String。</param>
            <param name="parameterValue">参数数据值</param>
            <param name="parameterSize">参数的大小，列中数据的最大大小（以字节为单位）</param>
            <returns>当前的IDbCommand对象</returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.AddReturnParameter(System.Data.IDbCommand,System.String,System.Data.DbType)">
            <summary>
            给IDbCommand对象添加返回值参数
            </summary>
            <param name="command">IDbCommand对象</param>
            <param name="parameterName">参数名称</param>
            <param name="dbType">参数数据类型；默认值为 String。</param>
            <returns>当前的IDbCommand对象</returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.GetBytes(System.Data.IDataReader,System.Int32)">
            <summary>
            读取行记录中指定列的字节数组
            </summary>
            <param name="reader"></param>
            <param name="colIndex"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.DataBase.IDbCommandExtensions.GetBytes(System.Data.IDataReader,System.String)">
            <summary>
            读取行记录中指定列的字节数组
            </summary>
            <param name="reader"></param>
            <param name="colName"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.AsyncTaskInvoke">
            <summary>
            异步调用的无参数异步执行方法的委托类型声明
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.AsyncTaskInvoke`1">
            <summary>
            异步调用的无参数异步执行方法的委托类型声明
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.MethodInvoke">
            <summary>
            异步调用的无参数方法的委托类型声明
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.MethodInvoke`1">
            <summary>
            异步调用的无参数方法的委托类型声明
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.CacheResetEventHandler">
            <summary>
            重置缓存的事件委托类型声明
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.BbGlobalConfig">
            <summary>
            系统程序基本配置与管理
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.CacheExpiredMinutes">
            <summary>
            获取或设置系统数据缓存默认的绝对过期时间，以分钟为单位
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UserCacheSlidingExpiration">
            <summary>
            获取或设置当前登录用户缓存的相对过期时间
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UserTokenAbsoluteExpirationMintues">
            <summary>
            获取或设置 UserToken 的绝对过期时间
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UserTokenSlidingExpirationMintues">
            <summary>
            获取或设置 UserToken 的相对过期时间
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.AppIdToken">
            <summary>
            获取或设置自动登录时用于识别当前应用程序 AppToken
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_TokenAppId">
            <summary>
            获取或设置自动登录时来源应用程序 AppToken 的取值参数名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_TokenUserLogin">
            <summary>
            获取或设置自动登录时用户登录令牌 UserToken 的取值参数名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_TokenUserVerify">
            <summary>
            获取或设置自动登录时用户验证令牌 UserToken 的取值参数名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_DataSource">
            <summary>
            参数名称，标识操作数据来源路径的参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_UISource">
            <summary>
            参数名称，标识操作界面来源路径的参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.CacheKey_BackUIPath">
            <summary>
            缓存名称，缓存的操作界面来源路径的名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.WebApi_AcceptMimeTypes">
            <summary>
            WebAPI 或 Ajax 请求时获取客户端支持的 MIME 接受类型的数组。        
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.JavaScript_VOID">
            <summary>
            表示 Href 空链接的 JavaScript 替代表达式
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Id">
            <summary>
            实体属性字符串类型的默认最大长度：Id 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Title">
            <summary>
            实体属性字符串类型的默认最大长度：Title 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Content">
            <summary>
            实体属性字符串类型的默认最大长度：Content 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Name">
            <summary>
            实体属性字符串类型的默认最大长度：Name 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_MarkCode">
            <summary>
            实体属性字符串类型的默认最大长度：MarkCode
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_SN">
            <summary>
            实体属性字符串类型的默认最大长度：SN 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Code">
            <summary>
            实体属性字符串类型的默认最大长度：Code
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Codes">
            <summary>
            实体属性字符串类型的默认最大长度：Codes
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Type">
            <summary>
            实体属性字符串类型的默认最大长度：Type 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Mail">
            <summary>
            实体属性字符串类型的默认最大长度：Mail 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Mobile">
            <summary>
            实体属性字符串类型的默认最大长度：Mobile 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Phone">
            <summary>
            实体属性字符串类型的默认最大长度：Phone 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_DeptPath">
            <summary>
            实体属性字符串类型的默认最大长度：DeptPath 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_DutyPath">
            <summary>
            实体属性字符串类型的默认最大长度：DutyPath 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Url">
            <summary>
            实体属性字符串类型的默认最大长度：Url 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Remarks">
            <summary>
            实体属性字符串类型的默认最大长度：Remarks 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Notes">
            <summary>
            实体属性字符串类型的默认最大长度：Notes 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Other1">
            <summary>
            实体属性字符串类型的默认最大长度：Other1 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Other2">
            <summary>
            实体属性字符串类型的默认最大长度：Other2
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Other3">
            <summary>
            实体属性字符串类型的默认最大长度：Other3 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Other4">
            <summary>
            实体属性字符串类型的默认最大长度：Other4
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Other5">
            <summary>
            实体属性字符串类型的默认最大长度：Other5
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Other6">
            <summary>
            实体属性字符串类型的默认最大长度：Other6 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Other7">
            <summary>
            实体属性字符串类型的默认最大长度：Other7 
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.String_MaxLength_Other8">
            <summary>
            实体属性字符串类型的默认最大长度：Other8
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageSize_Editable">
            <summary>
            获取或设置是否可以修改每页条数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageIndex_Editable">
            <summary>
            是否可以直接指定跳转到的页数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PwdNeedEncryptBeforeVerify">
            <summary>
            获取或设置密码在验证前是否需要加密
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_UrlMapKey">
            <summary>
            页面参数：短网址转换码
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_Ticks">
            <summary>
            页面参数：页面时间标识
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_DebugMode">
            <summary>
            页面参数：Debug 模式标识
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_AjaxMode">
            <summary>
            页面参数：ajax 模式标识
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_DlgMode">
            <summary>
            页面参数：对话框模式标识
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_ActionName">
            <summary>
            页面参数：来源 Action 的识别标识
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_TabPanelID">
            <summary>
            页面参数：需要激活的当前 TabPanel 的 Id
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamValue_SortDefault">
            <summary>
            参数值，标识查询请求是默认排序的排序参数值
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_PageIsBack">
            <summary>
            参数名称，标识查询请求的是否是返回列表（从历史记录中恢复之前的分页信息）的参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageSize_ParamName">
            <summary>
            参数名称，标识每页显示的数据条数的参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageIndex_ParamName">
            <summary>
            参数名称，标识当前请求第几页的参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageSort_ParamName">
            <summary>
            参数名称，标识请求的排序字段名称的参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageQuery_DataType_ParamName">
            <summary>
            参数名称，标识当前请求的数据类型参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageQuery_DataRange_ParamName">
            <summary>
            参数名称，标识当前请求的数据范围参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageQuery_DataRide_ParamName">
            <summary>
            参数名称，标识当前请求的数据控制类型参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageQuery_DataBind_ParamName">
            <summary>
            参数名称，标识当前请求的数据控制类型参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageQuery_DataCode_ParamName">
            <summary>
            参数名称，标识当前请求的数据控制类型参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageQuery_DataKind_ParamName">
            <summary>
            参数名称，标识当前请求的数据控制类型参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageQuery_DataTitle_ParamName">
            <summary>
            参数名称，标识当前请求的数据控制类型参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_PageQuery_Id">
            <summary>
            参数名称前缀标识，标识请求的页面查询字段名称的参数前缀
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_PageQuery_Word">
            <summary>
            参数名称，标识查询请求的关键字的参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_PageUseRadio">
            <summary>
            参数名称，标识查询请求的是否使用单选框的参数
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_PageQuery_CompareMode">
            <summary>
            参数名称，标识查询请求的查询字段的参数值比较方式
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_PageQuery_Affix">
            <summary>
            参数名称，标识查询请求的查询字段有附加值时的参数后缀
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ExtNames_AsyncExclude">
            <summary>
            文件同步时排除的文件扩展名
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_AsyncAuthCode">
            <summary>
            文件同步参数名称：授权验证
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_AsyncType">
            <summary>
            文件同步参数名称：同步类型
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_AsyncTypeFile">
            <summary>
            文件同步参数名称：同步类型
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_AsyncTypeFolder">
            <summary>
            文件同步参数名称：同步类型
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_AsyncFolderName">
            <summary>
            文件同步参数名称：文件夹名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_AsyncFileName">
            <summary>
            文件同步参数名称：文件名
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ParamName_AsyncFileContent">
            <summary>
            文件同步参数名称：文件内容
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Prompt_SelectForDataInput">
            <summary>
            获取或设置数据录入选择提示
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Prompt_SelectForDataSearch">
            <summary>
            获取或设置查询选择提示
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.RootPathVirtual">
            <summary>
            获取或设置当前系统的运行根目录虚拟路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.RootPathPhysics">
            <summary>
            获取或设置当前系统的运行根目录物理路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.FolderName_UploadFiles">
            <summary>
            获取或设置当前系统的上传文件默认保存文件夹名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.FolderName_DbJsonInit">
            <summary>
            获取或设置当前系统的 JSON 初始化数据文件的文件夹名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.FolderName_DbJsonBackup">
            <summary>
            获取或设置当前系统的 JSON 初始化数据备份或加载文件的文件夹名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.FolderName_UsersData">
            <summary>
            获取或设置当前系统的用户个人文件的默认文件夹名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.FolderName_History">
            <summary>
            获取或设置当前系统的文件覆盖时自动备份的文件夹名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.FolderName_ReportTemplates">
            <summary>
            获取或设置当前系统的报表导出等模板文件的默认文件夹名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.FolderName_ReportExports">
            <summary>
            获取或设置当前系统的报表导出文件的默认文件夹名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UrlVerExplain">
            <summary>
            获取或设置系统版本升级说明填写页面
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UrlHome">
            <summary>
            获取或设置系统首页路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UrlDefault">
            <summary>
            获取或设置系统默认打开页面路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UrlLogin">
            <summary>
            获取或设置系统登录路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UrlLogout">
            <summary>
            获取或设置当前登录用户注销登录路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UrlChgPwd">
            <summary>
            获取或设置当前登录用户修改密码页面路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UrlUserReinit">
            <summary>
            获取或设置当前登录用户重新初始化缓存和加载个人设置的页面路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UrlUserNotify">
            <summary>
            获取或设置当前登录用户加载提醒消息的页面路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UseUserHomePage">
            <summary>
            获取或设置是否允许用户自行选择登录后的首页地址（系统配置允许的首页）
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UseUserTheme">
            <summary>
            获取或设置是否动态加载主题的专属 CSS 样式表路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PathTemplate_CssTheme">
            <summary>
            全局设置--主题CSS样式路径格式化模板
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Default_ThemeName">
            <summary>
            全局设置--默认主题样式名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UseUserDevice">
            <summary>
            获取或设置是否动态加载客户端专属 CSS 样式表路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PathTemplate_CssClient">
            <summary>
            全局设置--特定客户端CSS样式路径格式化模板
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UseUserFontSize">
            <summary>
            获取或设置是否动态加载不同字体尺寸的专属 CSS 样式表路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PathTemplate_CssFontSize">
            <summary>
            全局设置--字体大小CSS样式路径格式化模板
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Default_FontSize">
            <summary>
            全局设置--默认主题样式名称
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.UseUserDataLayout">
            <summary>
            获取或设置是否动态加载数据布局样式专属 CSS 样式表路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PathTemplate_CssDataLayout">
            <summary>
            全局设置--特定数据显示布局CSS样式路径格式化模板
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ExtNames_Image">
            <summary>
            获取或设置可识别的图片文件扩展名
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ExtNames_WebImage">
            <summary>
            获取或设置可识别的 Web 图片文件扩展名
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Default_WatermarkPath">
            <summary>
            水印图片的默认路径
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Support_ExtNamesWatermark">
            <summary>
            获取或设置支持添加水印的文件类型
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ShowMsg_OnActionSuccess">
            <summary>
            获取或设置用户操作成功时，是否显示操作结果说明消息。
            清除消息后不用再点击确认关闭消息提示，减少一次确认对话框的弹出
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.ShowMsg_OnJsonSuccess">
            <summary>
            获取或设置通过 Json 方式响应用户操作结果时，是否返回操作成功时的结果说明消息。
            清除消息后不用再点击确认关闭消息提示，减少一次确认对话框的弹出
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Message_SystemError">
            <summary>
            获取或设置系统内部错误的提示信息
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Message_HttpNotFound">
            <summary>
            获取或设置系统 404 错误的提示信息
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Message_RequestUnauthorized">
            <summary>
            获取或设置请求授权受限时的提示信息
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Message_DataOperateSuccess">
            <summary>
            获取或设置默认的操作成功的提示消息
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Message_DataOperateFailure">
            <summary>
            获取或设置默认的操作失败的提示消息
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Message_DataResponseEmpty">
            <summary>
            获取或设置数据查询结果为空时的提示消息
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Message_DataResponseError">
            <summary>
            获取或设置数据查询发生错误时的提示消息
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.Message_DbConnectError">
            <summary>
            获取或设置数据库连接发生错误时的提示消息
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageSort_Default">
            <summary>
            获取或设置默认的排序标识
            </summary>
        </member>
        <member name="P:KdCore.BbGlobalConfig.PageSize_Default">
            <summary>
            获取或设置默认分页每页显示条数
            </summary>
        </member>
        <member name="M:KdCore.BbGlobalConfig.InitDefault(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            初始化默认配置
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:KdCore.BbRandom">
            <summary>
            基本保证每个实例生成随机数都不相同的伪随机数生成器
            </summary>
        </member>
        <member name="P:KdCore.BbRandom.Random">
            <summary>
            当前使用的伪随机数生成器
            </summary>
        </member>
        <member name="M:KdCore.BbRandom.Next">
            <summary>
            返回一个非负随机整数。
            </summary>
            <returns>大于等于零且小于 System.Int32.MaxValue 的 32 位带符号整数。</returns>
        </member>
        <member name="M:KdCore.BbRandom.Next(System.Int32,System.Int32)">
            <summary>
            返回在指定范围内的任意整数。
            </summary>
            <param name="minValue">返回的随机数的下界（随机数可取该下界值）。</param>
            <param name="maxValue">返回的随机数的上限（随机数不能取该上限值）。maxValue 必须大于等于 minValue。</param>
            <returns>大于等于 minValue 且小于 maxValue 的 32 位带符号整数，即：返回值的范围包括 minValue 但不包括 maxValue。如果 minValue 等于 maxValue，则返回 minValue。</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">minValue is greater than maxValue.</exception>
        </member>
        <member name="M:KdCore.BbRandom.Next(System.Int32)">
            <summary>
            返回一个小于所指定最大值的非负随机整数。
            </summary>
            <param name="maxValue">要生成的随机数的上限（随机数不能取该上限值）。maxValue 必须大于或等于 0。</param>
            <returns>大于等于零且小于 maxValue 的 32 位带符号整数，即：返回值的范围通常包括零但不包括 maxValue。但是，如果 maxValue 等于 0，则返回 maxValue。</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">maxValue is less than 0.</exception>
        </member>
        <member name="M:KdCore.BbRandom.NextBytes(System.Byte[])">
            <summary>
            用随机数填充指定字节数组的元素。
            </summary>
            <param name="buffer">包含随机数的字节数组。</param>
            <exception cref="T:System.ArgumentNullException">buffer is null.</exception>
        </member>
        <member name="M:KdCore.BbRandom.NextDouble">
            <summary>
            返回一个大于或等于 0.0 且小于 1.0 的随机浮点数。
            </summary>
            <returns>大于或等于 0.0 且小于 1.0 的双精度浮点数。</returns>
        </member>
        <member name="M:KdCore.BbRandom.NextBoolean">
            <summary>
            获取一个随机布尔值
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextElement``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            从集合中随机挑选一个成员
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ranges"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextFixedLength(System.Int32,System.Boolean)">
            <summary>
            获取一个指定长度的随机整数
            </summary>
            <param name="length">整数位数</param>
            <param name="allowMinus">是否包含负数</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDoubleFixedLength(System.Int32,System.Boolean)">
            <summary>
            获取一个指定长度的随机浮点数
            </summary>
            <param name="length">整数位数</param>
            <param name="allowMinus">是否包含负数</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextNumberString(System.Int32)">
            <summary>
            获取一个随机整数字符串
            </summary>
            <param name="length">整数位数</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextMobileNumber(System.Int32)">
            <summary>
            获取一个随机11位数字的手机号码
            </summary>
        </member>
        <member name="M:KdCore.BbRandom.NextPhoneNumber(System.Int32)">
            <summary>
            获取一个随机的电话号码
            </summary>
        </member>
        <member name="M:KdCore.BbRandom.NextDate(System.Int32)">
            <summary>
            获取随机日期
            </summary>
            <param name="maxValueDaysEarlierThanToday"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDate(System.Nullable{System.DateTime},System.Int32)">
            <summary>
            获取随机日期
            </summary>
            <param name="minDate"></param>
            <param name="maxValueDaysEarlierThanToday"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDate(System.DateTime,System.Int32)">
            <summary>
            获取随机日期
            </summary>
            <param name="minDate"></param>
            <param name="maxValueDaysEarlierThanToday"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDate(System.Nullable{System.DateTime})">
            <summary>
            获取随机日期
            </summary>
            <param name="maxDate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDate(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            获取随机日期
            </summary>
            <param name="minDate"></param>
            <param name="maxDate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDate">
            <summary>
            获取随机日期
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDate(System.DateTime)">
            <summary>
            获取随机日期
            </summary>
            <param name="maxDate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDate(System.DateTime,System.DateTime)">
            <summary>
            获取随机日期
            </summary>
            <param name="minDate"></param>
            <param name="maxDate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDateTime(System.Nullable{System.DateTime},System.Int32)">
            <summary>
            获取随机时间
            </summary>
            <param name="minDate"></param>
            <param name="maxValueBeforeNowMinutes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDateTime(System.DateTime,System.Int32)">
            <summary>
            获取随机时间
            </summary>
            <param name="minTime"></param>
            <param name="maxValueBeforeNowMinutes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDateTime(System.Nullable{System.DateTime})">
            <summary>
            获取随机时间
            </summary>
            <param name="maxTime"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDateTime(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            获取随机时间
            </summary>
            <param name="minTime"></param>
            <param name="maxTime"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDateTime">
            <summary>
            获取随机时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDateTime(System.DateTime)">
            <summary>
            获取随机时间
            </summary>
            <param name="maxTime"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbRandom.NextDateTime(System.DateTime,System.DateTime)">
            <summary>
            获取随机时间
            </summary>
            <param name="minTime"></param>
            <param name="maxTime"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.BbCacheManager">
            <summary>
            系统缓存集中管理
            </summary>
        </member>
        <member name="P:KdCore.BbCacheManager.Func_Chains_GetBoundCacheType">
            <summary>
            绑定类型缓存的类型绑定标识配置
            </summary>
        </member>
        <member name="M:KdCore.BbCacheManager.AddFuncGetBoundCacheType(System.Func{System.Type,System.String})">
            <summary>
            设置绑定类型缓存的类型绑定标识的获取方法
            </summary>
        </member>
        <member name="M:KdCore.BbCacheManager.RemoveFuncGetBoundCacheType(System.Func{System.Type,System.String})">
            <summary>
            移除绑定类型缓存的类型绑定标识的获取方法
            </summary>
        </member>
        <member name="M:KdCore.BbCacheManager.ClearFuncGetBoundCacheType">
            <summary>
            清除绑定类型缓存的类型绑定标识的获取方法
            </summary>
        </member>
        <member name="M:KdCore.BbCacheManager.GetBoundCacheType(System.Type)">
            <summary>
            获取指定绑定类型缓存的类型绑定标识；
            如果未设置，则使用该类型的的完全限定名称，包括其命名空间，但不包括程序集 <see cref="P:System.Type.FullName"/>。
            </summary>
        </member>
        <member name="P:KdCore.BbCacheManager.ST_CacheInitFuncs">
            <summary>
            缓存初始化的方法的缓存
            </summary>
        </member>
        <member name="M:KdCore.BbCacheManager.SetInitFunc(System.String,System.Func{KdCore.BbBoundCachePool})">
            <summary>
            设置特定识别编码的树结构的获取所有树节点的方法
            </summary>
        </member>
        <member name="M:KdCore.BbCacheManager.GetInitFunc(System.String)">
            <summary>
            获取已设置树结构的获取所有树节点的方法；
            如果未设置，则使用该类型树结构的默认获取方法
            </summary>
        </member>
        <member name="M:KdCore.BbCacheManager.GetCaches``1">
            <summary>
            获取指定数据类型关联绑定的缓存池实例
            </summary>
            <typeparam name="TCacheBound"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbCacheManager.GetMemoryCache``1(``0)">
            <summary>
            从与数据类型关联的缓存池中获取指定数据所关联的缓存
            </summary>
            <typeparam name="TCacheBound"></typeparam>
            <param name="bound"></param>
        </member>
        <member name="M:KdCore.BbCacheManager.RemoveCache``1(``0)">
            <summary>
            移除指定数据所关联的缓存数据
            </summary>
            <typeparam name="TCacheBound"></typeparam>
            <param name="bound"></param>
        </member>
        <member name="M:KdCore.BbCacheManager.SetCache``1(``0,System.String,System.Object)">
            <summary>
            设置指定数据所关联的缓存数据
            </summary>
            <typeparam name="TCacheBound"></typeparam>
            <param name="bound"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbCacheManager.GetCache``1(``0,System.String)">
            <summary>
            获取指定数据所关联的缓存数据
            </summary>
            <typeparam name="TCacheBound"></typeparam>
            <param name="bound"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbCacheManager.GetCache``2(``0,System.String)">
            <summary>
            获取指定数据所关联的缓存数据
            </summary>
            <typeparam name="TCacheBound"></typeparam>
            <typeparam name="TItem"></typeparam>
            <param name="bound"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.BbDataBoundCaches`1">
            <summary>
            系统数据缓存等相关管理
            </summary>
        </member>
        <member name="M:KdCore.BbDataBoundCaches`1.GetBoundKey(System.Object)">
            <summary>
            获取缓存绑定范围的标识主键
            </summary>
            <param name="bound"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.BbBoundCachePool">
            <summary>
            与特定数据类型关联绑定的缓存池
            </summary>
        </member>
        <member name="F:KdCore.BbBoundCachePool._dispose">
            <summary>
            标记当前对象是否已释放资源
            </summary>
        </member>
        <member name="P:KdCore.BbBoundCachePool.BoundCacheType">
            <summary>
            获取绑定范围的缓存的类型标识
            </summary>
        </member>
        <member name="P:KdCore.BbBoundCachePool.BoundCacheName">
            <summary>
            获取绑定范围的缓存的类型名称
            </summary>
        </member>
        <member name="P:KdCore.BbBoundCachePool.BoundCaches">
            <summary>
            获取以绑定范围标识主键为键值的的数据缓存
            </summary>
        </member>
        <member name="M:KdCore.BbBoundCachePool.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:KdCore.BbBoundCachePool.Dispose">
            <summary>
            释放占用资源
            </summary>
        </member>
        <member name="M:KdCore.BbBoundCachePool.Dispose(System.Boolean)">
            <summary>
            释放占用资源
            </summary>
        </member>
        <member name="M:KdCore.BbBoundCachePool.Reset">
            <summary>
            重置缓存数据，清除当前所有的已缓存数据
            </summary>
        </member>
        <member name="M:KdCore.BbBoundCachePool.KdBase_CacheReset(System.Object,KdCore.Cache.CacheResetEventArgs)">
            <summary>
            缓存重置事件处理
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KdCore.BbBoundCachePool.GetBoundKey(System.Object)">
            <summary>
            获取缓存绑定范围的标识主键
            </summary>
            <param name="bound"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBoundCachePool.GetCacheBoundKey(System.Object)">
            <summary>
            获取缓存绑定范围的缓存标识
            </summary>
            <param name="bound"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBoundCachePool.GetMemoryCache(System.String)">
            <summary>
            获取指定缓存绑定范围的缓存
            </summary>
            <param name="boundKey"></param>
        </member>
        <member name="M:KdCore.BbBoundCachePool.GetMemoryCache(System.Object)">
            <summary>
            获取指定缓存绑定范围的缓存
            </summary>
            <param name="bound"></param>
        </member>
        <member name="M:KdCore.BbBoundCachePool.RemoveCache(System.String)">
            <summary>
            获取指定缓存绑定范围的缓存
            </summary>
            <param name="boundKey"></param>
        </member>
        <member name="M:KdCore.BbBoundCachePool.SetCache(System.String,System.String,System.Object)">
            <summary>
            设置指定缓存绑定范围的缓存数据
            </summary>
            <param name="boundKey"></param>
            <param name="cacheKey"></param>
            <param name="value"></param>
        </member>
        <member name="M:KdCore.BbBoundCachePool.GetCache(System.String,System.String)">
            <summary>
            获取指定缓存绑定范围的缓存
            </summary>
            <param name="boundKey"></param>
            <param name="cacheKey"></param>
        </member>
        <member name="M:KdCore.BbBoundCachePool.GetCache``1(System.String,System.String)">
            <summary>
            获取指定缓存绑定范围的缓存数据
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="boundKey"></param>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBoundCachePool.RemoveCache(System.Object)">
            <summary>
            移除指定缓存绑定范围的缓存
            </summary>
            <param name="bound"></param>
        </member>
        <member name="M:KdCore.BbBoundCachePool.SetCache(System.Object,System.String,System.Object)">
            <summary>
            设置指定缓存绑定范围的缓存数据
            </summary>
            <param name="bound"></param>
            <param name="cacheKey"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBoundCachePool.GetCache(System.Object,System.String)">
            <summary>
            获取指定缓存绑定范围的缓存数据
            </summary>
            <param name="bound"></param>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBoundCachePool.GetCache``1(System.Object,System.String)">
            <summary>
            获取指定缓存绑定范围的缓存数据
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="bound"></param>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Cache.CacheResetEventArgs">
            <summary>
            缓存重置事件参数
            </summary>
        </member>
        <member name="P:KdCore.Cache.CacheResetEventArgs.CacheType">
            <summary>
            重置的缓存类型
            </summary>
        </member>
        <member name="P:KdCore.Cache.CacheResetEventArgs.ResetReason">
            <summary>
            重置的缓存原因
            </summary>
        </member>
        <member name="P:KdCore.Cache.CacheResetEventArgs.EarliestTime">
            <summary>
            重置时保留缓存的最早时间
            </summary>
        </member>
        <member name="P:KdCore.Cache.CacheResetEventArgs.ReserveDuration">
            <summary>
            重置时保留缓存的时间间隔
            </summary>
        </member>
        <member name="P:KdCore.Cache.CacheResetEventArgs.ResetFailure">
            <summary>
            重置缓存是否失败
            </summary>
        </member>
        <member name="P:KdCore.Cache.CacheResetEventArgs.Result">
            <summary>
            重置结果
            </summary>
        </member>
        <member name="M:KdCore.Cache.CacheResetEventArgs.AffectType(System.String)">
            <summary>
            判断是否不影响指定的缓存类型
            </summary>
            <param name="cacheType"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Cache.BbMemoryCaches`1">
            <summary>
            通用缓存管理基类
            默认情况下，缓存添加时按照默认设置进行配置移除规则
            默认规则为：
            1、添加到缓存后60分钟强制过期
            2、无访问30分钟后移除
            3、手动移除
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
        </member>
        <member name="F:KdCore.Cache.BbMemoryCaches`1._caches">
            <summary>
            默认实例声明变量
            </summary>
        </member>
        <member name="P:KdCore.Cache.BbMemoryCaches`1.Caches">
            <summary>
            默认实例
            </summary>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.#ctor(System.Runtime.Caching.CacheItemPolicy)">
            <summary>
            构造函数
            </summary>
            <param name="policy">默认缓存策略</param>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.#ctor(System.Int32,System.Int32,System.Runtime.Caching.CacheEntryRemovedCallback)">
            <summary>
            构造函数；仅当绝对有效期设置为小于等于0时，相对有效期才起作用
            </summary>
            <param name="sliding">缓存的相对有效期（分钟数），无任何调用后自动移除的分钟数</param>
            <param name="absolute">缓存的绝对有效期（分钟数），连续一直调用访问也会自动移除的分钟数</param> 
            <param name="onRemoved">移除后的调用委托</param> 
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.#ctor(System.Int32,System.Int32,System.Runtime.Caching.CacheEntryUpdateCallback)">
            <summary>
            构造函数；仅当绝对有效期设置为小于等于0时，相对有效期才起作用
            </summary>
            <param name="sliding">缓存的相对有效期（分钟数），无任何调用后自动移除的分钟数</param>
            <param name="absolute">缓存的绝对有效期（分钟数），连续一直调用访问也会自动移除的分钟数</param> 
            <param name="onUpdate">更新前的调用委托</param>
        </member>
        <member name="F:KdCore.Cache.BbMemoryCaches`1._cachePool">
            <summary>
            存储数据的内存缓存实例
            </summary>
        </member>
        <member name="P:KdCore.Cache.BbMemoryCaches`1.CachePool">
            <summary>
            当前缓存的内存缓存实例
            </summary>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.InitCache(System.Collections.Specialized.NameValueCollection)">
            <summary>
            初始化缓存配置，已初始化过正在使用的缓存也将
            </summary>
            <param name="cacheConfig">用于配置缓存的配置信息的名称-值对集合。</param>
            <returns>初始化后的内存缓存</returns>
        </member>
        <member name="P:KdCore.Cache.BbMemoryCaches`1.DefaultCacheCapabilities">
            <summary>
            获取缓存提供的功能的说明。
            </summary>
            <remarks>标志的按位组合，这些标志指示缓存实现的默认功能。</remarks>
        </member>
        <member name="P:KdCore.Cache.BbMemoryCaches`1.FuncInitItem">
            <summary>
            缓存中不存在指定键时的初始化方法
            </summary>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.InitItem(System.String)">
            <summary>
            缓存中不存在指定键时的默认初始化方法，需要在子类中override，基类中始终返回null
            </summary>
            <param name="key">初始化的键</param>
            <returns>当前基类中始终返回null</returns>
        </member>
        <member name="P:KdCore.Cache.BbMemoryCaches`1.DefaultAbsolute">
            <summary>
            获取或设置缓存的绝对有效期（分钟数），
            该值指示是否应在指定持续时间过后逐出某个缓存项。
            小于0则无绝对过期时间
            </summary>
        </member>
        <member name="P:KdCore.Cache.BbMemoryCaches`1.DefaultSliding">
            <summary> 
            获取或设置缓存的相对有效期（分钟数），
            该值指示如果某个缓存项在给定时段内未被访问，是否应被逐出。
            小于0则无相对过期时间
            </summary>
        </member>
        <member name="P:KdCore.Cache.BbMemoryCaches`1.DefaultOnUpdate">
            <summary>
            从缓存中移除某个项前将调用的默认委托
            </summary>
        </member>
        <member name="P:KdCore.Cache.BbMemoryCaches`1.DefaultOnRemoved">
            <summary>
            从缓存中移除某个项后将调用的默认委托
            </summary>
        </member>
        <member name="P:KdCore.Cache.BbMemoryCaches`1.DefaultPolicy">
            <summary>
            获取或设置缓存缓存和过期策略，无绝对过期时间
            </summary>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.GetCurrDefaultPolicy">
            <summary>
            按当前默认设置生成缓存策略，有绝对过期时间
            </summary>
        </member>
        <member name="P:KdCore.Cache.BbMemoryCaches`1.Item(System.String)">
            <summary>
            获取或设置指定键的缓存项。 
            </summary>
            <param name="cacheKey">要获取或设置的缓存值的唯一标识符。</param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Cache.BbMemoryCaches`1.ItemCount">
            <summary>
            获取缓存中的缓存项总数。
            </summary>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.Contains(System.String)">
            <summary>
            确定缓存中是否存在某个缓存项。
            </summary>
            <param name="cacheKey">要搜索的缓存项的唯一标识符。</param>
            <returns>如果缓存中包含其键与 key 匹配的缓存项，则为 true；否则为 false。</returns>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.GetAllKeys">
            <summary>
            获取当前缓存中的所有缓存键
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.Get(System.String)">
            <summary>
            获取一个缓存项。 
            </summary>
            <param name="cacheKey">要获取的缓存项的唯一标识符。</param>
            <returns>如果该项存在，则为对 key 标识的缓存项的引用；否则尝试进行初始化，如果初始化成功则添加到缓存并返回新初始化的项，否则为null。</returns>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.Set(System.String,`0,System.Runtime.Caching.CacheItemPolicy)">
            <summary>
            通过使用键、值和逐出设置，将某个缓存项插入缓存中。
            注意：键和值均不能为 null
            </summary>
            <param name="cacheKey">要插入的缓存项的唯一标识符。</param>
            <param name="cacheItem">该缓存项的数据。</param>  
            <param name="policy">指定缓存项的一组逐出和过期详细信息</param> 
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.Set(System.String,`0,System.TimeSpan,System.DateTimeOffset,System.Runtime.Caching.CacheEntryRemovedCallback,System.Runtime.Caching.CacheEntryUpdateCallback)">
            <summary>
            通过使用键、值和逐出设置，将某个缓存项插入缓存中。
            注意：键和值均不能为 null
            </summary>
            <param name="cacheKey">要插入的缓存项的唯一标识符。</param>
            <param name="cacheItem">该缓存项的数据。</param>  
            <param name="sliding">该项的固定过期时间间隔。</param> 
            <param name="absolute">该项的固定过期时间点。</param> 
            <param name="removedCallback">在从缓存中移除该项后将调用的委托</param>
            <param name="updateCallback">在从缓存中移除该项前将调用的委托</param>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.Set(System.String,`0,System.TimeSpan,System.Runtime.Caching.CacheEntryUpdateCallback,System.Runtime.Caching.CacheEntryRemovedCallback)">
            <summary>
            通过使用键、值和逐出设置，将某个缓存项插入缓存中。
            注意：键和值均不能为 null
            </summary>
            <param name="cacheKey">要插入的缓存项的唯一标识符。</param>
            <param name="cacheItem">该缓存项的数据。</param>   
            <param name="sliding">该项的固定过期时间间隔。</param> 
            <param name="updateCallback">在从缓存中移除该项前将调用的委托</param>
            <param name="removedCallback">在从缓存中移除该项后将调用的委托</param>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.Set(System.String,`0,System.DateTimeOffset,System.Runtime.Caching.CacheEntryRemovedCallback,System.Runtime.Caching.CacheEntryUpdateCallback)">
            <summary>
            通过使用键、值和逐出设置，将某个缓存项插入缓存中。
            注意：键和值均不能为 null
            </summary>
            <param name="cacheKey">要插入的缓存项的唯一标识符。</param>
            <param name="cacheItem">该缓存项的数据。</param>   
            <param name="absolute">该项的固定过期时间点。</param> 
            <param name="removedCallback">在从缓存中移除该项后将调用的委托</param>
            <param name="updateCallback">在从缓存中移除该项前将调用的委托</param>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.Remove(System.String)">
            <summary>
            从缓存中移除指定键的缓存项
            </summary>
            <param name="cacheKey">要插入的缓存项的唯一标识符。</param>
            <returns>从 Cache 移除的项。 如果未找到键参数中的值，则返回 null。</returns>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.Trim(System.Int32)">
            <summary>
            从缓存对象中移除指定百分比的缓存项。
            </summary>
            <param name="percent">要移除的缓存项总数的百分比。</param>
            <returns>从缓存中移除的项数。</returns>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            返回与指定的键对应的一组缓存项。
            </summary>
            <param name="keys">要返回的缓存项的一组唯一标识符。</param>
            <returns>与指定的键对应的一组缓存项。</returns>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.GetValues(System.String[])">
            <summary>
            返回与指定的键对应的一组缓存项。
            </summary>
            <param name="keys">要返回的缓存项的一组唯一标识符。</param>
            <returns>与指定的键对应的一组缓存项。</returns>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.Dispose">
            <summary>
            释放由当前实例中的 System.Runtime.Caching.MemoryCache 类的实例占用的所有资源。
            </summary>
        </member>
        <member name="M:KdCore.Cache.BbMemoryCaches`1.Dispose(System.Boolean)">
            <summary>
            释放由当前实例中的 System.Runtime.Caching.MemoryCache 类的实例占用的所有资源。
            </summary>
        </member>
        <member name="T:KdCore.Data.BbDataAction">
            <summary>
            数据操作类型
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.NoneKD">
            <summary>
            未知类型操作，添加KD结尾避免将来命名冲突
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.AutoKD">
            <summary>
            系统根据上下文自行判断进行初始化，添加KD结尾避免将来命名冲突
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.List">
            <summary>
            查看列表 
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Index">
            <summary>
            查看列表页
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Search">
            <summary>
            查询
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Query">
            <summary>
            查询
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Detail">
            <summary>
            查看详细
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Return">
            <summary>
            返回
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Add">
            <summary>
            添加
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Create">
            <summary>
            添加
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Edit">
            <summary>
            编辑
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Modify">
            <summary>
            编辑
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Relay">
            <summary>
            转发
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Forward">
            <summary>
            转发
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Reply">
            <summary>
            回复
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Manage">
            <summary>
            管理
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.DeleteEnforce">
            <summary>
            强制删除
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Disable">
            <summary>
            禁用
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Enable">
            <summary>
            启用
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Save">
            <summary>
            保存
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Reset">
            <summary>
            重置
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Submit">
            <summary>
            提交
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Backup">
            <summary>
            备份
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Load">
            <summary>
            加载
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Reinit">
            <summary>
            重新初始化
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Audit">
            <summary>
            审核
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Review">
            <summary>
            评审
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Assent">
            <summary>
            同意、赞成
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Dissent">
            <summary>
            异议、反对
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Cancel">
            <summary>
            取消
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Refresh">
            <summary>
            刷新
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.First">
            <summary>
            第一个
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Last">
            <summary>
            最后一个
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Previous">
            <summary>
            上一个
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Next">
            <summary>
            下一个
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Left">
            <summary>
            向左
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Right">
            <summary>
            向右
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Up">
            <summary>
            向上
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Down">
            <summary>
            向下
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Clear">
            <summary>
            清除、清空
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Chart">
            <summary>
            图表
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Report">
            <summary>
            报表
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Stats">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Print">
            <summary>
            打印
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Send">
            <summary>
            发送
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Receive">
            <summary>
            接收
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Import">
            <summary>
            导入
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataAction.Export">
            <summary>
            导出
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdDataEntity">
            <summary>
            具有主键的数据实体类型标识接口
            </summary>
        </member>
        <member name="M:KdCore.Data.IKdDataEntity.GetDataKey">
            <summary>
            获取当前数据唯一主键标识
            </summary>
        </member>
        <member name="M:KdCore.Data.IKdDataEntity.SetDataKey(System.Object,System.Boolean)">
            <summary>
            设置当前数据唯一主键标识
            </summary>
            <param name="key">要设置的主键值，参数值为空字符串时将自动生成一个主键</param>
            <param name="filterIdValue">是否进行字符检测过滤</param>
        </member>
        <member name="M:KdCore.Data.IKdDataEntity.GetDataTitle">
            <summary>
            获取当前数据的显示标题名称
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.IKdEntityBase">
            <summary>
            数据实体基本接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityBase.AuthView">
            <summary>
            获取或设置数据的权限验证是否允许查看
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityBase.AuthWork">
            <summary>
            获取或设置数据的权限验证是否允许操作
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityBase.DisabledView">
            <summary>
            获取或设置数据是否禁止查看
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityBase.AllowedView">
            <summary>
            获取或设置数据是否允许查看
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityBase.DisabledEdit">
            <summary>
            获取或设置数据是否禁止编辑
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityBase.AllowedEdit">
            <summary>
            获取或设置数据是否允许编辑
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityBase.DisabledDelete">
            <summary>
            获取或设置是否有禁止删除
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityBase.AllowedDelete">
            <summary>
            获取或设置数据是否允许删除
            </summary>
        </member>
        <member name="M:KdCore.Data.IKdEntityBase.CopyEditValuesFrom(KdCore.Data.EditModels.KdBaseEdit)">
            <summary>
            将用户编辑的数据复制到当前对象。
            </summary>
            <param name="editModel"></param>
        </member>
        <member name="T:KdCore.Data.IKdTempSort">
            <summary>
            支持临时排序的数据实体基本接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdTempSort.TempSort0">
            <summary>
            获取或设置临时排序序号0
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdTempSort.TempSort1">
            <summary>
            获取或设置临时排序序号1
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdTempSort.TempSort2">
            <summary>
            获取或设置临时排序序号2
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdTempSort.TempSort3">
            <summary>
            获取或设置临时排序序号3
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdTempSort.TempSort4">
            <summary>
            获取或设置临时排序序号4
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdTempSort.TempSort5">
            <summary>
            获取或设置临时排序序号5
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdSaveMode">
            <summary>
            数据实体保存方式接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdSaveMode.SaveMode">
            <summary>
            获取或设置数据保存时需要使用保存方式
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdEntitySort">
            <summary>
            可排序的数据实体接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntitySort.SortNum">
            <summary>
            显示顺序号
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdEntityCreateBase">
            <summary>
            用户创建数据对象接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreateBase.TagDisabled">
            <summary>
            获取或设置状态标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreateBase.IsValid">
            <summary>
            获取数据有效标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreateBase.IsInvalid">
            <summary>
            获取数据无效标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreateBase.CreateTime">
            <summary>
            数据记录创建时间
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreateBase.CreatorUserId">
            <summary>
            获取或设置数据记录创建用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreateBase.CreatorUserName">
            <summary>
            获取或设置数据记录创建用户账户名称
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdEntityModifyBase">
            <summary>
            用户可编辑数据对象接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityModifyBase.TagDeleted">
            <summary>
            获取或设置删除状态标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityModifyBase.ModifyTime">
            <summary>
            获取或设置数据记录最后修改时间
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityModifyBase.ModifierUserId">
            <summary>
            获取或设置数据记录最后修改用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityModifyBase.ModifierUserName">
            <summary>
            获取或设置数据记录最后修改用户账户
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdEntityCreate">
            <summary>
            用户创建数据对象接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreate.CreatorDeptId">
            <summary>
            获取或设置数据记录创建用户所在的部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreate.CreatorDeptName">
            <summary>
            获取或设置数据记录创建用户所在的部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreate.CreatorDutyId">
            <summary>
            获取或设置数据记录创建用户所在的职务主键
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreate.CreatorDutyName">
            <summary>
            获取或设置数据记录创建用户所在的职务名称
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreate.CreatorCorpCode">
            <summary>
            获取或设置数据记录创建用户所在的单位标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityCreate.CreatorCorpName">
            <summary>
            获取或设置数据记录创建用户所在的单位名称
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdEntityKeyId">
            <summary>
            标识已字符串为主键的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityKeyId.Id">
            <summary>
            获取或设置数据实体主键
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityKeyId.IsChanged">
            <summary>
            获取或设置数据是否有改动，不在数据库保存且需要在改动时自行设置该属性值
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdEntityModify">
            <summary>
            用户可编辑数据对象接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityModify.ModifierDeptId">
            <summary>
            获取或设置数据记录最后修改用户所在的部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityModify.ModifierDeptName">
            <summary>
            获取或设置数据记录最后修改用户所在的部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityModify.ModifierCorpCode">
            <summary>
            获取或设置数据记录最后修改用户所在的单位标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityModify.ModifierCorpName">
            <summary>
            获取或设置数据记录最后修改用户所在的单位名称
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdEntityRowVersion">
            <summary>
            标识已字符串为主键的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdEntityRowVersion.VerNum">
            <summary>
            获取或设置数据版本号标识；
            用于并发处理，通常应该由ORM自行维护，无需人工赋值修改
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.BbEntityCore">
            <summary>
            实体对象数据基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.BbEntityCore.Id">
            <summary>
            获取或设置数据实体主键
            构成方式：日期时间+GUID
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.BbEntityCore.IsChanged">
            <summary>
            获取或设置数据是否有改动，不在数据库保存且需要在改动时自行设置该属性值
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.BbEntityCore.Tag">
            <summary>
            获取或设置包含有关联的数据对象。
            返回结果: 一个 System.Object，其中包含有关联的数据对象。 默认值为 null。
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.BbEntityCore.GetDataKey">
            <summary>
            获取当前数据唯一主键标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.BbEntityCore.SetDataKey(System.Object,System.Boolean)">
            <summary>
            设置当前数据唯一主键标识
            </summary>
            <param name="key">要设置的主键值，参数值为空字符串时将自动生成一个主键</param>
            <param name="filterIdValue">是否进行字符检测过滤</param>
        </member>
        <member name="M:KdCore.Data.Entity.BbEntityCore.Equals(System.Object)">
            <summary>
            重写Equals方法
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.BbEntityCore.GetHashCode">
            <summary>
            重写GetHashCode方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.BbEntityCore.Dispose">
            <summary>
            释放占用的资源
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.BbEntityCore.Dispose(System.Boolean)">
            <summary>
            释放占用的资源
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:KdCore.Data.Entity.BbEntityCore.GetDataTitle">
            <summary>
            获取当前数据的标题名称，用于生成待办事项等关联数据时使用，或数据删除时提示显示等
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.BbEntityCore.ToString">
            <summary>
            重写 ToString 方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.EditModels.KdBaseEdit">
            <summary>
            用户页面编辑数据实体基类
            </summary>
        </member>
        <member name="M:KdCore.Data.EditModels.KdBaseEdit.CopyOrCreate``1(``0)">
            <summary>
            将当前对象中编辑后的数据复制到数据实体。
            </summary>
            <param name="entity">被赋值的数据对象，如果为null，则创建一个新实例。</param>
            <returns>已被赋值的对象，可能为新建</returns>
        </member>
        <member name="M:KdCore.Data.EditModels.KdBaseEdit.CreateEntity``1">
            <summary>
            创建一个指定类型的数据实体，并将当前对象中编辑后的数据复制到其中
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.EditModels.KdBaseEdit.CopyToEntity(System.Object)">
            <summary>
            将当前对象中编辑后的数据复制到数据实体。
            </summary>
            <param name="entity">被赋值的数据对象</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.EditModels.KdBaseEdit.OnCopyToEntity(System.Object)">
            <summary>
            将当前对象中编辑后的数据复制到数据实体时，执行的处理操作
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:KdCore.Data.KdUtilDbEntity">
            <summary>
            数据实体扩展处理
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUtilDbEntity.MapEntityTable">
            <summary>
            数据实体表名映射
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUtilDbEntity.MapEntityKey">
            <summary>
            数据实体主键列名映射
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUtilDbEntity.MapEntityColumns">
            <summary>
            数据实体列与属性映射
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.GetDbProperties(System.Type)">
            <summary>
            获取类型中的数据列属性
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.GetDbColumnName(System.Reflection.PropertyInfo)">
            <summary>
            获取类型中属性的数据列名
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.GetMapDbTable(System.Type)">
            <summary>
            获取类型映射的数据库表名，并检查设置的表的架构
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.GetMapDbTable``1">
            <summary>
            获取类型映射的数据库表名，并检查设置的表的架构
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.GetMapDbKey(System.Type)">
            <summary>
            获取类型映射的数据库表主键的列名
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.GetMapDbKey``1">
            <summary>
            获取类型映射的数据库表主键的列名
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.GetMapDbColumns(System.Type)">
            <summary>
            获取类型映射的数据库表的列与属性的映射
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.GetMapDbColumns``1">
            <summary>
            获取类型映射的数据库表的列与属性的映射
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.GetDbProperty(System.Type,System.String)">
            <summary>
            获取类型映射的数据库表的列映射的属性
            </summary>
            <param name="type"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.GetDbProperty(KdCore.Data.IKdDataEntity,System.String)">
            <summary>
            获取类型映射的数据库表的列映射的属性
            </summary>
            <param name="entity"></param>
            <param name="dbName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.SetDbValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.String)">
            <summary>
            给实体属性设置数据库查询结果值
            </summary>
            <param name="property"></param>
            <param name="instance"></param>
            <param name="value"></param>
            <param name="dbType"></param>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.ReadEntity``1(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            从 DataReader 读取数据并转换为实体对象
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="reader"></param>
            <param name="closeReader"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilDbEntity.ReadList``1(System.Data.Common.DbDataReader,System.Boolean)">
            <summary>
            从 DataReader 读取数据并转换为实体对象集合
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="reader"></param>
            <param name="closeReader"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdUtilErrors">
            <summary>
            异常处理扩展
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilErrors.GetSqlException(System.Exception)">
            <summary>
            获取异常或内部异常可能存在的 SqlException
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilErrors.RedoOnSqlDeadLock(System.Exception,System.Int32,KdCore.MethodInvoke)">
            <summary>
            SQL 死锁时重新执行操作
            </summary>
            <param name="ex"></param>
            <param name="waitMilliseconds"></param>
            <param name="invoke"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilErrors.RedoOnSqlDeadLock(System.Exception,KdCore.MethodInvoke,System.Int32)">
            <summary>
            SQL 死锁时重新执行操作
            </summary>
            <param name="ex"></param>
            <param name="invoke"></param>
            <param name="waitMilliseconds"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdDataResult">
            <summary>
            数据操作结果
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DebugMode">
            <summary>
            获取或设置当前是否调试模式，设置为调试模式时，错误信息提供的更详细
            </summary> 
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResultCode">
            <summary>
            获取或设置操作结果编码
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.Success">
            <summary>
            编辑、保存等操作是否成功
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.Failure">
            <summary>
            编辑、保存等操作是否失败
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.KdCode">
            <summary>
            获取或设置 框架内部标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.SuccessCode">
            <summary>
            获取或设置 操作成功的编码数字
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.FailedCode">
            <summary>
            获取或设置 操作失败的编码数字
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ErrorCode">
            <summary>
            获取或设置 的错误编码（一个分配给特定异常的编码数字值）。
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.KdErrorCode">
            <summary>
            获取或设置 框架内部错误编码（一个分配给特定异常的编码数字值）。
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.SqlErrorCode">
            <summary>
            获取或设置 SQL 错误编码（一个分配给特定异常的编码数字值，通常由数据库定义）。
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.CodeLineNumber">
            <summary>
            获取或设置与本次操作相关的代码行号。
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.Count">
            <summary>
            获取或设置操作数据影响条数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.CountSuccess">
            <summary>
            获取或设置操作数据成功的条数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.CountFailed">
            <summary>
            获取或设置操作数据失败的条数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.Title">
            <summary>
            获取或设置此操作的名称或标题
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.NeedReload">
            <summary>
            获取或设置编辑、保存等操作完成后界面是否需要重新加载数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.NeedNext">
            <summary>
            获取或设置操作完成后是否需要继续下一步操作
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.NeedPrev">
            <summary>
            获取或设置操作完成后是否需要返回上一步操作
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.UrlRequest">
            <summary>
            获取或设置数据请求来源 URL 地址
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.UrlRefresh">
            <summary>
            获取或设置编辑、保存等操作完成后界面刷新 URL 地址
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.UrlReferrer">
            <summary>
            获取或设置客户端上次请求的 URL 的信息
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.Source">
            <summary>
            获取或设置操作源数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.SourceId">
            <summary>
            获取或设置操作源数据的主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.Result">
            <summary>
            获取或设置操作结果数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResultId">
            <summary>
            获取或设置操作结果数据的主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResultFailed">
            <summary>
            获取或设置操作失败的结果数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResultSuccess">
            <summary>
            获取或设置操作成功的结果数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.Timestamp">
            <summary>
            获取或设置操作的时间戳
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.RequestMethod">
            <summary>
            获取或设置数据请求的方法标识
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.RequestId">
            <summary>
            获取或设置数据请求的主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResponseId">
            <summary>
            获取或设置数据响应的主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.Message">
            <summary>
            获取或设置操作返回的相关信息说明
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.MessageException">
            <summary>
            获取或设置返回的错误异常消息
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.SuccessNumber">
            <summary>
            获取或设置操作数据成功的一个数字值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.FailedNumber">
            <summary>
            获取或设置操作数据失败的一个数字值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResultNumber">
            <summary>
            获取或设置操作数据结果的一个数字值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResultTime">
            <summary>
            获取或设置操作结果的一个时间值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResultTime2">
            <summary>
            获取或设置操作结果的一个时间值2
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResultTime3">
            <summary>
            获取或设置操作结果的一个时间值3
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResultDigit">
            <summary>
            获取或设置操作结果的一个数字值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResultDigit2">
            <summary>
            获取或设置操作结果的一个数字值2
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ResultDigit3">
            <summary>
            获取或设置操作结果的一个数字值3
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.MsgRequest">
            <summary>
            获取或设置操作请求的附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.MsgResponse">
            <summary>
            获取或设置返回结果的附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.MsgSource">
            <summary>
            获取或设置操作请求的附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.MsgResult">
            <summary>
            获取或设置返回结果的附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.MsgExtra">
            <summary>
            获取或设置返回结果附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.MsgExtra1">
            <summary>
            获取或设置返回结果附加数据1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.MsgExtra2">
            <summary>
            获取或设置返回结果附加数据2
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.MsgExtra3">
            <summary>
            获取或设置返回结果附加数据3
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.MsgExtra4">
            <summary>
            获取或设置返回结果附加数据3
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.QueryId">
            <summary>
            获取或设置查询请求的标识名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataCode">
            <summary>
            获取或设置数据的标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataTitle">
            <summary>
            获取或设置数据的标题名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataKind">
            <summary>
            获取或设置数据的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataBind">
            <summary>
            获取或设置数据的数据绑定类型
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataRide">
            <summary>
            获取或设置数据的数据控制类型
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataRequest">
            <summary>
            获取或设置操作请求的附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataResponse">
            <summary>
            获取或设置返回结果的附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataSource">
            <summary>
            获取或设置操作请求的附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataResult">
            <summary>
            获取或设置返回结果的附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataExtra">
            <summary>
            获取或设置返回结果附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataExtra1">
            <summary>
            获取或设置返回结果附加数据1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataExtra2">
            <summary>
            获取或设置返回结果附加数据2
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataExtra3">
            <summary>
            获取或设置返回结果附加数据3
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataExtra4">
            <summary>
            获取或设置返回结果附加数据4
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.PageSize">
            <summary>
            获取或设置数据项的分页行数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.PageIndex">
            <summary>
            获取或设置数据项的分页页码
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.PageCount">
            <summary>
            获取或设置数据项的分页的总页数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.DataTotal">
            <summary>
            获取或设置数据结果的记录总条目数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ItemCount">
            <summary>
            获取或设置当前查询结果的数据条数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.PageStart">
            <summary>
            获取或设置数据项的页码开始数字，便于页面显示通常从 1 开始
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.PageEnd">
            <summary>
            获取或设置数据项的显示的页码结束数字，便于页面显示通常从 1 开始
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ItemStart">
            <summary>
            获取或设置数据项的开始序号，便于页面显示通常从 1 开始
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.ItemEnd">
            <summary>
            获取或设置数据项的结束序号，便于页面显示通常从 1 开始
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResult.Exception">
            <summary>
            获取或设置操作过程中发生的异常信息
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataResult.Dispose">
            <summary>
            释放占用的资源
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataResult.Dispose(System.Boolean)">
            <summary>
            释放占用的资源
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:KdCore.Data.KdDataResult.SetException(System.Exception)">
            <summary>
            设置当前的错误异常
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:KdCore.Data.KdDataResult.SetMessage(System.String,System.Object[])">
            <summary>
            设置操作结果消息说明 <see cref="P:KdCore.Data.KdDataResult.Message"/>
            </summary>
            <param name="message"></param>
            <param name="msgParams"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.SetSuccess(System.String,System.Object[])">
            <summary>
            设置操作成功，及消息说明 <see cref="P:KdCore.Data.KdDataResult.Message"/>
            </summary>
            <param name="message"></param>
            <param name="msgParams"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.SetError(System.String,System.Object[])">
            <summary>
            设置操作失败/错误，及错误消息说明 <see cref="P:KdCore.Data.KdDataResult.Message"/>
            </summary>
            <param name="errMessage"></param>
            <param name="errMsgParams"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.SetError(System.Exception,System.String,System.Object[])">
            <summary>
            设置操作失败/错误，及错误消息说明 <see cref="P:KdCore.Data.KdDataResult.Message"/>
            </summary>
            <param name="exception"></param>
            <param name="errMessage"></param>
            <param name="errMsgParams"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.SetResult(System.Object,System.String,System.Nullable{System.Boolean})">
            <summary>
            设置操作结果数据，及消息说明 <see cref="P:KdCore.Data.KdDataResult.Message"/>
            </summary>
            <param name="result"></param>
            <param name="message"></param>
            <param name="success"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.SetResult(KdCore.Data.IKdEntityKeyId,System.String,System.Nullable{System.Boolean})">
            <summary>
            设置操作结果数据，及消息说明 <see cref="P:KdCore.Data.KdDataResult.Message"/>
            </summary>
            <param name="result"></param>
            <param name="message"></param>
            <param name="success"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.Create(System.Object)">
            <summary>
            创建并返回一个数据操作结果
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.Create(KdCore.Data.IKdEntityKeyId)">
            <summary>
            创建并返回一个数据操作结果
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.Create(System.Object,System.Object,System.String,System.Nullable{System.Boolean})">
            <summary>
            创建并返回一个数据操作结果
            </summary>
            <param name="source"></param>
            <param name="result"></param>
            <param name="message"></param>
            <param name="success"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.Create(KdCore.Data.IKdEntityKeyId,KdCore.Data.IKdEntityKeyId,System.String,System.Nullable{System.Boolean})">
            <summary>
            创建并返回一个数据操作结果
            </summary>
            <param name="source"></param>
            <param name="result"></param>
            <param name="message"></param>
            <param name="success"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.Error(KdCore.Data.IKdEntityKeyId,KdCore.Data.IKdEntityKeyId,System.String,System.Nullable{System.Boolean})">
            <summary>
            创建并返回一个数据操作结果
            </summary>
            <param name="source"></param>
            <param name="result"></param>
            <param name="message"></param>
            <param name="success"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.Error(System.Boolean,System.Exception,System.String,System.Object[])">
            <summary>
             创建并返回一个失败的数据操作结果，以及操作结果消息说明
            </summary>
            <param name="debugMode"></param>
            <param name="exception"></param>
            <param name="errMessage"></param>
            <param name="errMsgParams"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.Error(System.Object,System.String,System.Object[])">
            <summary>
            创建并返回一个失败的数据操作结果，以及操作结果消息说明
            </summary>
            <param name="source"></param>
            <param name="errMessage"></param>
            <param name="errMsgParams"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResult.Error(System.Object,System.Exception,System.String,System.Object[])">
            <summary>
             创建并返回一个失败的数据操作结果，以及操作结果消息说明
            </summary>
            <param name="source"></param>
            <param name="exception"></param>
            <param name="errMessage"></param>
            <param name="errMsgParams"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdStringIdComparer">
            <summary>
            根据ID进行相等比较的比较器
            </summary>
        </member>
        <member name="M:KdCore.Data.KdStringIdComparer.Equals(KdCore.Data.IKdEntityBase,KdCore.Data.IKdEntityBase)">
            <summary>
            相等比较
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdStringIdComparer.GetHashCode(KdCore.Data.IKdEntityBase)">
            <summary>
            计算 HashCode
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.KdStringIdComparer.Instance">
            <summary>
            比较器实例
            </summary>
        </member>
        <member name="T:KdCore.Data.KdSortFieldAttribute">
            <summary>
            标注列表查询默认排序设置的属性
            </summary>
        </member>
        <member name="P:KdCore.Data.KdSortFieldAttribute.SortName">
            <summary>
            排序字段名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdSortFieldAttribute.Priority">
            <summary>
            获取或设置排序优先权，数字越小排序越优先
            </summary>
        </member>
        <member name="P:KdCore.Data.KdSortFieldAttribute.IsAsc">
            <summary>
            获取或设置是否升序
            </summary>
        </member>
        <member name="M:KdCore.Data.KdSortFieldAttribute.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="isAsc"></param>
        </member>
        <member name="M:KdCore.Data.KdSortFieldAttribute.#ctor(System.Int32,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="priority"></param>
            <param name="isAsc"></param>
        </member>
        <member name="M:KdCore.Data.KdSortFieldAttribute.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName"></param>
            <param name="priority"></param>
            <param name="isAsc"></param>
        </member>
        <member name="T:KdCore.Data.BbUtilEntity">
            <summary>
            数据实体常用处理工具
            </summary>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetObjectType(KdCore.Data.IKdDataEntity)">
            <summary>
            去除 Entity Framework 的实体代理类型，获取实体的真实类型
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetObjectTypeFullName(System.Type)">
            <summary>
            去除 Entity Framework 的实体代理类型，获取类型的真实类型的完全限定名称(包括其命名空间，但不包括程序集)
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetObjectTypeFullName(KdCore.Data.IKdDataEntity)">
            <summary>
            去除 Entity Framework 的实体代理类型，获取实体的真实类型的完全限定名称(包括其命名空间，但不包括程序集)
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.IsNullId(KdCore.Data.IKdEntityKeyId)">
            <summary>
            获取实体数据主键ID是否为空值
            </summary>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.SetId(KdCore.Data.IKdEntityKeyId,System.String)">
            <summary>
            生成数据的主键ID(默认方法生成ID长度：44)，并给当前实体Id属性赋值。
            参数id不为空时强制替换，即使当前Id有值也会替换，但是可能会抛出异常（EF不允许修改主键）。
            如果指定值为空，且当前数据实体如果已存在主键ID，则直接返回主键。
            如果指定 id 参数时，将对 id 进行过滤处理
            </summary>
            <param name="entity">待设置主键的数据对象</param>
            <param name="id">指定的数据主键ID值，如果指定值非空，则强制替换现有的主键ID值</param>
            <returns>由日期时间(12位字符)+GUID组合的主键ID</returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.FixIdIsEmpty``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            修补缺失的排序字段，在现有已设置的最大排序值之后按步进值设置
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="source"></param>
            <param name="step"></param>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetFinalMode(KdCore.Data.BbSaveMode)">
            <summary>
            获取最终需要执行保存模式
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.IsNewData(KdCore.Data.IKdSaveMode)">
            <summary>
            判断实体数据是否为新添加数据（尚未保存到数据库）
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.IsExistData(KdCore.Data.IKdSaveMode)">
            <summary>
            判断实体数据是否为已存在数据（从数据库中读取的）
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.ClearTextProperties``1(``0)">
            <summary>
            清理实体数据中字符串类型属性中的空白字符串(<see cref="M:System.String.IsNullOrWhiteSpace(System.String)"/>)并自动移除首尾空格(<see cref="M:System.String.Trim"/>)
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.ClearTextProperties``1(``0,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            清理实体数据中字符串类型属性中的空白字符串(<see cref="M:System.String.IsNullOrWhiteSpace(System.String)"/>)
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="trimStart">是否移除非空字符串的前导空格，如果指定参数为null，则自动根据属性是否标识为多行文本来决定是否保留前导空格</param>
            <param name="trimEnd">是否移除非空字符串的尾部空格</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.NotCreatorId(KdCore.Data.IKdEntityCreate,System.String)">
            <summary>
            判断实体数据是否指定用户创建的数据，新增数据不进行判断，直接返回 true
            </summary>
            <param name="entity"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetCreateDescDefault(KdCore.Data.IKdEntityCreate,System.String)">
            <summary>
            获取默认数据记录创建用户及时间的描述
            </summary>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetModifyDescDefault(KdCore.Data.IKdEntityModify,System.String)">
            <summary>
            获取默认数据记录最后修改用户及时间的描述
            </summary>
        </member>
        <member name="P:KdCore.Data.BbUtilEntity.Func_GetCreateDesc">
            <summary>
            获取或设置用于获取数据记录创建用户及时间描述的方法
            </summary>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetCreateDesc(KdCore.Data.IKdEntityCreate,System.String)">
            <summary>
            获取数据记录创建用户及时间的描述
            </summary>
        </member>
        <member name="P:KdCore.Data.BbUtilEntity.Func_GetCreateDescPrecise">
            <summary>
            获取或设置用于获取数据记录创建用户及较高精度时间描述的方法
            </summary>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetCreateDescPrecise(KdCore.Data.IKdEntityCreate,System.String)">
            <summary>
            获取数据记录创建用户及较高精度时间描述
            </summary>
        </member>
        <member name="P:KdCore.Data.BbUtilEntity.Func_GetModifyDesc">
            <summary>
            获取或设置用于获取数据最后修改用户及时间描述的方法
            </summary>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetModifyDesc(KdCore.Data.IKdEntityModify,System.String)">
            <summary>
            获取数据记录最后修改用户及时间的描述
            </summary>
        </member>
        <member name="P:KdCore.Data.BbUtilEntity.Func_GetModifyDescPrecise">
            <summary>
            获取或设置用于获取数据最后修改用户及较高精度时间描述的方法
            </summary>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetModifyDescPrecise(KdCore.Data.IKdEntityModify,System.String)">
            <summary>
            获取数据记录最后修改用户的名称及较高精度时间
            </summary>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetSortFields(System.Type)">
            <summary>
            获取实体类型的默认排序字段及顺序
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetSortFields``1">
            <summary>
            获取实体类型的默认排序字段及顺序
            </summary>
            <typeparam name="TEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.BbUtilEntity.Func_GetDefaultSortString">
            <summary>
            获取或设置实体的默认排序的处理方法
            </summary>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.SetFuncDefaultSortString(System.Type,System.Func{System.String,System.String})">
            <summary>
            设置实体的默认的排序设置的获取方法
            </summary>
            <param name="type"></param>
            <param name="func"></param>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.SetFuncDefaultSortString``1(System.Func{System.String,System.String})">
            <summary>
            设置实体的默认的排序设置的获取方法
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="func"></param>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.SetDefaultSortString(System.Type,System.String)">
            <summary>
            设置实体的默认的排序设置
            </summary>
            <param name="type"></param>
            <param name="defaultSortString"></param>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.SetDefaultSortString``1(System.String)">
            <summary>
            设置实体的默认的排序设置
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="defaultSortString"></param>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.SetDefaultSort``1">
            <summary>
            设置 <see cref="T:KdCore.Data.IKdEntitySort"/> 实体的默认排序为 SortNum 升序
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetDefaultSortString(System.Type,System.String)">
            <summary>
            获取实体的默认的排序设置
            </summary>
            <param name="type"></param>
            <param name="actionSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetDefaultSortString``1(System.String)">
            <summary>
            获取实体的默认的排序设置
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="actionSign"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.BbUtilEntity.Func_EntityFuzzys">
            <summary>
            获取或设置实体模糊查询的判断表达式的构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.SetFuzzy``1(System.Func{System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>
            设置实体模糊查询的判断表达式的构造函数
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="func"></param>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetFuzzy``1">
            <summary>
            获取实体模糊查询的判断的处理方法
            </summary>
            <typeparam name="TEntity"></typeparam> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.GetFuzzy``1(System.String)">
            <summary>
            获取实体模糊查询的判断表达式
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="keyword"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.FixSortNum``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            修补缺失的排序字段，在现有已设置的最大排序值之后按步进值设置
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="source"></param>
            <param name="step"></param>
            <param name="start"></param>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.ResetSortNum``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            重新进行排序，排序值之后按步进值设置
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="source"></param>
            <param name="step"></param>
            <param name="start"></param>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.ToListValid``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            过滤数据源中的有效数据（IsValid属性为True），并按 SortNum 排序后输出为List集合
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="enumerable"></param>
            <param name="isDescending"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.ToListValid``1(System.Collections.Generic.List{``0},System.Boolean)">
            <summary>
            过滤数据源中的有效数据（IsValid属性为True），并按 SortNum 排序后输出为List集合
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="enumerable"></param>
            <param name="isDescending"></param>
            <returns></returns> 
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.ToListSorted``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            将数据源中的数据按 SortNum 排序后输出为List集合
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="enumerable"></param>
            <param name="isDescending"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.ToListSorted``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            将数据源中的数据按 SortNum 排序后输出为List集合
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="enumerable"></param>
            <param name="sortString"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilEntity.ToListItems``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            将数据源中的数据转换为 KdListItem 后输出为List集合
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="enumerable"></param>
            <param name="moreDataMode">是否使用包含较多数据的模式进行转换</param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdDateDay">
            <summary>
            定义日期的一个范围，封装了起止日期等
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateDay.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateDay.#ctor(System.Nullable{System.Int32})">
            <summary>
            构造函数
            </summary>
            <param name="dayIndex"></param>
        </member>
        <member name="M:KdCore.Data.KdDateDay.#ctor(System.DateTime)">
            <summary>
            构造函数
            </summary>
            <param name="day"></param>
        </member>
        <member name="M:KdCore.Data.KdDateDay.InitDateRange">
            <summary>
            初始化日期范围处理
            </summary>
        </member>
        <member name="T:KdCore.Data.KdListItem">
            <summary>
            常用列表项定义
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.SortNum">
            <summary>
            获取或设置数据项的排序号
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.PrimaryId">
            <summary>
            获取或设置主项数据的识别主键
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ParentId">
            <summary>
            获取或设置数据项的上级节点的ID
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.SubjectId">
            <summary>
            获取或设置次项数据的识别主键
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.Category">
            <summary>
            获取或设置数据项的分类名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.Group">
            <summary>
            获取或设置数据项的分组名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.Name">
            <summary>
            获取或设置数据项的名称或显示文本
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.NamePath">
            <summary>
            获取或设置数据项的名称或显示文本路径
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.NameShort">
            <summary>
            获取或设置数据项名称的简称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.Text">
            <summary>
            获取或设置数据项的文本
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.Value">
            <summary>
            获取或设置数据项的值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ValueNum">
            <summary>
            获取或设置数据项的数字值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ValuePath">
            <summary>
            获取或设置数据项的值路径
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.SubItemId">
            <summary>
            获取或设置子项数据的识别主键(单个)
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.SubItemIds">
            <summary>
            获取或设置子项数据的识别主键（多个）
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.Href">
            <summary>
            获取或设置链接地址
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.UseRadio">
            <summary>
            获取或设置是否使用单选模式
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.IsSelected">
            <summary>
            获取或设置是否选中
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.IsDisabled">
            <summary>
            获取或设置是否禁用
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.Description">
            <summary>
            获取或设置描述说明
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemBool">
            <summary>
            获取或设置数据项的布尔值 
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemBool1">
            <summary>
            获取或设置数据项的布尔值 1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemBool2">
            <summary>
            获取或设置数据项的布尔值 2
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemBool3">
            <summary>
            获取或设置数据项的布尔值 3
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemBool4">
            <summary>
            获取或设置数据项的布尔值 4
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemStr">
            <summary>
            获取或设置数据项的字符串值  
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemStr1">
            <summary>
            获取或设置数据项的字符串值 1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemStr2">
            <summary>
            获取或设置数据项的字符串值 2
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemStr3">
            <summary>
            获取或设置数据项的字符串值 3
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemStr4">
            <summary>
            获取或设置数据项的字符串值 4
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemInt">
            <summary>
            获取或设置数据项的整数值 
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemInt1">
            <summary>
            获取或设置数据项的整数值 1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemInt2">
            <summary>
            获取或设置数据项的整数值 2
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemInt3">
            <summary>
            获取或设置数据项的整数值 3
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemInt4">
            <summary>
            获取或设置数据项的整数值 4
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemNum">
            <summary>
            获取或设置数据项的数字值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemNum1">
            <summary>
            获取或设置数据项的数字值 1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemNum2">
            <summary>
            获取或设置数据项的数字值 2
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemNum3">
            <summary>
            获取或设置数据项的数字值 3
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemNum4">
            <summary>
            获取或设置数据项的数字值 4
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemTime">
            <summary>
            获取或设置数据项的时间值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemTime1">
            <summary>
            获取或设置数据项的时间值 1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemTime2">
            <summary>
            获取或设置数据项的时间值 2
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemTime3">
            <summary>
            获取或设置数据项的时间值 3
            </summary>
        </member>
        <member name="P:KdCore.Data.KdListItem.ItemTime4">
            <summary>
            获取或设置数据项的时间值 4
            </summary>
        </member>
        <member name="M:KdCore.Data.KdListItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdListItem.#ctor(System.String,System.String,System.Boolean,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="selected"></param>
            <param name="description"></param>
        </member>
        <member name="M:KdCore.Data.KdListItem.ToListItem(System.Boolean)">
            <summary>
            转化为列表项
            </summary>
            <param name="moreDataMode">是否使用包含较多数据的模式进行转换</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdListItem.MenuItem(System.String,System.String,System.String)">
            <summary>
            转化为菜单项
            </summary>
            <param name="name"></param>
            <param name="href"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdListItem.GetChoiceModel(System.String,System.String)">
            <summary>
            获取标识选择模式的字符串
            </summary>
            <param name="useRadio"></param>
            <param name="useCheckbox"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdDateRange">
            <summary>
            定义一个日期范围，封装了起止日期等
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.RangeTitle">
            <summary>
            日期范围显示标题
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.Jointer">
            <summary>
            显示时间范围时使用的连接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.DateFormat">
            <summary>
            日期格式化字符串；默认值 "yyyy-MM-dd"
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.TimeFormat">
            <summary>
            时间格式化字符串；默认值 null，即不输出时间部分, 可指定如 "HH:mm" 的格式输出时间
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.Index">
            <summary>
            可以确定唯一日期范围的索引
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.FirstDayOfWeek">
            <summary>
            表示一周的第一天的枚举值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.WeekRule">
            <summary>
            定义确定年份第一周的不同规则
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.DateStart">
            <summary>
            日期范围起始日期
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.DateEnd">
            <summary>
            日期范围结束日期
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.DayCount">
            <summary>
            日期范围内的天数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.Year">
            <summary>
            日期范围所在或起始的年份
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.Month">
            <summary>
            日期范围所在或起始的月份
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.Week">
            <summary>
            日期范围所在或起始的星期在的年份中是第几周
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.WeekStart">
            <summary>
            显示当前日期范围时将要显示的第一个星期的起始日期
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.WeekEnd">
            <summary>
            显示当前日期范围时将要显示的第一个星期的结束日期
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.RangeDays">
            <summary>
            日期范围中包括的日期数组
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.WeekDays">
            <summary>
            日期范围中包括的日期数组
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateRange.FirstWeek">
            <summary>
            月份中的第一个星期，可用于初始化星期标题行
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateRange.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateRange.#ctor(System.Nullable{System.Int32},System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="rangeIndex"></param>
            <param name="firstDayOfWeek"></param>
            <param name="weekRule"></param>
        </member>
        <member name="M:KdCore.Data.KdDateRange.GetRangeTitle">
            <summary>
            生成时间范围显示标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDateRange.InitDateRange">
            <summary>
            初始化日期范围处理
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateRange.ResetRange">
            <summary>
            重置已经计算的日期范围各属性
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateRange.InRange(System.DateTime)">
            <summary>
            是否属于当前日期范围
            </summary>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDateRange.NotInRange(System.DateTime)">
            <summary>
            是否属于当前日期范围
            </summary>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDateRange.InRangeWeek(System.DateTime)">
            <summary>
            是否属于当前日期范围的显示星期范围内
            </summary>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDateRange.NotInRangeWeek(System.DateTime)">
            <summary>
            是否属于当前日期范围的显示星期范围内
            </summary>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDateRange.NotInRange(System.DateTime,System.String,System.String)">
            <summary>
            获取是否属于当前日期范围的不同样式名称
            </summary>
            <param name="day"></param>
            <param name="notCssClass"></param>
            <param name="inCssClass"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDateRange.NotInRangeWeek(System.DateTime,System.String,System.String)">
            <summary>
            获取是否属于当前日期范围的显示星期范围内的不同样式名称
            </summary>
            <param name="day"></param>
            <param name="notCssClass"></param>
            <param name="inCssClass"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDateRange.Create(KdCore.BbCycleDate,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            创建一个日期范围
            </summary>
            <param name="cycle"></param> 
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDateRange.Create(KdCore.BbCycleDate,System.Nullable{System.Int32})">
            <summary>
            创建一个日期范围
            </summary>
            <param name="cycle"></param> 
            <param name="rangeIndex"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdDateYear">
            <summary>
            定义年度日历，封装了起止日期等
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateYear.RangeMonths">
            <summary>
            年度中包括的月份
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateYear.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateYear.#ctor(System.Nullable{System.Int32},System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="year"></param>
            <param name="firstDayOfWeek"></param>
            <param name="weekRule"></param>
        </member>
        <member name="M:KdCore.Data.KdDateYear.#ctor(System.DateTime,System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="date"></param>
            <param name="firstDayOfWeek"></param>
            <param name="weekRule"></param>
        </member>
        <member name="M:KdCore.Data.KdDateYear.InitDateRange">
            <summary>
            初始化处理
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateYear.ResetRange">
            <summary>
            重置已经计算的日期范围各属性
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateYear.InitYearMonths">
            <summary>
            初始化年度中包含的月份日期范围数据
            </summary>
        </member>
        <member name="T:KdCore.Data.BbSaveMode">
            <summary>
            描述数据实体的保存时需要使用的方式
            </summary>
        </member>
        <member name="F:KdCore.Data.BbSaveMode.None">
            <summary>
            未设置保存方式
            </summary>
        </member>
        <member name="F:KdCore.Data.BbSaveMode.Update">
            <summary>
            修改过的数据,需要通过 Update 模式保存
            </summary>
        </member>
        <member name="F:KdCore.Data.BbSaveMode.Disable">
            <summary>
            假删除的数据,需要通过 Update TagDisabled 标识的模式保存
            </summary>
        </member>
        <member name="F:KdCore.Data.BbSaveMode.DeleteFake">
            <summary>
            假删除的数据,需要通过 Update TagDeleted 标识的模式保存
            </summary>
        </member>
        <member name="F:KdCore.Data.BbSaveMode.Insert">
            <summary>
            新添加的数据,需要通过 Insert 模式保存
            </summary>
        </member>
        <member name="F:KdCore.Data.BbSaveMode.PureDelete">
            <summary>
            需要删除的数据,需要通过 Delete 的模式保存
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdListItem">
            <summary>
            可转化为可列表项的定义接口
            </summary>
        </member>
        <member name="M:KdCore.Data.IKdListItem.ToListItem(System.Boolean)">
            <summary>
            转化为列表项
            </summary>
            <param name="moreDataMode">是否使用包含较多数据的模式进行转换</param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdDateWeek">
            <summary>
            定义日期的一个星期，封装了起止日期等
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateWeek.WeekDays">
            <summary>
            星期中包括的日期数组
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateWeek.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateWeek.#ctor(System.Nullable{System.Int32},System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="weekIndex"></param>
            <param name="firstDayOfWeek"></param>
            <param name="weekRule"></param>
        </member>
        <member name="M:KdCore.Data.KdDateWeek.#ctor(System.DateTime,System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="date"></param>
            <param name="firstDayOfWeek"></param>
            <param name="weekRule"></param>
        </member>
        <member name="M:KdCore.Data.KdDateWeek.InitDateRange">
            <summary>
            初始化日期范围处理
            </summary>
        </member>
        <member name="T:KdCore.Data.KdDateMonth">
            <summary>
            定义月份日历，封装了起止日期等
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDateMonth.RangeWeeks">
            <summary>
            月份中包括的日期数组
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateMonth.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateMonth.#ctor(System.Nullable{System.Int32},System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="monthIndex"></param>
            <param name="firstDayOfWeek"></param>
            <param name="weekRule"></param>
        </member>
        <member name="M:KdCore.Data.KdDateMonth.#ctor(System.DateTime,System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="date"></param>
            <param name="firstDayOfWeek"></param>
            <param name="weekRule"></param>
        </member>
        <member name="M:KdCore.Data.KdDateMonth.InitDateRange">
            <summary>
            初始化处理
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateMonth.ResetRange">
            <summary>
            重置已经计算的日期范围各属性
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateMonth.InitMonthWeeks">
            <summary>
            初始化月份中包含的星期的日期范围数据
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDateMonth.GetMonthViewStartDay">
            <summary>
            获取月历视图上显示的第一天
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDateMonth.GetMonthViewEndDay">
            <summary>
            获取月历视图上显示的最后一天
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdQueryField">
            <summary>
            查询的字段及方式等参数封装类型
            </summary>
        </member>
        <member name="P:KdCore.Data.KdQueryField.Alias">
            <summary>
            查询字段的别名前缀
            </summary>
        </member>
        <member name="P:KdCore.Data.KdQueryField.Field">
            <summary>
            查询字段名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdQueryField.Compare">
            <summary>
            查询比较方式，比如like、equal
            </summary>
        </member>
        <member name="P:KdCore.Data.KdQueryField.Value">
            <summary>
            查询的值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdQueryField.Values">
            <summary>
            查询的值，比较方式为 Between、In 时需要两个值或多个值
            </summary>
        </member>
        <member name="M:KdCore.Data.KdQueryField.ToString">
            <summary>
            重写ToString方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdQueryField.ToExpression``1">
            <summary>
            将查询参数转换为 Linq 表达式
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <returns>经过筛选后的数据源</returns> 
        </member>
        <member name="T:KdCore.Data.KdSortField">
            <summary>
            排序的属性及方向等参数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdSortField.Alias">
            <summary>
            排序字段的别名前缀
            </summary>
        </member>
        <member name="P:KdCore.Data.KdSortField.SortName">
            <summary>
            排序字段名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdSortField.Ascending">
            <summary>
            是否升序
            </summary>
        </member>
        <member name="P:KdCore.Data.KdSortField.Priority">
            <summary>
            排序优先顺序，数字越小排序越优先
            </summary>
        </member>
        <member name="M:KdCore.Data.KdSortField.#ctor(System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName">排序字段名称</param>
            <param name="priority">排序的优先级，多个排序字段时的排序次序</param>
            <param name="ascending">是否升序</param>
            <param name="alias">属性前缀别名</param>
        </member>
        <member name="M:KdCore.Data.KdSortField.ToSortString">
            <summary>
            获取排序参数传递使用的标识字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdSortField.ToString">
            <summary>
            重写ToString方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdSortField.From(System.String)">
            <summary>
            从字符串转换到排序参数集合
            </summary>
            <param name="sortString"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.IKdMapable">
            <summary>
            可实体映射对象标识接口
            </summary>
        </member>
        <member name="T:KdCore.KdChinaDate">
            <summary>
            中国农历数据处理
            </summary>
        </member>
        <member name="M:KdCore.KdChinaDate.From(System.DateTime)">
            <summary>
            从缓存中获取一个农历日期
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="F:KdCore.KdChinaDate.TIANGAN_NAMES">
            <summary>
            天干
            </summary>
        </member>
        <member name="F:KdCore.KdChinaDate.DIZHI_NAMES">
            <summary>
            地支
            </summary>
        </member>
        <member name="F:KdCore.KdChinaDate.ZODIAC_NAMES">
            <summary>
            十二生肖
            </summary>
        </member>
        <member name="F:KdCore.KdChinaDate.MONTH_NAMES">
            <summary>
            月份
            </summary>
        </member>
        <member name="F:KdCore.KdChinaDate.CHINESE_MONTH_NAMES">
            <summary>
            农历 月份
            </summary>
        </member>
        <member name="F:KdCore.KdChinaDate.CHINESE_DAY_NAMES">
            <summary>
            农历 日期
            </summary>
        </member>
        <member name="F:KdCore.KdChinaDate.PRINCIPLE_TERM_NAMES">
            <summary>
            二十四节气 一
            </summary>
        </member>
        <member name="F:KdCore.KdChinaDate.SECTIONDARY_TERM_NAME">
            <summary>
            二十四节气 二
            </summary>
        </member>
        <member name="M:KdCore.KdChinaDate.DaysInChineseMonth(System.Int32,System.Int32,System.Int32)">
            <summary>
            计算中国农历中指定月份的天数
            </summary>
            <param name="baseChineseYear"></param>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <returns>指定月份的天数</returns>
        </member>
        <member name="M:KdCore.KdChinaDate.NextChineseMonth(System.Int32,System.Int32,System.Int32)">
            <summary>
            计算中国农历中指定月份的下一月份
            </summary>
            <param name="baseChineseYear"></param>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdChinaDate.SectionalTerm(System.Int32,System.Int32,System.Int32)">
            <summary>
            计算月份的第一个节气的日期
            </summary>
            <param name="baseYear"></param>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdChinaDate.PrincipleTerm(System.Int32,System.Int32,System.Int32)">
            <summary>
            计算月份的第二个节气的日期
            </summary>
            <param name="baseYear"></param>
            <param name="year"></param>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdChinaDate.#ctor(System.DateTime)">
            <summary>
            初始化一个农历处理的实例
            </summary>
            <param name="date"></param>
        </member>
        <member name="P:KdCore.KdChinaDate.Year">
            <summary>
            农历年份
            </summary>
        </member>
        <member name="P:KdCore.KdChinaDate.Month">
            <summary>
            农历月份
            </summary>
        </member>
        <member name="P:KdCore.KdChinaDate.Day">
            <summary>
            农历日期
            </summary>
        </member>
        <member name="P:KdCore.KdChinaDate.YearName">
            <summary>
            农历年份名称
            </summary>
        </member>
        <member name="P:KdCore.KdChinaDate.MonthName">
            <summary>
            农历月份名称
            </summary>
        </member>
        <member name="P:KdCore.KdChinaDate.DayName">
            <summary>
            农历日期名称
            </summary>
        </member>
        <member name="P:KdCore.KdChinaDate.HeavenlyStems">
            <summary>
            天干
            </summary>
        </member>
        <member name="P:KdCore.KdChinaDate.EarthBranches">
            <summary>
            地支
            </summary>
        </member>
        <member name="P:KdCore.KdChinaDate.ZodiacName">
            <summary>
            十二生肖
            </summary>
        </member>
        <member name="M:KdCore.KdChinaDate.ToString">
            <summary>
            日期详细中文描述
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Logs.IBbLogsWriter">
            <summary>
            日志输出工具接口
            </summary>
        </member>
        <member name="M:KdCore.Logs.IBbLogsWriter.FlushOutput">
            <summary>
            清理当前写入器的所有缓冲区，并使所有缓冲数据写入基础流。
            </summary>
        </member>
        <member name="M:KdCore.Logs.IBbLogsWriter.WriteLine(System.String)">
            <summary>
            写入一行文本日志内容
            </summary>
            <param name="textLine"></param>
        </member>
        <member name="T:KdCore.Logs.BbBaseLogger">
            <summary>
            日志输出工具核心基类
            </summary>
            <summary>
            日志输出工具基类
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbBaseLogger.Name">
            <summary>
            获取日志输出的类型名称
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbBaseLogger.LogTime">
            <summary>
            获取或设置是否输出日志输出时间
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbBaseLogger.StackTraceLogLevel">
            <summary>
            获取或设置堆栈跟踪采用的日志级别
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbBaseLogger.StackFrameUseStackTrace">
            <summary>
            获取或设置在输出 StackFrame 时是否按照 StackTrace 的模式输出堆栈跟踪信息
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbBaseLogger.LogFormat">
            <summary>
            获取或设置日志内容格式化预处理的方法。
            额外的格式化预处理，如附加特定的前缀后缀识别标识等，不影响日志内部处理
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbBaseLogger.LogWriter">
            <summary>
            获取或设置日志内容最终实际输出的对象。
            </summary>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.IsEnable(KdCore.Logs.BbLogLevel)">
            <summary>
             获取当前是否输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.IsEnable(System.Int32)">
            <summary>
            获取当前是否输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.IsDisable(KdCore.Logs.BbLogLevel)">
            <summary>
             获取当前是否不输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.IsDisable(System.Int32)">
            <summary>
            获取当前是否不输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogOutput(System.String)">
            <summary>
            将日志输出记录到给定的日志记录接口。
            </summary>
            <param name="logContent">要输出到日志的字符串内容。</param> 
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.GetLogLevelName(System.Int32)">
            <summary>
            获取日志级别的文字标识
            </summary>
            <param name="logLevel"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogTextFormat(System.Nullable{System.Boolean},System.Int32,System.String,System.Exception,System.String)">
            <summary>
            格式化日志内容。
            </summary>
            <param name="onlySingleFrame">是否仅输出指定帧的日志信息，为null时标识不输出堆栈信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="message">要输出到日志的字符串内容。</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="logLevelName">日志级别标识</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogTraceFormat(System.Boolean,System.Int32,System.String,System.Exception,System.String)">
            <summary>
            格式化日志内容，附加堆栈跟踪等信息。
            </summary>
            <param name="onlySingleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="message">要输出到日志的字符串内容。</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="logLevelName">日志级别标识</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogTextFormat(System.Int32,System.String,System.Exception,System.String)">
            <summary>
            格式化日志内容。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="message">要输出到日志的字符串内容。</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="logLevelName">日志级别标识</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogCore(KdCore.Logs.BbLogLevel,System.String)">
            <summary>
            将日志字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogCore(KdCore.Logs.BbLogLevel,System.Exception,System.String)">
            <summary>
            将日志字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogCore(System.Int32,System.String)">
            <summary>
            将日志字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogCore(System.Int32,System.Exception,System.String)">
            <summary>
            将日志字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogCoreTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.String)">
            <summary>
            将日志字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogCoreTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.String)">
            <summary>
            将日志字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogCoreTrace(System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            将日志字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogCoreTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.String)">
            <summary>
            将日志字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.String)">
            <summary>
            将一段字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Object)">
            <summary>
            将一个对象输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.String)">
            <summary>
            将一段字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.Object)">
            <summary>
            将一个对象输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevel(System.Int32,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.String)">
            <summary>
            将一段字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Object)">
            <summary>
            将一个对象输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param> 
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            将一段字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Object)">
            <summary>
            将一个对象输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param> 
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.String)">
            <summary>
            将一段字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.Object)">
            <summary>
            将一个对象输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackTrace(System.Int32,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.String)">
            <summary>
            将一段字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.Object)">
            <summary>
            将一个对象输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.StackFrame(System.Int32,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.MethodMark(System.Int32,System.String,System.Object[])">
            <summary>
            输出日志，用来标记当前方法是否被调用，以及调用的时间
            </summary>
            <param name="skipFrames"></param>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.MethodMark(System.String,System.Object[])">
            <summary>
            输出日志，用来标记当前方法是否被调用，以及调用的时间
            </summary>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.MethodStart(System.Int32,System.String,System.Object[])">
            <summary>
            输出日志并标记当前调用日志输出的方法
            </summary>
            <param name="skipFrames"></param>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.MethodStart(System.String,System.Object[])">
            <summary>
            输出日志并标记当前调用日志输出的方法
            </summary>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.MethodEnd(System.Int32,System.String,System.Object[])">
            <summary>
            输出日志并标记当前调用日志输出的方法
            </summary>
            <param name="skipFrames"></param>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.MethodEnd(System.String,System.Object[])">
            <summary>
            输出日志并标记当前调用日志输出的方法
            </summary>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Dispose">
            <summary>
            释放资源，并清理缓冲区
            </summary>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Verbose(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Info(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Message(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Debug(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataRequest(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataCreate(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataUpdate(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataDelete(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.DataOperate(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Trace(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Notice(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Default(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Warn(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Major(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Error(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Severe(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Critical(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Alert(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Fatal(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.Emergency(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.BbBaseLogger.CodeMark(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="T:KdCore.Logs.BbLogsFileWriter">
            <summary>
            日志输出工具
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.Encoding">
            <summary>
            日志文件采用编码
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.FileFolder">
            <summary>
            获取日志文件保存文件夹路径
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.FileName">
            <summary>
            获取日志文件保存通用名称，实际保存时可能会附加日期等后缀
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.FileExtName">
            <summary>
            获取日志文件保存扩展名
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.FileNameCurrent">
            <summary>
            获取当前正在写入的实际日志文件名称
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.MaxFileLength">
            <summary>
            获取单个日志文件最大允许字节数
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.MaxFileSize">
            <summary>
            获取或设置单个日志文件最大尺寸（MB）
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.OneFilePerDay">
            <summary>
            获取或设置是否每天生成一个单独的日志文件
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.LastWrite">
            <summary>
            获取最后一次写入日志的时间
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.AutoClose">
            <summary>
            获取或设置是否在日志内容写入完成后自动关闭文件流
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.DelayClose">
            <summary>
            获取或设置最后一次日志内容写入完成后等待多长时间自动关闭文件流
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsFileWriter.CloseTimer">
            <summary>
            获取延时关闭文件流的定时器
            </summary>
        </member>
        <member name="E:KdCore.Logs.BbLogsFileWriter.OnDisposed">
            <summary>
            日志输出工具释放事件公开，通知外部程序当前输出工具已释放（注销资源后将不可再次使用）
            </summary>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.#ctor(System.TimeSpan)">
            <summary>
            构造函数
            </summary>
            <param name="delayClose"></param>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.#ctor(System.Double)">
            <summary>
            构造函数
            </summary>
            <param name="delayCloseSeconds"></param>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.InitFilePath(System.String,System.String[])">
            <summary>
            初始化日志文件保存路径
            </summary>
            <param name="fileName"></param>
            <param name="folders"></param>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.GetCurrentFilePath">
            <summary>
            获取当前日志输出文件及路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.WriteLine(System.String)">
            <summary>
            写入一行文本日志内容
            </summary>
            <param name="textLine"></param>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.WriteLines(System.String[])">
            <summary>
            写入多行文本内容
            </summary>
            <param name="textLines"></param>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.CloseTimer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            延时检测关闭日志文件流
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.OpenStream">
            <summary>
            打开输出文件流
            </summary>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.MoveFileToSequence(System.String)">
            <summary>
            单个日志文件超出允许尺寸后移动到日志文件序列
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.FlushOutput">
            <summary>
            清理当前写入器的所有缓冲区，并使所有缓冲数据写入基础流。
            </summary>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.CloseStream(System.Boolean)">
            <summary>
            关闭输出文件流
            </summary>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.DisposeTimer">
            <summary>
            关闭并释放定时器
            </summary>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.Dispose">
            <summary>
            释放占用资源，并通知外部程序当前输出已释放
            </summary>
        </member>
        <member name="M:KdCore.Logs.BbLogsFileWriter.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:KdCore.Logs.IKdLogger">
            <summary>
            日志输出接口
            </summary>
        </member>
        <member name="P:KdCore.Logs.IKdLogger.Name">
            <summary>
            获取日志输出的类型名称
            </summary>
        </member>
        <member name="P:KdCore.Logs.IKdLogger.LogTime">
            <summary>
            获取或设置是否输出日志输出时间
            </summary>
        </member>
        <member name="P:KdCore.Logs.IKdLogger.StackTraceLogLevel">
            <summary>
            获取或设置堆栈跟踪采用的日志级别
            </summary>
        </member>
        <member name="P:KdCore.Logs.IKdLogger.StackFrameUseStackTrace">
            <summary>
            获取或设置在输出 StackFrame 时是否按照 StackTrace 的模式输出堆栈跟踪信息
            </summary>
        </member>
        <member name="P:KdCore.Logs.IKdLogger.LogWriter">
            <summary>
            获取或设置将日志内容直接输出记录到设置的最终日志存储中保存的方法。
            </summary>
        </member>
        <member name="P:KdCore.Logs.IKdLogger.LogFormat">
            <summary>
            获取或设置日志内容格式化预处理的方法。
            额外的格式化预处理，如附加特定的前缀后缀识别标识等，不影响日志内部处理
            </summary>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.IsEnable(KdCore.Logs.BbLogLevel)">
            <summary>
             获取当前是否输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.IsEnable(System.Int32)">
            <summary>
            获取当前是否输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.IsDisable(KdCore.Logs.BbLogLevel)">
            <summary>
             获取当前是否不输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.IsDisable(System.Int32)">
            <summary>
            获取当前是否不输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.String)">
            <summary>
            将一段字符串输出到当前设置堆栈跟踪日志级别的日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.Object)">
            <summary>
            将一个对象输出到当前设置堆栈跟踪日志级别的日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackTrace(System.Int32,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并输出日志时强制附加堆栈跟踪信息。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.String)">
            <summary>
            将一段字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.Object)">
            <summary>
            将一个对象输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到当前设置堆栈跟踪日志级别的日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.StackFrame(System.Int32,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到当前设置堆栈跟踪日志级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈函数调用信息时可指定跳过的帧数。
            </summary>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.String)">
            <summary>
            直接按指定的 logLevel 级别，将一段字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一个对象输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.String,System.Object[])">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.String,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.String,System.Object,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.String,System.Object,System.Object,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.Exception)">
            <summary>
            直接按指定的 logLevel 级别，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.Exception,System.String)">
            <summary>
            直接按指定的 logLevel 级别，输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.Exception,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，直接按指定的 logLevel 级别，输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.Exception,System.String,System.Object[])">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.Exception,System.String,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(System.Int32,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.String)">
            <summary>
            直接按指定的 logLevel 级别，将一段字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一个对象输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.String,System.Object[])">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.String,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.String,System.Object,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.String,System.Object,System.Object,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception)">
            <summary>
            直接按指定的 logLevel 级别，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.String)">
            <summary>
            直接按指定的 logLevel 级别，输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，直接按指定的 logLevel 级别，输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object[])">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevel(KdCore.Logs.BbLogLevel,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            直接按指定的 logLevel 级别，将一条格式化字符串输出到日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="logLevel">指定日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.String)">
            <summary>
            将一段字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Object)">
            <summary>
            将一个对象输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param> 
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,KdCore.Logs.BbLogLevel,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.String)">
            <summary>
            将一段字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Object)">
            <summary>
            将一个对象输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志输出，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到指定参数级别的日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param> 
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.LogLevelTrace(System.Boolean,System.Int32,System.Int32,System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到指定参数级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志，并在附加堆栈跟踪信息时可指定跳过的帧数。
            </summary>
            <param name="singleFrame">是否仅输出指定帧的日志信息</param>
            <param name="skipFrames">跳过的堆栈帧数</param>
            <param name="logLevel">日志输出级别</param>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Verbose(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Verbose" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Info(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Info" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Message(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Message" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Debug(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Debug" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataRequest(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataRequest" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataCreate(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataCreate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataUpdate(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataUpdate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataDelete(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataDelete" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.DataOperate(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.DataOperate" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Trace(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Trace" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Notice(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Notice" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Default(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Default" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Warn(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Warn" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Major(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Major" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Error(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Error" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Severe(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Severe" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Critical(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Critical" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Alert(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Alert" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Fatal(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Fatal" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.Emergency(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.Emergency" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.String)">
            <summary>
            将一段字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.Object)">
            <summary>
            将一个对象输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.Exception)">
            <summary>
            将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.Exception,System.String)">
            <summary>
            输出日志信息文本的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的字符串内容。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.Exception,System.Object)">
            <summary>
            输出日志信息对象的同时，将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="message">要输出到日志的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.Exception,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.Exception,System.String,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.Exception,System.String,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.Exception,System.String,System.Object,System.Object,System.Object)">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="arg0">要设置格式化输出的对象。</param>
            <param name="arg1">要设置格式化输出的对象。</param>
            <param name="arg2">要设置格式化输出的对象。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.CodeMark(System.Exception,System.IFormatProvider,System.String,System.Object[])">
            <summary>
            将一条格式化字符串输出到 <see cref="F:KdCore.Logs.BbLogLevel.CodeMark" /> 级别的日志，同时将一个输出错误异常 <see cref="T:System.Exception" /> 信息输出到日志。
            </summary>
            <param name="exception">要输出到日志的错误异常对象。</param>
            <param name="provider">一个 <see cref="T:System.IFormatProvider" /> 提供区域性特定的格式设置信息的对象。</param>
            <param name="format">日志输出复合格式化字符串。 </param>
            <param name="args">要设置格式化输出的对象数组。</param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.MethodMark(System.Int32,System.String,System.Object[])">
            <summary>
            输出日志，用来标记当前方法是否被调用，以及调用的时间
            </summary>
            <param name="skipFrames"></param>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.MethodMark(System.String,System.Object[])">
            <summary>
            输出日志，用来标记当前方法是否被调用，以及调用的时间
            </summary>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.MethodStart(System.Int32,System.String,System.Object[])">
            <summary>
            输出日志并标记当前调用日志输出的方法
            </summary>
            <param name="skipFrames"></param>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.MethodStart(System.String,System.Object[])">
            <summary>
            输出日志并标记当前调用日志输出的方法
            </summary>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.MethodEnd(System.Int32,System.String,System.Object[])">
            <summary>
            输出日志并标记当前调用日志输出的方法
            </summary>
            <param name="skipFrames"></param>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Logs.IKdLogger.MethodEnd(System.String,System.Object[])">
            <summary>
            输出日志并标记当前调用日志输出的方法
            </summary>
            <param name="message"></param>
            <param name="msgParams"></param>
        </member>
        <member name="T:KdCore.Logs.BbLogLevel">
            <summary>
            日志记录等级
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.All">
            <summary>
            输出所有级别
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Verbose">
            <summary>
            冗长的；啰唆的；唠叨的
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Trace">
            <summary>
            跟踪
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Debug">
            <summary>
            调试
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.DataOperate">
            <summary>
            数据操作
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.DataRequest">
            <summary>
            数据请求（查看）
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.DataCreate">
            <summary>
            数据创建
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.DataUpdate">
            <summary>
            数据修改
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.DataDelete">
            <summary>
            数据删除
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Notice">
            <summary>
            提醒
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Default">
            <summary>
            普通默认
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Warn">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Major">
            <summary>
            主要，重要，严重
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Severe">
            <summary>
            十分严重的
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Critical">
            <summary>
            极重要的, 关键性的
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Alert">
            <summary>
            警报, 警戒
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Fatal">
            <summary>
            严重错误
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Emergency">
            <summary>
            危急
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.CodeMark">
            <summary>
            调试等时候代码执行标记，最高等级
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.Off">
            <summary>
            关闭输出
            </summary>
        </member>
        <member name="F:KdCore.Logs.BbLogLevel.None">
            <summary>
            未设置级别
            </summary>
        </member>
        <member name="T:KdCore.Logs.BbLogsManager">
            <summary>
            日志处理接口程序管理工具
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsManager.LogLevelEffective">
            <summary>
            获取当前生效的日志级别
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsManager.LogLevelEffectiveNumber">
            <summary>
            获取当前生效的日志级别
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsManager.LogLevelNameLength">
            <summary>
            日志级别文字输出长度
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsManager.LogTime">
            <summary>
            获取或设置是否输出日志记录时间
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsManager.LogMethodFrame">
            <summary>
            获取或设置是否日志记录附加调用方法的堆栈帧信息
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsManager.TimeFormat">
            <summary>
            获取或设置记录时间输出格式字符串
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsManager.StackTraceLogLevel">
            <summary>
            获取或设置附加堆栈跟踪信息时采用的日志级别
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsManager.StackFrameUseStackTrace">
            <summary>
            获取或设置在输出 StackFrame 时是否按照 StackTrace 的模式输出堆栈跟踪信息
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsManager.MaxFileSize">
            <summary>
            获取或设置日志文件最大尺寸（MB）
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsManager.OneFilePerDay">
            <summary>
            获取或设置是否每天生成一个单独的日志文件
            </summary>
        </member>
        <member name="P:KdCore.Logs.BbLogsManager.FilePath">
            <summary>
            获取日志文件配置保存路径名称
            </summary>
        </member>
        <member name="M:KdCore.Logs.BbLogsManager.Init(KdCore.Logs.BbLogLevel,System.String,System.Boolean,System.Int32)">
            <summary>
            初始化日志接口
            </summary>
            <param name="logLevel"></param>
            <param name="saveFilePath"></param>
            <param name="oneFilePerDay"></param>
            <param name="maxFileSize"></param>
        </member>
        <member name="M:KdCore.Logs.BbLogsManager.SetStackTraceLevel(KdCore.Logs.BbLogLevel,System.Boolean)">
            <summary>
            设置堆栈跟踪信息输出的日志级别
            </summary>
            <param name="stackLogLevel"></param>
            <param name="stackFrameUseStackTrace"></param>
        </member>
        <member name="M:KdCore.Logs.BbLogsManager.GetLogFilePath">
            <summary>
            获取当前正在写入的日志文件路径
            </summary>
        </member>
        <member name="M:KdCore.Logs.BbLogsManager.GetKdLogger(System.String,System.Func{System.String,System.String})">
            <summary>
            获取指定名称的日志处理程序接口
            </summary>
            <param name="loggerName">日志实例的标识名称</param>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbLogsManager.GetKdLogger(System.Type,System.Func{System.String,System.String})">
            <summary>
            获取指定类型的日志处理程序接口
            </summary>
            <param name="type"></param>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbLogsManager.GetKdLoggerByFullName(System.Type,System.Func{System.String,System.String})">
            <summary>
            获取指定类型的日志处理程序接口
            </summary>
            <param name="type"></param>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbLogsManager.GetKdLoggerByAssembly(System.Type,System.Func{System.String,System.String})">
            <summary>
            获取指定类型（区分不同程序集版本）的日志处理程序接口
            </summary>
            <param name="type"></param>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbLogsManager.LogEnable(KdCore.Logs.BbLogLevel)">
            <summary>
             获取当前是否输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbLogsManager.LogEnable(System.Int32)">
            <summary>
             获取当前是否输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbLogsManager.LogDisable(KdCore.Logs.BbLogLevel)">
            <summary>
             获取当前是否不输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.BbLogsManager.LogDisable(System.Int32)">
            <summary>
             获取当前是否不输出参数级别的日志信息
            </summary>
            <param name="logLevel">日志级别</param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Logs.KdUtilLogs">
            <summary>
            常用日志处理方法
            </summary>
        </member>
        <member name="M:KdCore.Logs.KdUtilLogs.GetKdLogger(System.String,System.Func{System.String,System.String})">
            <summary>
            获取对象类型的日志记录接口实例对象
            </summary>
            <param name="loggerName"></param>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Logs.KdUtilLogs.GetKdLogger(System.Type,System.Func{System.String,System.String})">
            <summary>
            获取对象类型的日志记录接口实例对象
            </summary>
            <param name="type">日志调用对象的类型</param>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns>日志记录对象</returns>
        </member>
        <member name="M:KdCore.Logs.KdUtilLogs.GetKdLogger``1(System.Func{System.String,System.String})">
            <summary>
            获取对象类型的日志记录接口实例对象
            </summary>
            <typeparam name="T">日志调用对象的类型</typeparam>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns>日志记录对象</returns>
        </member>
        <member name="M:KdCore.Logs.KdUtilLogs.GetKdLogger``1(``0,System.Func{System.String,System.String})">
            <summary>
            获取对象类型的日志记录接口实例对象
            </summary>
            <typeparam name="T">日志调用对象的类型</typeparam> 
            <param name="logObj">日志调用对象</param>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns>日志记录对象</returns>
        </member>
        <member name="M:KdCore.Logs.KdUtilLogs.GetKdLogger(System.Reflection.MethodBase,System.Func{System.String,System.String})">
            <summary>
            获取方法所属类型的日志记录接口实例对象
            </summary>
            <param name="method">日志调用方法</param>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns>日志记录对象</returns>
        </member>
        <member name="M:KdCore.Logs.KdUtilLogs.GetKdLogger(System.Diagnostics.StackFrame,System.Func{System.String,System.String})">
            <summary>
            获取堆栈帧中执行方法的所属类型的日志记录对象
            </summary>
            <param name="frame">堆栈帧</param>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns>日志记录对象</returns>
        </member>
        <member name="M:KdCore.Logs.KdUtilLogs.GetKdLogger(System.Diagnostics.StackTrace,System.Int32,System.Func{System.String,System.String})">
            <summary>
            获取堆栈跟踪中当前帧中执行方法的所属类型的日志记录对象
            </summary>
            <param name="trace">堆栈跟踪</param>
            <param name="index">所请求方法的堆栈帧的索引</param>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns>日志记录对象</returns>
        </member>
        <member name="M:KdCore.Logs.KdUtilLogs.GetKdLogger(System.Diagnostics.StackTrace,System.Func{System.String,System.String})">
            <summary>
            获取堆栈跟踪中当前帧中执行方法的所属类型的日志记录对象
            </summary>
            <param name="trace">堆栈跟踪</param>
            <param name="logFormat">日志内容格式化预处理的方法</param>
            <returns>日志记录对象</returns>
        </member>
        <member name="M:KdCore.Logs.KdUtilLogs.Error(KdCore.Logs.IKdLogger,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            日志输出
            </summary>
            <param name="log"></param>
            <param name="dict"></param>
            <param name="name"></param>
        </member>
        <member name="M:KdCore.Logs.KdUtilLogs.LogAssemblyResource(KdCore.Logs.IKdLogger,System.Reflection.Assembly)">
            <summary>
            列举程序集中的资源文件名称，并记录到日志文件
            </summary>
            <param name="logger"></param>
            <param name="assembly"></param>
        </member>
        <member name="T:KdCore.BbBaseConfig">
            <summary>
            系统程序基本配置与管理
            </summary>
        </member>
        <member name="P:KdCore.BbBaseConfig.Configs">
            <summary>
            获取或设置系统基本配置
            </summary>
        </member>
        <member name="P:KdCore.BbBaseConfig.SavePath">
            <summary>
            获取或设置配置序列化文件保存路径
            </summary>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetSavePath">
            <summary>
            获取序列化文件保存路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.LoadConfigs">
            <summary>
            初始化系统默认配置
            </summary>
        </member>
        <member name="M:KdCore.BbBaseConfig.SaveConfigs(System.String)">
            <summary>
            保存当前配置到指定路径的文件
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:KdCore.BbBaseConfig.CreateDefault">
            <summary>
            创建默认配置
            </summary>
        </member>
        <member name="M:KdCore.BbBaseConfig.InitDefault(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            初始化默认配置
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:KdCore.BbBaseConfig.SetConfig(System.String,System.Object,System.Boolean)">
            <summary>
            设置配置值
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="replaceExist"></param>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetConfig``1(System.String,``0)">
            <summary>
            获取配置值
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetConfig``1(System.String)">
            <summary>
            获取配置值
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetString(System.String,System.String)">
            <summary>
            获取 string 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetStrings(System.String,System.String[])">
            <summary>
            获取 string[] 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValues"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetBool(System.String,System.Boolean)">
            <summary>
            获取 bool 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetByte(System.String,System.Byte)">
            <summary>
            获取 byte 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetSByte(System.String,System.SByte)">
            <summary>
            获取 sbyte 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetInt(System.String,System.Int32)">
            <summary>
            获取 int 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetUInt(System.String,System.UInt32)">
            <summary>
            获取 uint 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetInt64(System.String,System.Int64)">
            <summary>
            获取 long 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetUInt64(System.String,System.UInt64)">
            <summary>
            获取 ulong 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetInt16(System.String,System.Int16)">
            <summary>
            获取 short 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetUInt16(System.String,System.UInt16)">
            <summary>
            获取 ushort 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetDecimal(System.String,System.Decimal)">
            <summary>
            获取 decimal 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetDouble(System.String,System.Double)">
            <summary>
            获取 double 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetFloat(System.String,System.Single)">
            <summary>
            获取 float 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetChar(System.String,System.Char)">
            <summary>
            获取 char 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetDateTimeOffset(System.String,System.DateTimeOffset)">
            <summary>
            获取 DateTimeOffset 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetDateTimeOffset(System.String)">
            <summary>
            获取 DateTimeOffset 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetDateTime(System.String,System.DateTime)">
            <summary>
            获取 DateTime 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetDateTime(System.String)">
            <summary>
            获取 DateTime 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetTimeSpan(System.String,System.TimeSpan)">
            <summary>
            获取 TimeSpan 类型的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetTimeSpan(System.String)">
            <summary>
            获取 TimeSpan 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetBool(System.String)">
            <summary>
            获取 bool? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetByte(System.String)">
            <summary>
            获取 byte? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetSByte(System.String)">
            <summary>
            获取 sbyte? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetInt(System.String)">
            <summary>
            获取 int? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetUInt(System.String)">
            <summary>
            获取 uint? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetInt64(System.String)">
            <summary>
            获取 long? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetUInt64(System.String)">
            <summary>
            获取 ulong? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetInt16(System.String)">
            <summary>
            获取 short? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetUInt16(System.String)">
            <summary>
            获取 ushort? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetDecimal(System.String)">
            <summary>
            获取 decimal? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetDouble(System.String)">
            <summary>
            获取 double? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetFloat(System.String)">
            <summary>
            获取 float? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetChar(System.String)">
            <summary>
            获取 char? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetDateTimeOffset(System.String)">
            <summary>
            获取 DateTimeOffset? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetDateTime(System.String)">
            <summary>
            获取 DateTime? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.TryGetTimeSpan(System.String)">
            <summary>
            获取 TimeSpan? 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetBools(System.String)">
            <summary>
            获取 bool[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetBytes(System.String)">
            <summary>
            获取 byte[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetSBytes(System.String)">
            <summary>
            获取 sbyte[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetInts(System.String)">
            <summary>
            获取 int[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetUInts(System.String)">
            <summary>
            获取 uint[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetInt64s(System.String)">
            <summary>
            获取 long[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetUInt64s(System.String)">
            <summary>
            获取 ulong[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetInt16s(System.String)">
            <summary>
            获取 short[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetUInt16s(System.String)">
            <summary>
            获取 ushort[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetDecimals(System.String)">
            <summary>
            获取 decimal[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetDoubles(System.String)">
            <summary>
            获取 double[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetFloats(System.String)">
            <summary>
            获取 float[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetChars(System.String)">
            <summary>
            获取 char[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetDateTimeOffsets(System.String)">
            <summary>
            获取 DateTimeOffset[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetDateTimes(System.String)">
            <summary>
            获取 DateTime[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbBaseConfig.GetTimeSpans(System.String)">
            <summary>
            获取 TimeSpan[] 类型的配置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.BbCycleDate">
            <summary>
            日期周期类型分组方式
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDate.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDate.Year">
            <summary>
            按年份，每年的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDate.Month">
            <summary>
            按月份，每月的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDate.Week">
            <summary>
            按周，每周的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDate.Day">
            <summary>
            按天，每天的数据作为一组
            </summary>
        </member>
        <member name="T:KdCore.BbCycleTime">
            <summary>
            时间周期类型分组方式
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Hour12">
            <summary>
            按小时，每十二小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Hour08">
            <summary>
            按小时，每八小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Hour06">
            <summary>
            按小时，每六小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Hour04">
            <summary>
            按小时，每四小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Hour03">
            <summary>
            按小时，每三小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Hour02">
            <summary>
            按小时，每两小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Hour">
            <summary>
            按小时，每小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Minute45">
            <summary>
            按分钟，每45分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Minute30">
            <summary>
            按分钟，每30分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Minute15">
            <summary>
            按分钟，每15分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Minute10">
            <summary>
            按分钟，每10分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Minute05">
            <summary>
            按分钟，每5分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Minute">
            <summary>
            按分钟，每分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Second45">
            <summary>
            按秒钟，每45秒钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Second30">
            <summary>
            按秒钟，每30秒钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Second15">
            <summary>
            按秒钟，每15秒钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Second10">
            <summary>
            按秒钟，每10秒钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Second05">
            <summary>
            按秒钟，每5秒钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleTime.Second">
            <summary>
            按秒钟，每秒钟的数据作为一组
            </summary>
        </member>
        <member name="T:KdCore.KdUtil">
            <summary>
            关于 DataAction 的辅助方法
            </summary>
            <summary>
            DataTable 数据转换
            </summary>
            <summary>
            常用对象处理扩展方法
            </summary>
            <summary>
            日期助手类
            </summary>
            <summary>
            常用对象处理扩展方法：集合枚举扩展
            </summary>
            <summary>
            文件操作工具类
            </summary>
            <summary>
            货币工具类
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.ToText(System.Enum)">
            <summary>
            将枚举值转换为字符串
            </summary>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToText(System.Enum,System.Int32)">
            <summary>
            将枚举值转换为字符串
            </summary>
            <param name="enumValue"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToText``1(``0)">
            <summary>
            将枚举值转换为字符串
            </summary>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToText``1(``0,System.Int32)">
            <summary>
            将枚举值转换为字符串
            </summary>
            <param name="enumValue"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToEnum``1(System.String,System.Boolean)">
            <summary>
            转换字符串到枚举类型
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值对应的字符串</param>
            <param name="ignoreCase">是否忽略大小写</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToEnum``1(System.String,``0,System.Boolean)">
            <summary>
            转换字符串到枚举类型
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="value">枚举值对应的字符串</param>
            <param name="defaultValue">默认返回值</param>
            <param name="ignoreCase">是否忽略大小写</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItem(System.Enum)">
            <summary>
            将枚举值转为可选项
            </summary>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItem``1(``0)">
            <summary>
            将枚举值转为可选项
            </summary>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItem(System.Enum,System.Func{KdCore.Data.KdListItem,System.String})">
            <summary>
            将枚举值转为可选项
            </summary>
            <param name="enumValue"></param>
            <param name="funcBuildHref"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItem``1(``0,System.Func{KdCore.Data.KdListItem,System.String})">
            <summary>
            将枚举值转为可选项
            </summary>
            <param name="enumValue"></param>
            <param name="funcBuildHref"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems(System.Enum[])">
            <summary>
            将枚举值转为可选项集合
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems``1">
            <summary>
            将枚举类型中的所有值转为可选项集合
            </summary>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems``1(System.Int32)">
            <summary>
            将枚举类型中的所有不小于指定参数的值转为可选项集合
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="minValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems``1(System.Int32,System.Int32)">
            <summary>
            将枚举类型中的所有在指定参数范围内的值转为可选项集合
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems(System.Func{KdCore.Data.KdListItem,System.String},System.Enum[])">
            <summary>
            将枚举值转为可选项集合
            </summary>
            <param name="funcBuildHref"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems``1(System.Func{KdCore.Data.KdListItem,System.String})">
            <summary>
            将枚举类型中的所有值转为可选项集合
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="funcBuildHref"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems``1(System.Func{KdCore.Data.KdListItem,System.String},System.Int32)">
            <summary>
            将枚举类型中的所有不小于指定参数的值转为可选项集合
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="funcBuildHref"></param>
            <param name="minValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems``1(System.Func{KdCore.Data.KdListItem,System.String},System.Int32,System.Int32)">
            <summary>
            将枚举类型中的所有在指定参数范围内的值转为可选项集合
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="funcBuildHref"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems(System.Enum,System.Func{KdCore.Data.KdListItem,System.String},System.Enum[])">
            <summary>
            将枚举值转为可选项集合
            </summary>
            <param name="selectedValue"></param>
            <param name="funcBuildHref"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems``1(``0,System.Func{KdCore.Data.KdListItem,System.String})">
            <summary>
            将枚举类型中的所有值转为可选项集合
            </summary>
            <param name="selectedValue"></param>
            <typeparam name="TEnum"></typeparam>
            <param name="funcBuildHref"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems``1(``0,System.Func{KdCore.Data.KdListItem,System.String},System.Int32)">
            <summary>
            将枚举类型中的所有不小于指定参数的值转为可选项集合
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="selectedValue"></param>
            <param name="funcBuildHref"></param>
            <param name="minValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToListItems``1(``0,System.Func{KdCore.Data.KdListItem,System.String},System.Int32,System.Int32)">
            <summary>
            将枚举类型中的所有在指定参数范围内的值转为可选项集合
            </summary>
            <typeparam name="TEnum"></typeparam>
            <param name="selectedValue"></param>
            <param name="funcBuildHref"></param>
            <param name="minValue"></param>
            <param name="maxValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToHexString(System.Byte[],System.String)">
            <summary>
            字节数组转换为字符串
            </summary>
            <param name="data"></param> 
            <param name="strHyphen"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToHexString(System.Byte[])">
            <summary>
            字节数组转换为字符串
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToHexString(System.String,System.Text.Encoding)">
            <summary>
            字节数组转换为字符串，默认UTF8编码
            </summary>
            <param name="data"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FromHexToBytes(System.String,System.Byte)">
            <summary>
            字符串转换为字节数组
            </summary>
            <param name="data"></param>
            <param name="fromBase">转换数字基数，它必须是 2、8、10 或 16。</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FromHexString(System.String,System.Byte)">
            <summary>
            字符串转换为字节数组
            </summary>
            <param name="data"></param>
            <param name="fromBase">转换数字基数，它必须是 2、8、10 或 16。</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBase64(System.Byte[])">
            <summary>
            字节数组转换为字符串
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBase64(System.String,System.Text.Encoding)">
            <summary>
            转换字符串到Base64编码，默认UTF8编码
            </summary>
            <param name="str"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FromBase64(System.String,System.Text.Encoding)">
            <summary>
            转换Base64到字符串，默认UTF8编码
            </summary>
            <param name="base64"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.StartWith(System.Byte[],System.Byte[])">
            <summary>
            确定此字节数组的开头是否与指定的字节数组匹配。
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.DetectBom(System.Byte[])">
            <summary>
            检测 BOM 编码格式
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.DetectGB18030(System.Byte[],System.Int64)">
            <summary>
            检测文本的字节数据的字符编码是否符合 GB18030 编码格式
            </summary>
            <param name="bytes"></param>
            <param name="maxLength"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.DetectEncoding(System.Byte[],System.Text.Encoding,System.Int32)">
            <summary>
            推断文本的字节数据的字符编码
            </summary>
            <param name="bytes">文件流</param>
            <param name="defaultEncoding">如果检测不出编码，采用的默认编码，未指定时默认采用 UTF8</param>
            <param name="maxLength">最多只检测限定字节长度（默认2K），如果符合即退出</param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdUtil.Func_GetDataActionPattern">
            <summary>
            获取或设置自动获取 <see cref="T:KdCore.Data.BbDataAction"/> 的显示样式（<see cref="T:KdCore.BbShowPattern"/>）的处理方法
            </summary>
        </member>
        <member name="P:KdCore.KdUtil.Func_GetActionName">
            <summary>
            获取或设置从<see cref="T:KdCore.Data.BbDataAction"/>类型到 Action 名称的转换处理的方法
            </summary>
        </member>
        <member name="P:KdCore.KdUtil.Func_GetDataActionTitle">
            <summary>
            获取或设置自动获取 <see cref="T:KdCore.Data.BbDataAction"/> 的操作按钮或链接等显示文本的处理方法
            </summary>
        </member>
        <member name="P:KdCore.KdUtil.Func_GetDataActionTooltip">
            <summary>
            获取或设置自动获取 <see cref="T:KdCore.Data.BbDataAction"/> 的操作按钮或链接等提示文本的处理方法
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.ToDataPattern(KdCore.Data.BbDataAction)">
            <summary>
            获取 BbDataAction 的外观模式
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.ToActionName(KdCore.Data.BbDataAction)">
            <summary>
            从 <see cref="T:KdCore.Data.BbDataAction"/> 获取相应的 ACTION 名称
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.ToActionTitle(KdCore.Data.BbDataAction)">
            <summary>
            获取 BbDataAction 的汉字名称
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.ToTooltip(KdCore.Data.BbDataAction)">
            <summary>
            获取 BbDataAction 的提示说明
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.GetDataActionPattern(KdCore.Data.BbDataAction)">
            <summary>
            获取 BbDataAction 的外观模式
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.GetDataActionName(KdCore.Data.BbDataAction)">
            <summary>
            获取 BbDataAction 的汉字名称
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.GetDataActionTooltip(KdCore.Data.BbDataAction)">
            <summary>
            获取 BbDataAction 的汉字名称
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.MergeResults(System.Collections.Generic.IEnumerable{KdCore.Data.KdDataResult})">
            <summary>
            按操作是否成功，对数据操作结果进行分类整理合并
            </summary>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FirstNotInherit``1(System.Collections.Generic.List{``0},System.Func{``0,KdCore.BbEnableType})">
            <summary>
            查询集合中第一个不是默认的设置情况，如果不存在，则最终还是返回默认
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FirstIsEnable``1(System.Collections.Generic.List{``0},System.Func{``0,KdCore.BbEnableType})">
            <summary>
            查询集合中第一个不是默认的设置，是否设置的允许
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FirstIsDisable``1(System.Collections.Generic.List{``0},System.Func{``0,KdCore.BbEnableType})">
            <summary>
            查询集合中第一个不是默认的设置，是否设置的禁止
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsURL(System.String)">
            <summary>
            检测是否是正确的Url
            </summary>
            <param name="urlPath">要验证的Url</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.IsEmail(System.String)">
            <summary>
            检测是否符合email格式
            </summary>
            <param name="strEmail">要判断的email字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.HtmlEncode(System.String)">
            <summary>
            将字符串转换为 HTML 编码的字符串。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.HtmlDecode(System.String)">
            <summary>
            将已经为 HTTP 传输进行过 HTML 编码的字符串转换为已解码的字符串。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.UrlEncode(System.String)">
            <summary>
            对 URL 字符串进行编码。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.UrlDecode(System.String)">
            <summary>
            将已经为在 URL 中传输而编码的字符串转换为解码的字符串。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ArrangeHtmlLines(System.String,System.Boolean,System.String[])">
            <summary>
            处理 HTML 中的换行标签为普通字符串换行
            </summary>
            <param name="source">可能包含 HTML 的字符串</param>
            <param name="removeExistNewLine">是否移除原有的普通换行符；如果移除则会自动移除空行以及行首尾空格</param>
            <param name="htmlTagAsNewLines">字符串中可能包含的、被视为换行的 html 标签名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ArrangeHtmlLines(System.String,System.Boolean)">
            <summary>
            处理 HTML 中的换行标签为普通字符串换行
            </summary>
            <param name="source">可能包含 HTML 的字符串</param>
            <param name="removeExistNewLine">是否移除原有的普通换行符；如果移除则会自动移除空行以及行首尾空格</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.HtmlTextLines(System.String,System.Boolean,System.String[])">
            <summary>
            处理 HTML 中的换行标签为普通的多行字符串
            </summary>
            <param name="source">可能包含 HTML 的字符串</param>
            <param name="removeExistNewLine">是否移除原有的普通换行符；如果移除则会自动移除空行以及行首尾空格</param>
            <param name="htmlTagAsNewLines">字符串中可能包含的、被视为换行的 html 标签名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToHtmlLines(System.String,System.Boolean,System.String[])">
            <summary>
            对字符串进行整理，并处理换行为 HTML 的 BR 换行
            </summary>
            <param name="source">可能包含 HTML 的字符串</param>
            <param name="encodeWhiteSpace">是否对空格进行 HTML 编码</param>
            <param name="htmlTagAsNewLines">字符串中可能包含的、被视为换行的 html 标签名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToHtmlParagraphs(System.String,System.Boolean,System.String[])">
            <summary>
            字符串到 HTML 的常规处理
            </summary>
            <param name="source">可能包含 HTML 的字符串</param>
            <param name="encodeWhiteSpace">是否对空格进行 HTML 编码</param>
            <param name="htmlTagAsNewLines">视为换行的符号</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetCssClass(KdCore.BbShowPattern,System.String,System.String)">
            <summary>
            获取外观样式使用的 CSS 样式名称
            </summary>
            <param name="pattern"></param>
            <param name="cssBase"></param>
            <param name="tagRole"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetClientName(KdCore.BbClientType)">
            <summary>
            获取客户端设备类型名称
            </summary>
            <param name="clientType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetClientTypeDesc(KdCore.BbClientType)">
            <summary>
            获取客户端类型描述的方法
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Compatible(KdCore.BbClientType,KdCore.BbClientType)">
            <summary>
            是否兼容客户端设备类型
            </summary>
            <param name="surportClient"></param>
            <param name="currentClient"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.NotCompatible(KdCore.BbClientType,KdCore.BbClientType)">
            <summary>
            是否不兼容客户端设备类型
            </summary>
            <param name="surportClient"></param>
            <param name="currentClient"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetLayoutName(KdCore.BbDataListLayout)">
            <summary>
            获取布局类型名称
            </summary>
            <param name="layout"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Remove``2(System.Collections.Generic.IDictionary{``0,``1},System.Func{System.Collections.Generic.KeyValuePair{``0,``1},System.Boolean})">
            <summary>
            从字典中移除符合条件的键值项
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dictionary"></param>
            <param name="removeCondition"></param>
            <returns>被移除的字典键值对</returns>
        </member>
        <member name="M:KdCore.KdUtil.Remove``3(System.Collections.Generic.IDictionary{``0,``1},System.Func{System.Collections.Generic.KeyValuePair{``0,``1},``2,System.Boolean},``2)">
            <summary>
            从字典中移除符合条件的键值项
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <typeparam name="TState"></typeparam>
            <param name="dictionary"></param>
            <param name="removeCondition"></param>
            <param name="state"></param>
            <returns>被移除的字典键值对</returns>
        </member>
        <member name="M:KdCore.KdUtil.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
            <summary>
            合并字典，如果过原有字典中存在合并字典中的键值，则按照 replaceExists 参数的值，true时替换，false保留原有的值
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="source"></param>
            <param name="otherDict"></param>
            <param name="replaceExists"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.TryGetValue``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String,``0@)">
            <summary>
            尝试从字典中获取指定键关联的值，并进行相应的类型转换
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.TryGetOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            尝试从字典中获取指定键关联的值，如果不存在，则返回指定的默认值
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="default"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ConvertTo``1(System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <summary>
            将键值集合转为简单类型实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dict"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.HasTrue``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Boolean)">
            <summary>
            获取字典中是否包含指定键，且其值代表 true
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="removeAfter"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.HasTrue``1(System.Collections.Generic.IDictionary{System.String,``0},System.String,System.Boolean)">
            <summary>
            获取字典中是否包含指定键，且其值代表 true
            </summary>
            <typeparam name="TValue"></typeparam>
            <param name="dict"></param>
            <param name="key"></param>
            <param name="removeAfter"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.HasEditForce(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.String)">
            <summary>
            获取字典中是否包含强制编辑的设置，且其值代表 true
            </summary>
            <param name="attributes"></param>
            <param name="keyName"></param>
            <param name="removeAfter"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.HasReadOnly(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.String)">
            <summary>
            获取字典中是否包含只读的设置，且其值代表 true
            </summary>
            <param name="attributes"></param>
            <param name="removeAfter"></param>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.HasRequired(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.String)">
            <summary>
            获取字典中是否包含必填的设置，且其值代表 true
            </summary>
            <param name="attributes"></param>
            <param name="removeAfter"></param>
            <param name="keyName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJsonString``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            转换成 JSON 格式的字符串
            </summary>
            <param name="dict"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDictionary(System.Collections.Specialized.NameValueCollection)">
            <summary>
            组合成字典
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDictionary(System.Web.HttpCookieCollection)">
            <summary>
            组合成字典
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDataTable(System.Collections.IList,System.String[],System.Type[])">
            <summary>
            根据IList（object数组类型的数据），转换成DataTable
            </summary>
            <param name="list">IList数据</param>
            <param name="dtPropNames">DataTable属性名称</param>
            <param name="dtPropTypes">DataTable属性类型</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToSubset(System.Object,System.Int32,System.Int32)">
            <summary>
            从列表（DataSet、DataTable、List）中获取指定位置和数量的数据
            </summary>
            <param name="collections"></param>
            <param name="startIndex">开始位置</param>
            <param name="resultCount">返回数据量</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDataTable``1(System.Collections.Generic.IList{``0})">
            <summary>
            把List转换为DataTable
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">无结构信息的List数据，如object[]类型的数据</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDataTable(System.Collections.IList)">
            <summary>
            把List中的所有记录转换为DataTable
            </summary>
            <param name="list">有结构信息的list数据</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDataTable(System.Collections.IList,System.String[],System.Int32[])">
            <summary>
            把List中的所有记录转换为DataTable
            </summary>
            <param name="list">有结构信息的list数据</param>
            <param name="needPropNames">需要转换的数据列名</param>
            <param name="needPropIndexs">需要填充数据的列索引号</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDataTable(System.Data.IDataReader)">
            <summary>
            DataReader转换为DataTable
            </summary>
            <param name="idr"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdUtil.Logger">
            <summary>
            日志记录对象
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.ResetCaches">
            <summary>
            重置<see cref="T:KdCore.KdUtil"/> 类型中的辅助缓存数据；通常是一些类型缓存
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeObject">
            <summary>
            object, Object 字符串类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeString">
            <summary>
            string, String 字符串类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeBoolean">
            <summary>
            bool, Boolean 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeBooleanNullable">
            <summary>
            bool?, Boolean? 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeDateTime">
            <summary>
            DateTime 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeTimeSpan">
            <summary>
            TimeSpan 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeInt32">
            <summary>
            int, Int32 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeInt16">
            <summary>
            short, Int16 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeInt64">
            <summary>
            long, Int64 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeIntPtr">
            <summary>
            IntPtr 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeUInt16">
            <summary>
            ushort, UInt16 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeUInt32">
            <summary>
            uint, UInt32 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeUInt64">
            <summary>
            ulong, UInt64 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeUIntPtr">
            <summary>
            UIntPtr 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeByte">
            <summary>
            byte, Byte 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeSByte">
            <summary>
            sbyte, SByte 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeBigInteger">
            <summary>
            BigInteger 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeFloat">
            <summary>
            float, Single 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeDouble">
            <summary>
            double, Double 类型的类型声明
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.TypeDecimal">
            <summary>
            decimal, Decimal 类型的类型声明
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.NotNull``1(``0,System.String)">
            <summary>
            验证对象是否不为Null，如果为空将会抛出异常
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">验证对象</param>
            <param name="parameterName">验证对象的参数名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.NotNull``1(System.Nullable{``0},System.String)">
            <summary>
            验证对象是否不为Null，如果为空将会抛出异常
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">验证对象</param>
            <param name="parameterName">验证对象的参数名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.NotEmptyValue(System.String,System.String)">
            <summary>
            验证字符串是否不为空值（IsNullOrWhiteSpace），如果为空将会抛出异常
            </summary>
            <param name="value">验证对象</param>
            <param name="parameterName">验证对象的参数名称</param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdUtil.NewDateID">
            <summary>
            生成数据的主键ID(长度：48位字符)
            </summary>
            <returns>由日期时间(12位字符)+流水号（4位字符）+GUID组合的主键ID（32位字符）</returns>
        </member>
        <member name="P:KdCore.KdUtil.NewGuid">
            <summary>
            生成新的guid值
            </summary>
        </member>
        <member name="P:KdCore.KdUtil.EmptyGuid">
            <summary>
            生成空的GUID类型的值，其值均为零
            </summary>
        </member>
        <member name="F:KdCore.KdUtil.CharBaseForID">
            <summary>
            自定义ID中使用的字符
            </summary>
        </member>
        <member name="P:KdCore.KdUtil.NewID8">
            <summary>
            生成新的 8 位字符串ID, 虽然重复几率较低，但可能存在重复；
            理论容量：2，821，109，907，456个不重复ID（约 28 万亿）；
            测试时不间断连续生成容量：20，000，047个不重复ID（约 2 千万）；
            测试时单次最快出现重复ID在20万次左右
            </summary>
        </member>
        <member name="P:KdCore.KdUtil.NewID12">
            <summary>
            生成新的 12 位字符串ID, 虽然重复几率较低，但可能存在重复；
            前三位为生成ID时的日期，第四位是当前时间的小时部分；
            后8位算法同 NewID8 的算法
            </summary>
        </member>
        <member name="P:KdCore.KdUtil.NewID16">
            <summary>
            生成新的 16 位字符串ID, 虽然重复几率较低，但可能存在重复
            </summary>
        </member>
        <member name="P:KdCore.KdUtil.NewIDInt64">
            <summary>
            生成新的数字, 虽然重复几率较低，但可能存在重复
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.CreateNewDateID(System.Int32)">
            <summary>
            生成一个带日期前缀的数据主键ID(长度：48位字符)，并使用 index 参数来避免重复
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.BuildId">
            <summary>
            生成数据的主键ID(默认方法生成ID长度：44)，并给当前实体Id属性赋值
            </summary>
            <returns>由日期时间(12位字符)+GUID组合的主键ID</returns>
        </member>
        <member name="M:KdCore.KdUtil.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            枚举器循环执行
            </summary>
            <typeparam name="T">泛型类型</typeparam>
            <param name="enumeration">枚举器</param>
            <param name="action">遍历操作</param>
        </member>
        <member name="M:KdCore.KdUtil.IsNull(System.Object,System.String)">
            <summary>
            判断是否为空
            </summary>
            <param name="x">需要判断的对象</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象不为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.IsEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            判断是否为空枚举
            </summary>
            <param name="x">需要判断的对象</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象不为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.IsEmpty``1(``0[],System.String)">
            <summary>
            判断是否为空数组
            </summary>
            <param name="x">需要判断的对象</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象不为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.NotNull(System.Object,System.String)">
            <summary>
            判断是否为非空
            </summary>
            <param name="x">需要判断的对象</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.NotEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            判断是否为非空集合
            </summary>
            <param name="x">需要判断的对象</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.NotEmpty``1(``0[],System.String)">
            <summary>
            判断是否为非空集合
            </summary>
            <param name="x">需要判断的对象</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetNameValueCollection(System.String[],System.String[])">
            <summary>
            获取NameValueCollection对象
            </summary>
            <param name="names"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ClearControlChars(System.String,System.String)">
            <summary>
            清理字符串中的控制字符；
            originalValue 为空值时返回 defaultValue；
            否则返回对 originalValue 清理控制字符后的结果
            </summary>
            <param name="originalValue"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ClearEmpty(System.String,System.String)">
            <summary>
            清理空字符串；
            originalValue 为空值时返回 defaultValue；
            否则返回对 originalValue 进行 Trim 的结果
            </summary>
            <param name="originalValue"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ClearWhiteSpace(System.String)">
            <summary>
            清除字符串中多余的空格
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.TryToDecimal(System.String,System.Nullable{System.Decimal})">
            <summary>
            转换字符串为 decimal? 类型
            </summary>
            <param name="numStr">字符串</param>
            <param name="defaultValue">默认值，不设置时为 null</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDecimal(System.String,System.Decimal)">
            <summary>
            转换字符串为 decimal 类型
            </summary>
            <param name="numStr">字符串</param>
            <param name="defaultValue">默认值，不设置时为 0</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToInt(System.String,System.Int32)">
            <summary>
            转换字符串为 int 类型
            </summary>
            <param name="numStr">字符串</param>
            <param name="defaultValue">默认值，不设置时为0</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.TryToInt(System.String,System.Nullable{System.Int32})">
            <summary>
            转换字符串为 int? 类型
            </summary>
            <param name="numStr">字符串</param>
            <param name="defaultValue">默认值，不设置时为 null</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToInt64(System.String,System.Int64)">
            <summary>
            转换字符串为 long 类型
            </summary>
            <param name="numStr">字符串</param>
            <param name="defaultValue">默认值，不设置时为0</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.TryToInt64(System.String,System.Nullable{System.Int64})">
            <summary>
            转换字符串为 long? 类型
            </summary>
            <param name="numStr">字符串</param>
            <param name="defaultValue">默认值，不设置时为 null</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDateTime(System.String,System.Nullable{System.DateTime})">
            <summary>
            转换日期字符串为 DateTime 类型
            如果转换失败，则返回DateTime.MinValue
            </summary>
            <param name="dateStr">日期字符串</param>
            <param name="defaultValue">转换失败时的默认值</param>
            <returns>DateTime 类型</returns>
        </member>
        <member name="M:KdCore.KdUtil.TryToDateTime(System.String,System.Nullable{System.DateTime})">
            <summary>
            转换日期字符串为 DateTime? 类型
            </summary>
            <param name="dateStr">日期字符串</param>
            <param name="defaultValue">转换失败时的默认值</param>
            <returns>DateTime? 类型</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToStingNature(System.Decimal,System.String)">
            <summary>
            转换浮点格式化字符串，默认为保留两位小数
            </summary>
            <param name="number"></param>
            <param name="formatString"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToStingNature(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            转换浮点格式化字符串，默认为保留两位小数
            为空时返回 string.Empty
            </summary>
            <param name="number"></param>
            <param name="formatString"></param>
            <param name="noValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToStingNature(System.Decimal,System.Int32)">
            <summary>
            获取 decimal? 类型的字符串
            </summary>
            <param name="number">decimal</param>
            <param name="floatLength">小数点后位数</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToStingNature(System.Nullable{System.Decimal},System.Int32,System.String)">
            <summary>
            获取 decimal? 类型的字符串
            </summary>
            <param name="number">decimal?</param>
            <param name="floatLength">小数点后位数</param>
            <param name="noValue">没有值时返回的默认值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetSimpleMessage(System.Exception,System.Boolean,System.Int32,System.Int32)">
            <summary>
            获取异常及内部异常比较简单的描述消息
            </summary>
            <param name="ex"></param>
            <param name="newLine"></param>
            <param name="level"></param>
            <param name="currLevel"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetSimpleMessage(System.Exception,System.Int32,System.Int32)">
            <summary>
            获取异常及内部异常比较简单的描述消息
            </summary>
            <param name="ex"></param>
            <param name="level"></param>
            <param name="currLevel"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.SetSelectedValue(System.Collections.Generic.IEnumerable{KdCore.Data.KdListItem},System.String,System.Boolean)">
            <summary>
            设置选中的项
            </summary>
            <param name="items"></param>
            <param name="value"></param>
            <param name="selectFirstIfNotExist">未找到选中项是是否选中第一个</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.SetSelectedValue(System.Collections.Generic.IEnumerable{KdCore.Data.KdListItem},System.String[])">
            <summary>
            设置选中的项
            </summary>
            <param name="items"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AddWaterMark(System.String,System.Drawing.Point,System.String)">
            <summary>
            添加水印
            </summary>
            <param name="filePath"></param>
            <param name="startPosition"></param>
            <param name="waterMarkPath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetTimeByInternet">
            <summary>
            从互联网时间服务器上获取当前北京时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetTimeNum(System.DateTime)">
            <summary>
            统一转换为本地时间后，计算从 <see cref="P:KdCore.KdBaseContext.DateTime_Spot"/> 以来经过的毫秒数
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetTimeNumUTC(System.DateTime)">
            <summary>
            统一转换为协调世界时 (UTC)后，计算从 <see cref="P:KdCore.KdBaseContext.DateTime_Spot"/> 以来经过的毫秒数
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetShortWeekName(System.String)">
            <summary>
            根据字符型日期，获取该日期是星期简称
            </summary>
            <param name="strDate"></param>
            <returns>星期几，如：一、二、三等</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetMaxStringDate(System.String,System.String)">
            <summary>
            对日期比较，返回较大的日期
            </summary>
            <param name="strDate1">日期，yyyy-MM-dd</param>
            <param name="strDate2">日期，yyyy-MM-dd</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeString(System.TimeSpan,System.String)">
            <summary>
            转换时间格式化字符串，默认格式为 05:08
            </summary>
            <param name="span">转换的时间</param> 
            <param name="formatString">格式化的格式</param>
            <returns>时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeString(System.Nullable{System.TimeSpan},System.String,System.String)">
            <summary>
            转换时间格式化字符串，默认格式为 2012-12-25
            </summary>
            <param name="span">转换的时间</param> 
            <param name="formatString">格式化的格式</param>
            <param name="noValueString">没有值时返回的字符串</param>
            <returns>时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeCNString(System.TimeSpan,System.Boolean)">
            <summary>
            转换时间格式化字符串，默认格式为 3天4小时7分56秒423
            </summary>
            <param name="span">转换的时间</param>  
            <param name="withoutMilliseconds">是否待毫秒显示</param>
            <returns>时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeCNString(System.Nullable{System.TimeSpan},System.Boolean)">
            <summary>
            转换时间格式化字符串，默认格式为 3天4小时7分56秒423
            </summary>
            <param name="span">转换的时间</param>  
            <param name="withoutMilliseconds">是否待毫秒显示</param>
            <returns>时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDateString(System.DateTime,System.String)">
            <summary>
            转换日期格式化字符串，默认格式为 2012-12-25
            </summary>
            <param name="date">转换的日期</param> 
            <param name="formatString">格式化的格式</param>
            <returns>日期格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeString(System.DateTime,System.String)">
            <summary>
            转换时间格式化字符串，默认格式为 2012-12-25 14:30
            </summary>
            <param name="date">转换的时间</param> 
            <param name="formatString">格式化的格式</param>
            <returns>时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeDbPreciseString(System.DateTime,System.String)">
            <summary>
            转换精确日期时间格式化字符串，默认格式为 2012-12-25 14:30.15.236
            </summary>
            <param name="date">转换的时间</param> 
            <param name="formatString">格式化的格式</param>
            <returns>时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimePreciseString(System.DateTime,System.String)">
            <summary>
            转换精确日期时间格式化字符串，默认格式为 2012-12-25 14:30.15.2361352
            </summary>
            <param name="date">转换的时间</param> 
            <param name="formatString">格式化的格式</param>
            <returns>时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeDbPreciseString(System.Nullable{System.DateTime},System.String)">
            <summary>
            转换精确日期时间格式化字符串，默认格式为 2012-12-25 14:30.15.236
            </summary>
            <param name="date">转换的时间</param> 
            <param name="formatString">格式化的格式</param>
            <returns>时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimePreciseString(System.Nullable{System.DateTime},System.String)">
            <summary>
            转换精确日期时间格式化字符串，默认格式为 2012-12-25 14:30.15.2361352
            </summary>
            <param name="date">转换的时间</param> 
            <param name="formatString">格式化的格式</param>
            <returns>时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDateString(System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            转换日期格式化字符串，默认格式为 2012-12-25
            为空时返回 string.Empty
            </summary>
            <param name="date">转换的日期</param> 
            <param name="formatString">格式化的格式</param>
            <param name="noValue">date 没有值时显示的字符串</param>
            <returns>日期格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeString(System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            转换时间格式化字符串，默认格式为 2012-12-25
            </summary>
            <param name="date">转换的时间</param> 
            <param name="formatString">格式化的格式</param>
            <param name="noValueString">没有值时返回的字符串</param>
            <returns>时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDateCNString(System.DateTime,System.String)">
            <summary>
            获取 DateTime? 类型的日期字符串
            </summary>
            <param name="date">转换的日期</param> 
            <param name="formatString">格式化的格式</param> 
            <returns>中文日期格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDateCNString(System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            获取 DateTime? 类型的日期字符串
            </summary>
            <param name="date">转换的日期</param> 
            <param name="formatString">格式化的格式</param>
            <param name="noValueString">没有值时返回的字符串</param>
            <returns>中文日期格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeCNString(System.DateTime,System.String)">
            <summary>
            获取 DateTime? 类型的时间字符串
            </summary>
            <param name="time">转换的时间</param> 
            <param name="formatString">格式化的格式</param> 
            <returns>中文时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeCNString(System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            获取 DateTime? 类型的中文时间字符串
            </summary>
            <param name="time">转换的时间</param> 
            <param name="formatString">格式化的格式</param>
            <param name="noValueString">没有值时返回的字符串</param>
            <returns>中文时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToPresent(System.DateTime)">
            <summary>
            转换时间格式化为易读格式字符串，如：3天前
            </summary>
            <param name="date">转换的时间</param>  
            <returns>时间格式化字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeString(System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <summary>
            将日期时间区间合并输出为单一字符串，如果时间格式化模板为 null，则只输出日期部分
            </summary>
            <param name="start">开始日期</param>
            <param name="end">结束日期</param>
            <param name="jointer">开始日期与结束日期之间的连接符，默认 " 至 "，如不想输出连接符，必须设置成 <see cref="F:System.String.Empty"/> </param>
            <param name="timeFormat">时间格式化字符串，默认值："HH:mm"</param>
            <param name="dateFormat">日期格式化字符串，默认值："yyyy年MM月dd日"</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToTimeString(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
            将日期时间区间合并输出为单一字符串 ，如果时间格式化模板为 null，则只输出日期部分
            </summary>
            <param name="start">开始日期</param>
            <param name="end">结束日期</param>
            <param name="jointer">开始日期与结束日期之间的连接符，默认 " 至 "，如不想输出连接符，必须设置成 <see cref="F:System.String.Empty"/> </param>
            <param name="timeFormat">时间格式化字符串，默认值："HH:mm"</param>
            <param name="dateFormat">日期格式化字符串，默认值："yyyy年MM月dd日"</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDateString(System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            将日期时间区间合并输出为单一字符串，如果时间格式化模板为 null，则只输出日期部分
            </summary>
            <param name="start">开始日期</param>
            <param name="end">结束日期</param>
            <param name="jointer">开始日期与结束日期之间的连接符，默认 " 至 "，如不想输出连接符，必须设置成 <see cref="F:System.String.Empty"/> </param>
            <param name="dateFormat">日期格式化字符串，默认值："yyyy年MM月dd日"</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDateString(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            将日期时间区间合并输出为单一字符串，如果时间格式化模板为 null，则只输出日期部分
            </summary>
            <param name="start">开始日期</param>
            <param name="end">结束日期</param>
            <param name="jointer">开始日期与结束日期之间的连接符，默认 " 至 "，如不想输出连接符，必须设置成 <see cref="F:System.String.Empty"/> </param>
            <param name="dateFormat">日期格式化字符串，默认值："yyyy年MM月dd日"</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.EqualsFileTime(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            比较文件时间是否大致相等；文件时间每次读取稍有差异，暂定只要秒数之间差别不超过 2 秒即视为相同时间
            </summary>
            <param name="fileTime1"></param>
            <param name="fileTime2"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.EqualsFileTime(System.DateTime,System.DateTime)">
            <summary>
            比较文件时间是否大致相等；文件时间每次读取稍有差异，暂定只要秒数之间差别不超过 2 秒即视为相同时间
            </summary>
            <param name="fileTime1"></param>
            <param name="fileTime2"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsWeekEnd(System.DateTime)">
            <summary>
            获取指定日期是否为周末
            </summary>
            <param name="date">指定的日期</param>
            <returns>是否为周末</returns>
        </member>
        <member name="M:KdCore.KdUtil.IsWeekEnd(System.DateTime,System.String,System.String)">
            <summary>
            获取指定日期是否为周末
            </summary>
            <param name="date">指定的日期</param>
            <param name="weekend">周末时返回的字符串</param>
            <param name="workday">不是周末时返回的字符串</param>
            <returns>是否为周末</returns>
        </member>
        <member name="M:KdCore.KdUtil.InRange(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            获取指定日期是否在日期范围内
            </summary>
            <param name="date">指定的日期</param>
            <param name="start">日期范围的开始日期</param>
            <param name="end">日期范围的结束日期</param>
            <returns>是否在日期范围内</returns>
        </member>
        <member name="M:KdCore.KdUtil.NotInRange(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            获取指定日期是否在日期范围内
            </summary>
            <param name="date">指定的日期</param>
            <param name="start">日期范围的开始日期</param>
            <param name="end">日期范围的结束日期</param>
            <returns>是否在日期范围内</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToDayUnique(System.DateTime)">
            <summary>
            将日期转换为唯一的字符串
            </summary>
            <param name="date">日期</param>
            <returns>唯一的字符串值</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetDayIndex(System.DateTime)">
            <summary>
            获取指定日期按天索引的数字（<code> return date.Year * 1000 + date.DayOfYear </code>）。   
            </summary>
            <param name="date">当前日期</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FromDayIndex(System.Int32)">
            <summary>
            获取按天索引的数字代表的日期
            </summary>
            <param name="dayIndex"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetWeekNums(System.DateTime,System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            获取指定日期是在一年中的第几周
            </summary>
            <param name="date">指定的日期</param>
            <param name="firstDayOfWeek">表示一周的第一天的枚举值</param>
            <param name="weekRule">确定年份第一周的规则</param>
            <returns>一年中的第几周</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetFirstWeekDayOfYear(System.Nullable{System.Int32},System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            获取指定年份的第一个星期索引的第一天
            </summary>
            <param name="year">指定的年份</param>
            <param name="firstDayOfWeek">表示一周的第一天的枚举值</param>
            <param name="weekRule">确定年份第一周的规则</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetWeekIndex(System.DateTime,System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            获取指定日期所在星期的索引数字（Year*100+Week）。   
            </summary>
            <param name="date">当前日期</param>
            <param name="firstDayOfWeek">表示一周的第一天的枚举值</param>
            <param name="weekRule">确定年份第一周的规则</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FromWeekIndex(System.Int32,System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            获取按周索引的数字代表的周的开始日期
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.GetWeekStart(System.DateTime,System.DayOfWeek)">
            <summary>
            获取指定日期所在星期的第一天。    
            </summary>
            <param name="date">当前日期</param>
            <param name="firstDayOfWeek">表示一周的第一天的枚举值</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetWeekEnd(System.DateTime,System.DayOfWeek)">
            <summary>
            获取指定日期所在星期的最后一天。   
            </summary>
            <param name="date">当前日期</param>
            <param name="firstDayOfWeek">表示一周的第一天的枚举值</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetMonthStart(System.DateTime)">
            <summary>
            获取指定日期所在月份的第一天。    
            </summary>
            <param name="date">当前日期</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetMonthNum(System.DateTime)">
            <summary>
            获取指定日期所在月份的直观数字（Year*100+Month, 如201508）。   
            </summary>
            <param name="date">当前日期</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FromMonthNum(System.Int32)">
            <summary>
            获取按月份的直观数字（Year*100+Month, 如201508）代表的月份第一天日期
            </summary>
            <param name="monthIndex"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetMonthIndex(System.DateTime)">
            <summary>
            获取指定日期所在月份的索引数字（Year*12+Month,可直接进行加减推算月份）。   
            </summary>
            <param name="date">当前日期</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FromMonthIndex(System.Int32)">
            <summary>
            获取按月份索引的数字（Year*12+Month,可直接进行加减推算月份）代表的月份第一天日期
            </summary>
            <param name="monthIndex"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetMonthEnd(System.DateTime)">
            <summary>
            获取指定日期所在月份最后一天。   
            </summary>
            <param name="date">当前日期</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetYearStart(System.DateTime)">
            <summary>
            获取指定日期所在年份的第一天。    
            </summary>
            <param name="date">当前日期</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetYearEnd(System.DateTime)">
            <summary>
            获取指定日期所在年份最后一天。   
            </summary>
            <param name="date">当前日期</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Random``1(System.Collections.Generic.IEnumerable{``0},System.Random)">
            <summary>
            从抽取范围中随机抽取一个元素出来
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ranges"></param>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Random``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Random)">
            <summary>
            从抽取范围中随机抽取一个不包括在排除范围中的元素出来
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ranges"></param>
            <param name="rangeExclude"></param>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Random``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Random)">
            <summary>
            从抽取范围中随机抽取参数指定个数的元素出来
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ranges"></param>
            <param name="count"></param>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Random``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Collections.Generic.IEnumerable{``0},System.Random)">
            <summary>
            从抽取范围中随机抽取参数指定个数且不包括在排除范围中的元素出来
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ranges"></param>
            <param name="count"></param>
            <param name="excludes"></param>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.RandomDistinct``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Random)">
            <summary>
            从抽取范围中随机抽取参数指定个数的完全不相同的元素出来
            </summary>
            <typeparam name="TElement"></typeparam>
            <param name="ranges"></param>
            <param name="count"></param>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.RandomDistinct``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Collections.Generic.IEnumerable{``0},System.Random)">
            <summary>
            从抽取范围中随机抽取参数指定个数且不包括在排除范围中的完全不相同的元素出来
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ranges"></param>
            <param name="count"></param>
            <param name="excludes"></param>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.EnsureDirectory(System.String,System.Boolean)">
            <summary>
            检查确认文件路径的文件夹是否存在，不存在则创建
            </summary>
            <param name="filePath"></param>
            <param name="deleteExists"></param>
        </member>
        <member name="M:KdCore.KdUtil.GetSafePath(System.String)">
            <summary>
            过滤掉非法及禁用字符，获取安全的文件保存路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.SafePathCombine(System.String,System.String)">
            <summary>
            对文件路径进行安全的组合
            </summary>
            <param name="safePath"></param>
            <param name="unkownPath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.RemovePathLiftChar(System.String)">
            <summary>
            移除路径字符串开头和结尾的 . \ / ~ 等可能会造成目录提升的字符，确保在组合路径时能获取较安全的文件保存路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FirstLetterToUpper(System.String,System.Boolean)">
            <summary>
            字符串首字母大写，注意不会自动解析英文单词，也就不会自动转换为帕斯卡命名格式
            </summary>
            <param name="source"></param>
            <param name="removeNotLetterAndDigit">是否移除非字母数字的字符</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FileNameFirstLetterToUpper(System.String,System.Boolean)">
            <summary>
            给文件名称添加后缀，注意非全部处理时可能会自动转换 / 为 \
            </summary>
            <param name="fileName"></param>
            <param name="fullPath">是否处理整个路径字符串，默认为 false，仅处理文件名</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AddFileNameSuffix(System.String,System.String)">
            <summary>
            给文件名称添加后缀
            </summary>
            <param name="fileName"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FileBackup(System.String)">
            <summary>
            按日期备份文件
            </summary>
            <param name="filePath">文件路径</param>
            <returns>备份的文件是否存在</returns>
        </member>
        <member name="M:KdCore.KdUtil.ClearEmptyFolders(System.String,System.String[])">
            <summary>
            清理删除空文件夹
            </summary>
            <param name="folderPath">清理目标文件夹目录的物理路径</param>
            <param name="retainFolderNames">保留不做删除处理的文件夹名称</param>
        </member>
        <member name="M:KdCore.KdUtil.ClearFileHistory(System.String,System.Int32,System.String)">
            <summary>
            清理过期的历史文件
            </summary>
            <param name="basePath">清理目标文件夹目录路径</param>
            <param name="saveDays">保留多少天数之内的文件</param>
            <param name="extensionName">需要清理文件的扩展名，如 txt 或 xls </param>
        </member>
        <member name="P:KdCore.KdUtil.FileTypeDescriptions">
            <summary>
            文件扩展名对应文件类型描述说明
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.GetFileTypeDesc(System.String)">
            <summary>
            根据扩展名获取文件类型描述说明
            </summary>
            <param name="extName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.DetectEncoding(System.IO.FileStream,System.Text.Encoding,System.Int32)">
            <summary>
            取得文本文件的编码方式
            </summary>
            <param name="fileStream">文件流</param>
            <param name="defaultEncoding"></param>
            <param name="tryMaxLength"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.DetectEncoding(System.String,System.Text.Encoding)">
            <summary>
            取得文本文件的编码方式
            </summary>
            <param name="filePath">文件路径</param>
            <param name="defaultEncoding"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.TryReadTextFile(System.String,System.Text.Encoding)">
            <summary>
            根据指定的编码格式获取文本文件的内容，如果未指定编码格式，则根据文件内容进行自行判断编码，
            </summary>
            <param name="filePath"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ReadTextFile(System.String)">
            <summary>
            按 <see cref="P:System.Text.Encoding.UTF8"/> 编码格式获取文本文件的内容
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ReadTextFile(System.String,System.Text.Encoding)">
            <summary>
            根据指定的编码格式获取文本文件的内容
            </summary>
            <param name="filePath"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.WriteTextFile(System.String,System.String)">
            <summary>
            按 <see cref="P:System.Text.Encoding.UTF8"/> 编码格式保存文本文件的内容
            </summary>
            <param name="filePath"></param>
            <param name="fileContent"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.WriteTextFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            根据指定的编码格式保存文本文件的内容
            </summary>
            <param name="filePath"></param>
            <param name="fileContent"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FileToBase64(System.String)">
            <summary>
            把文件内容转换成Base64格式的字符串
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FileFromBase64(System.String,System.String)">
            <summary>
            把Base64的字符串转换成文件内容
            </summary>
            <param name="base64String"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:KdCore.KdUtil.FileToHexContent(System.String)">
            <summary>
            把文件内容转换成16进制格式的字符串
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FileFromHexContent(System.String,System.String)">
            <summary>
            把16进制的字符串转换成文件内容
            </summary>
            <param name="hexString"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:KdCore.KdUtil.IsTextFileByExtName(System.String)">
            <summary>
            根据文件扩展名判断是否为文本文件
            </summary>
            <param name="fileName">文件扩展名为带"."</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetFileSizeToMegabytes(System.Int64)">
            <summary>
            获取以MB为单位的占用空间大小
            </summary>
            <param name="bytes">字节大小</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetFileSizeDesc(System.Nullable{System.Int64})">
            <summary>
            获取文件大小的文字描述
            </summary>
            <param name="fileLength">文件字节大小</param>
            <returns>如多少KB，多少MB，多少GB等</returns>
        </member>
        <member name="M:KdCore.KdUtil.FindEncoder(System.Drawing.Imaging.ImageFormat)">
            <summary>
            获取指定格式的图像编码器
            </summary>
            <param name="format">图像的文件格式</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ImgSaveTo(System.Drawing.Image,System.IO.Stream,System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary> 
            图片保存
            </summary>
            <param name="image">要保存的图片</param>
            <param name="stream">图片保存输出流</param> 
            <param name="qualityLevel">指定图像的压缩级别。 有效值范围为从 0 到 100。 指定的数值越低，压缩越高，因此图像的质量越低。 值为 0 时，图像的质量最差；值为 100 时，图像的质量最佳。</param> 
            <param name="imgFormat">System.Drawing.Imaging.ImageFormat，保存的图像的格式。</param> 
        </member>
        <member name="M:KdCore.KdUtil.ImgSaveTo(System.Drawing.Image,System.String,System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary> 
            图片保存
            </summary>
            <param name="image">要保存的图片</param>
            <param name="savePath">图片保存位置</param> 
            <param name="qualityLevel">指定图像的压缩级别。 有效值范围为从 0 到 100。 指定的数值越低，压缩越高，因此图像的质量越低。 值为 0 时，图像的质量最差；值为 100 时，图像的质量最佳。</param> 
            <param name="imgFormat">System.Drawing.Imaging.ImageFormat，保存的图像的格式。</param> 
        </member>
        <member name="M:KdCore.KdUtil.ImgCompressToFile(System.Drawing.Image,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary> 
            图片压缩
            </summary>
            <param name="source">压缩前的图片</param>
            <param name="targetPath">压缩后的图片保存位置</param>
            <param name="targetHeight">压缩后的高度（以像素为单位）</param>
            <param name="targetWidth">压缩后的宽度（以像素为单位）</param>
            <param name="qualityLevel">指定图像的压缩级别。 有效值范围为从 0 到 100。 指定的数值越低，压缩越高，因此图像的质量越低。 值为 0 时，图像的质量最差；值为 100 时，图像的质量最佳。</param>
            <param name="fixedRatio">是否保持高宽比。设置为 false 时，完全按照指定参数的尺寸进行重新绘制；设置为 true 时，将保持高宽比，避免图像变形</param> 
            <param name="targetIsMax">参数尺寸为最大尺寸，在保持高宽比时有效。设置为 true 时，使最大的一边与参数保持一致；设置为 true 时，使最小的一边与参数保持一致</param>
        </member>
        <member name="M:KdCore.KdUtil.ImgCompressToStream(System.Drawing.Image,System.IO.Stream,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary> 
            图片压缩
            </summary>
            <param name="source">压缩前的图片</param>
            <param name="stream">压缩后的图片输出流</param>
            <param name="targetHeight">压缩后的高度（以像素为单位）</param>
            <param name="targetWidth">压缩后的宽度（以像素为单位）</param>
            <param name="qualityLevel">指定图像的压缩级别。 有效值范围为从 0 到 100。 指定的数值越低，压缩越高，因此图像的质量越低。 值为 0 时，图像的质量最差；值为 100 时，图像的质量最佳。</param>
            <param name="fixedRatio">是否保持高宽比。设置为 false 时，完全按照指定参数的尺寸进行重新绘制；设置为 true 时，将保持高宽比，避免图像变形</param> 
            <param name="targetIsMax">参数尺寸为最大尺寸，在保持高宽比时有效。设置为 true 时，使最大的一边与参数保持一致；设置为 true 时，使最小的一边与参数保持一致</param>
        </member>
        <member name="M:KdCore.KdUtil.ImgCompress(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary> 
            图片压缩
            </summary>
            <param name="source">压缩前的图片</param>
            <param name="targetHeight">压缩后的高度（以像素为单位）</param>
            <param name="targetWidth">压缩后的宽度（以像素为单位）</param>
            <param name="qualityLevel">指定图像的压缩级别。 有效值范围为从 0 到 100。 指定的数值越低，压缩越高，因此图像的质量越低。 值为 0 时，图像的质量最差；值为 100 时，图像的质量最佳。</param>
            <param name="fixedRatio">是否保持高宽比。设置为 false 时，完全按照指定参数的尺寸进行重新绘制；设置为 true 时，将保持高宽比，避免图像变形</param> 
            <param name="targetIsMax">参数尺寸为最大尺寸，在保持高宽比时有效。设置为 true 时，使最大的一边与参数保持一致；设置为 true 时，使最小的一边与参数保持一致</param>
            <returns>压缩后的图片</returns>
        </member>
        <member name="M:KdCore.KdUtil.ImgCreateThumbnail(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary> 
            图片缩略图
            </summary>
            <param name="source">压缩前的图片</param>
            <param name="targetHeight">压缩后的高度（以像素为单位）</param>
            <param name="targetWidth">压缩后的宽度（以像素为单位）</param>
            <param name="fixedRatio">是否保持高宽比。设置为 false 时，完全按照指定参数的尺寸进行重新绘制；设置为 true 时，将保持高宽比，避免图像变形</param> 
            <param name="targetIsMax">参数尺寸为最大尺寸，在保持高宽比时有效。设置为 true 时，使最大的一边与参数保持一致；设置为 true 时，使最小的一边与参数保持一致</param>
            <param name="qualityLevel">指定图像的压缩级别。 有效值范围为从 0 到 100。 指定的数值越低，压缩越高，因此图像的质量越低。 值为 0 时，图像的质量最差；值为 100 时，图像的质量最佳。</param>
            <returns>处理是否成功</returns>
        </member>
        <member name="M:KdCore.KdUtil.ImgCreateThumbnailFile(System.Drawing.Image,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary> 
            图片缩略图
            </summary>
            <param name="source">压缩前的图片</param>
            <param name="targetPath">压缩后的图片保存位置</param>
            <param name="targetHeight">压缩后的高度（以像素为单位）</param>
            <param name="targetWidth">压缩后的宽度（以像素为单位）</param>
            <param name="fixedRatio">是否保持高宽比。设置为 false 时，完全按照指定参数的尺寸进行重新绘制；设置为 true 时，将保持高宽比，避免图像变形</param> 
            <param name="targetIsMax">参数尺寸为最大尺寸，在保持高宽比时有效。设置为 true 时，使最大的一边与参数保持一致；设置为 true 时，使最小的一边与参数保持一致</param>
            <param name="qualityLevel">指定图像的压缩级别。 有效值范围为从 0 到 100。 指定的数值越低，压缩越高，因此图像的质量越低。 值为 0 时，图像的质量最差；值为 100 时，图像的质量最佳。</param>
            <returns>处理是否成功</returns>
        </member>
        <member name="M:KdCore.KdUtil.HasKey(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            查询键值集合中是否包含指定键
            </summary>
            <param name="collection"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsEmpty(System.Collections.Specialized.NameObjectCollectionBase)">
            <summary>
            获取键值集合是否为 null 或不包含任何值
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Clone(System.Collections.Specialized.NameValueCollection)">
            <summary>
            创建一个新的 NameValueCollection 键值集合对象，并将源键值集合中的值都复制到新的集合中
            </summary>
            <param name="source">原始的键值集合</param>
            <returns>一个新的 NameValueCollection 对象</returns>
        </member>
        <member name="M:KdCore.KdUtil.Merge(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Boolean)">
            <summary>
            合并 NameValueCollection 对象
            </summary>
            <param name="source">原始的键值集合</param>
            <param name="target">要添加融合的键值集合</param>
            <param name="replaceExist">是否替换原始集合中已有键的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJsonString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            转换成 JSON 格式的字符串
            </summary>
            <param name="nameValues"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.SimpleJsonToNameValues(System.String)">
            <summary>
            将简单的 JSON 格式的字符串转换成 NameValueCollection
            </summary>
            <param name="simpleJson"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.CombineNameValues(System.Collections.Generic.IEnumerable{System.String},System.Object[])">
            <summary>
            转换获取一个 NameValueCollection 对象
            </summary>
            <param name="names"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AddNameValues(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IEnumerable{System.String},System.Object[])">
            <summary>
            向 NameValueCollection 对象添加键值数据
            </summary>
            <param name="nameValues"></param>
            <param name="names"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ConvertToEntity``1(System.Collections.Specialized.NameValueCollection,``0)">
            <summary>
            将键值集合转为简单类型实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.XmlSerialize(System.Object,System.Xml.Serialization.XmlSerializer)">
            <summary>
            XML序列化
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.ToXml``1(``0,System.Xml.Serialization.XmlSerializer)">
            <summary>
            XML序列化
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.FromXml(System.String,System.Type,System.Xml.Serialization.XmlSerializer)">
            <summary>
            XML反序列化
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.FromXml(System.String,System.String,System.Xml.Serialization.XmlSerializer)">
            <summary>
            XML反序列化
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.FromXml``1(System.String,System.Xml.Serialization.XmlSerializer)">
            <summary>
            XML反序列化
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.XmlSerializeFile(System.Object,System.String,System.Xml.Serialization.XmlSerializer)">
            <summary>
            保存对象的XML格式序列化字符串到指定路径的文件
            </summary>
            <param name="source">保存的对象</param>
            <param name="filePath">保存文件的路径</param>
            <param name="serializer"></param>
        </member>
        <member name="M:KdCore.KdUtil.ToXmlFile``1(``0,System.String,System.Xml.Serialization.XmlSerializer)">
            <summary>
            保存对象的XML格式序列化字符串到指定路径的文件
            </summary>
            <typeparam name="T">保存对象类型</typeparam>
            <param name="source">保存的对象</param>
            <param name="filePath">保存文件的路径</param>
            <param name="serializer"></param>
        </member>
        <member name="M:KdCore.KdUtil.FromXmlFile``1(System.String,``0@,System.Xml.Serialization.XmlSerializer)">
            <summary>
            反序列化XML文件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <param name="target"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FromXmlFile``1(System.String,System.Xml.Serialization.XmlSerializer)">
            <summary>
            反序列化XML文件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xmlPath"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetTextNode(System.Xml.XmlNode)">
            <summary>
            获取节点下第一个文本节点；
            如果当前指定的节点是 <see cref="F:System.Xml.XmlNodeType.Text"/> 或者 <see cref="F:System.Xml.XmlNodeType.CDATA"/> 类型，则直接返回当前节点；
            如果当前节点不是前述类型，则在其子节点中递归遍历查找第一个属于前述类型的子节点并返回
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetTextValue(System.Xml.XmlNode,System.Boolean)">
            <summary>
            获取节点下第一个文本节点（<see cref="M:KdCore.KdUtil.GetTextNode(System.Xml.XmlNode)"/>）的值
            </summary>
            <param name="node"></param>
            <param name="autoTrim"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToNumberCnString(System.String)">
            <summary>
            数字转换中文大写
            </summary>
            <param name="strNum"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToNumberCnString(System.Decimal)">
            <summary>
            数字转换中文大写
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToNumberCnString(System.Nullable{System.Decimal})">
            <summary>
            数字转换中文大写
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToMoney(System.Decimal)">
            <summary>
            转换成大写数字金额
            </summary>
            <param name="amount">需要转换的金额：decimal类型</param>
            <returns>诸如“壹佰伍拾陆圆柒角整”的大写数字金额</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToMoney(System.Double)">
            <summary>
            转换成数字金额
            </summary>
            <param name="amount">需要转换的金额：double类型</param>
            <returns>诸如“壹佰伍拾陆圆柒角整”的大写数字金额</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToMoney(System.Int32)">
            <summary>
            转换成数字金额
            </summary>
            <param name="amount">需要转换的金额：int类型</param>
            <returns>诸如“壹佰伍拾陆圆柒角整”的大写数字金额</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToMoney(System.String)">
            <summary>
            转换成数字金额
            </summary>
            <param name="amount">数字字符串</param>
            <returns>诸如“壹佰伍拾陆圆柒角整”的大写数字金额</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToMoneyCnString(System.String)">
            <summary>
            数字转换中文金额大写；会添加元角分整
            </summary>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToMoneyCnString(System.Decimal)">
            <summary>
            数字转换中文金额大写；会添加元角分整
            </summary>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToMoneyCnString(System.Nullable{System.Decimal})">
            <summary>
            数字转换中文金额大写；会添加元角分整
            </summary>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToAmountString(System.Nullable{System.Decimal})">
            <summary>
            获取金额小写格式字符串
            </summary>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.NotEqual(System.Single,System.Single)">
            <summary>
            比较两个浮点数是否不相等
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.NotEqual(System.Double,System.Double)">
            <summary>
            比较两个浮点数是否不相等
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Equal(System.Single,System.Single,System.Single)">
            <summary>
            比较两个浮点数是否相等
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="epsilon"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Equal(System.Double,System.Double,System.Double)">
            <summary>
            比较两个浮点数是否相等
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="epsilon"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsNumberChar(System.Char)">
            <summary>
            是否数字字符
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToArrayNumber(System.String)">
            <summary>
            以（;）为分隔符转换为数字字符串数组，非数字字符也视为分隔符
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToArrayDouble(System.String,System.Boolean,System.Boolean)">
            <summary>
            以（;）为分隔符转换为数字数组，非数字字符也视为分隔符
            </summary>
            <param name="value"></param>
            <param name="distinct"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToArrayDecimal(System.String,System.Boolean,System.Boolean)">
            <summary>
            以（;）为分隔符转换为数字数组，非数字字符也视为分隔符
            </summary>
            <param name="value"></param>
            <param name="distinct"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToArrayInt32(System.String,System.Boolean,System.Boolean)">
            <summary>
            以（;）为分隔符转换为数字数组，非数字字符也视为分隔符
            </summary>
            <param name="value"></param>
            <param name="distinct"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToArrayInt64(System.String,System.Boolean,System.Boolean)">
            <summary>
            以（;）为分隔符转换为数字数组，非数字字符也视为分隔符
            </summary>
            <param name="value"></param>
            <param name="distinct"></param>
            <param name="sort"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MD5(System.String)">
            <summary>
            对字符串进行MD5计算消息摘要
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MD5(System.IO.FileStream)">
            <summary>
            获取文件流的MD5 hash值
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsBase64String(System.String)">
            <summary>
            判断是否为base64字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsSafeSqlString(System.String)">
            <summary>
            检测是否有Sql危险字符
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.SHA1(System.String)">
            <summary>
            对字符串进行SHA1计算消息摘要
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetCrc16(System.Byte[])">
            <summary>
            计算CRC-16校验码
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.GetCrc16(System.String,System.Text.Encoding)">
            <summary>
            计算CRC-16校验码
            </summary>
            <param name="str">带计算校验码的字符串</param>
            <param name="encoding">字符串转换字节时采用的编码</param>
        </member>
        <member name="M:KdCore.KdUtil.GetCrcFiveCode(System.String,System.Text.Encoding)">
            <summary>
            获取5位数字的校验码
            </summary>
            <param name="str">带计算校验码的字符串</param>
            <param name="encoding">字符串转换字节时采用的编码</param>
            <returns>5位定长的校验码</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetHostName">
            <summary>
             获取服务器的机器名
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetIpAddress">
            <summary>
            获取服务器的ip地址列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetOsVersion">
            <summary>
            获取服务器当前操作系统及版本数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ExecuteDosCommand(System.String)">
            <summary>
            执行DOS命令，返回DOS命令的输出
            </summary>
            <param name="dosCommand">dos命令</param>
            <returns>返回输出，如果发生异常，返回空字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ExecuteDosCommand(System.String,System.Int32)">
            <summary>
            执行DOS命令，返回DOS命令的输出
            </summary>
            <param name="dosCommand">dos命令</param>
            <param name="milliseconds">等待命令执行的时间（单位：毫秒），如果设定为0，则无限等待</param>
            <returns>返回输出，如果发生异常，返回空字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.MarkEncrypt(System.String)">
            <summary>
            对字符串进行加密，返回特征码
            </summary>
            <param name="value">字符串</param>
            <returns>特征码</returns>
        </member>
        <member name="M:KdCore.KdUtil.MarkValidate(System.Object,System.Object)">
            <summary>
            验证字符串与特征码是否一致
            </summary>
            <param name="value">字符串</param>
            <param name="mark">特征码</param>
            <returns>是否一致</returns>
        </member>
        <member name="M:KdCore.KdUtil.RegSvr32(System.String,System.String)">
            <summary>
            在系统中注册dll或ocx控件，先把要注册的文件copy到%systemroot%\system32\，再执行RegSvr32命令进行注册
            </summary>
            <param name="svrPath">要注册的文件所在的路径，不包含文件名</param>
            <param name="svrName">要注册的文件名</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.UnRegSvr32(System.String,System.Boolean)">
            <summary>
            解除文件注册，并根据选项控制是否删除掉该文件
            </summary>
            <param name="svrName">要注册的文件名</param>
            <param name="delete">是否为删除注册</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.HasNewLine(System.String)">
            <summary>
            判断字符串是否是包含换行符
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsNullOrWhiteSpace(System.String,System.String)">
            <summary>
            判断字符串是否为空字符串
            </summary>
            <param name="x">需要判断的字符串</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象不为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.NotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            判断字符串是否为空字符串
            </summary>
            <param name="x">需要判断的字符串</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象不为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.IsNullOrEmpty(System.String,System.String)">
            <summary>
            判断字符串是否为空字符串
            </summary>
            <param name="x">需要判断的字符串</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象不为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.NotNullOrEmpty(System.String,System.String)">
            <summary>
            判断字符串是否为空字符串
            </summary>
            <param name="x">需要判断的字符串</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象不为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToCamelCase(System.String)">
            <summary>
            从输入字符串生成 Camel 大小写格式的字符串。
            </summary>
            <param name="source"></param>
            <returns>参数字符串的 Camel 大小写格式版本。</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToPascalCase(System.String)">
            <summary>
            从输入字符串生成 Pascal 大小写格式的字符串。
            </summary>
            <param name="source"></param>
            <returns>参数字符串的 Pascal 大小写格式版本。</returns>
        </member>
        <member name="M:KdCore.KdUtil.ToMakeValid(System.String)">
            <summary>
            从输入字符串生成有效的代码实体名称。
            </summary>
            <param name="source"></param>
            <returns>可以用作代码标识符的字符串，如方法参数的名称。 </returns>
        </member>
        <member name="M:KdCore.KdUtil.Format(System.String,System.Object[])">
            <summary>
            合成格式化字符串
            </summary>
            <param name="source"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Format(System.String,System.Object)">
            <summary>
            合成格式化字符串
            </summary>
            <param name="source"></param>
            <param name="arg0"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Format(System.String,System.Object,System.Object)">
            <summary>
            合成格式化字符串
            </summary>
            <param name="source"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Format(System.String,System.Object,System.Object,System.Object)">
            <summary>
            合成格式化字符串
            </summary>
            <param name="source"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Append(System.String,System.String)">
            <summary>
            在字符串的末尾添加字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="append"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Append(System.String,System.Object)">
            <summary>
            在字符串的末尾添加字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="append"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Append(System.String,System.String,System.Object)">
            <summary>
            在字符串的末尾添加字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="appendFormat"></param> 
            <param name="appendArg0"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Append(System.String,System.String,System.Object,System.Object)">
            <summary>
            在字符串的末尾添加字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="appendFormat"></param> 
            <param name="appendArg0"></param> 
            <param name="appendArg1"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Append(System.String,System.String,System.Object,System.Object,System.Object)">
            <summary>
            在字符串的末尾添加字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="appendFormat"></param> 
            <param name="appendArg0"></param> 
            <param name="appendArg1"></param> 
            <param name="appendArg2"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Append(System.String,System.String,System.Object[])">
            <summary>
            在字符串的末尾添加字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="appendFormat"></param> 
            <param name="appendArgs"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AppendLine(System.String,System.String)">
            <summary>
            在字符串的末尾添加一行新的字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="append"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AppendLine(System.String,System.Object)">
            <summary>
            在字符串的末尾添加一行新的字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="append"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AppendLines(System.String,System.Object[])">
            <summary>
            把枚举器中的对象逐个转换到一个以换行字符串为分隔字符串中，并追加到源字符串的末尾，返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="appendLines"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AppendLine(System.String,System.String,System.Object)">
            <summary>
            在字符串的末尾添加一行新的字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="appendFormat"></param> 
            <param name="appendArg0"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AppendLine(System.String,System.String,System.Object,System.Object)">
            <summary>
            在字符串的末尾添加一行新的字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="appendFormat"></param> 
            <param name="appendArg0"></param> 
            <param name="appendArg1"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AppendLine(System.String,System.String,System.Object,System.Object,System.Object)">
            <summary>
            在字符串的末尾添加一行新的字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="appendFormat"></param> 
            <param name="appendArg0"></param> 
            <param name="appendArg1"></param> 
            <param name="appendArg2"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AppendLine(System.String,System.String,System.Object[])">
            <summary>
            在字符串的末尾添加一行新的字符串，并返回合并后的字符串
            </summary>
            <param name="orginal"></param>
            <param name="appendFormat"></param> 
            <param name="appendArgs"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetValidDataTag(System.String)">
            <summary>
            检测字符串是否合适作为系统有效的数据标识，过滤转换为有效的数据标识编码;
            说明：汉字、大小写字母、数字以及下划线等可视为有效的标识字符；
            其他特殊符号，数字符号、标点符号等将会被过滤
            </summary>
            <param name="orginal"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetValidDataCode(System.String)">
            <summary>
            检测字符串是否存在不安全字符，过滤转换为有效的数据标识编码;
            说明：大小写字母、数字以及下划线可视为有效的标识字符，<see cref="M:System.Char.IsLetterOrDigit(System.Char)"/>
            </summary>
            <param name="orginal"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetValidDataText(System.String,System.Boolean,System.Boolean)">
            <summary>
            获取字符串的有效值，如果为空字符串或空白字符串则返回null，否则返回移除首尾空格的字符串
            </summary>
            <param name="orginal"></param> 
            <param name="trimStart">是否移除非空字符串的前导空格</param>
            <param name="trimEnd">是否移除非空字符串的尾部空格</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetValidDataText(System.String)">
            <summary>
            获取字符串的有效值，如果为空字符串或空白字符串则返回null，否则返回移除首尾空格的字符串
            </summary>
            <param name="orginal"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetDigit(System.String)">
            <summary>
            过滤输出是否属于十进制数字类别的字符（<see cref="M:System.Char.IsDigit(System.Char)"/>）
            </summary>
            <param name="orginal"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToString(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            格式化输出字符串
            </summary>
            <param name="nullable"></param>
            <param name="format"></param>
            <param name="nullValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToString(System.Nullable{System.Single},System.String,System.String)">
            <summary>
            格式化输出字符串
            </summary>
            <param name="nullable"></param>
            <param name="format"></param>
            <param name="nullValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToString(System.Nullable{System.Double},System.String,System.String)">
            <summary>
            格式化输出字符串
            </summary>
            <param name="nullable"></param>
            <param name="format"></param>
            <param name="nullValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToString(System.Nullable{System.Decimal},System.String,System.String)">
            <summary>
            格式化输出字符串
            </summary>
            <param name="nullable"></param>
            <param name="format"></param>
            <param name="nullValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToString(System.Nullable{System.DateTime},System.String,System.String)">
            <summary>
            格式化输出字符串
            </summary>
            <param name="nullable"></param>
            <param name="format"></param>
            <param name="nullValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToString(System.Nullable{System.DateTimeOffset},System.String,System.String)">
            <summary>
            格式化输出字符串
            </summary>
            <param name="nullable"></param>
            <param name="format"></param>
            <param name="nullValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToString(System.Nullable{System.TimeSpan},System.String,System.String)">
            <summary>
            格式化输出字符串
            </summary>
            <param name="nullable"></param>
            <param name="format"></param>
            <param name="nullValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.RepeatTimes(System.String,System.Int32,System.String,System.String)">
            <summary>
            使用字符串循环组成新的字符串
            </summary>
            <param name="source"></param>
            <param name="repeatTimes"></param>
            <param name="separator"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.FillLength(System.String,System.Int32,System.String,System.String)">
            <summary>
            使用字符串填充至指定最大长度的新字符串
            </summary>
            <param name="source"></param>
            <param name="maxLength"></param>
            <param name="separator"></param>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.TrimLength(System.String,System.Int32,System.String)">
            <summary>
            从字符串中截取指定长度，以"..."为结束符，汉字按2个长度单位处理
            </summary>
            <param name="oldString">字符串</param>
            <param name="length">返回的字符串长度</param>
            <param name="suffix">超过长度截取后添加的后缀字符串</param>
            <returns>符合指定长度的字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.Trim(System.String,System.String,System.StringComparison)">
            <summary>
            移除源字符串位于首尾处的指定字符串
            </summary>
            <param name="source"></param>
            <param name="trim"></param> 
            <param name="comparison"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.TrimStart(System.String,System.String,System.StringComparison)">
            <summary>
            移除开头字符串
            </summary>
            <param name="orginal"></param>
            <param name="trim"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.TrimEnd(System.String,System.String,System.StringComparison)">
            <summary>
            移除结尾字符串
            </summary>
            <param name="orginal"></param>
            <param name="trim"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.TrimNullOrWhiteSpace(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            清除重复以及空字符串
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ClearNullOrWhiteSpace(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            清除重复以及空字符串
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.NotNullOrWhiteSpace(System.String[],System.String)">
            <summary>
            判断是否为非空集合
            </summary>
            <param name="x">需要判断的对象</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.IsNullValue(System.Object,System.String)">
            <summary>
            判断是否为空或空字符串
            </summary>
            <param name="x">需要判断的对象</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象不为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.NotNullValue(System.Object,System.String)">
            <summary>
            判断是否为非空或空字符串
            </summary>
            <param name="x">需要判断的对象</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象不为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.KdUtil.EqualsIgnoreCase(System.String,System.Object)">
            <summary>
            判断字符串是否与目标字符串相同，忽略大小写（该方法的默认比较模式）
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Contains(System.String,System.String,System.StringComparison)">
            <summary>
            忽略大小写，判断目标字符串是否出现在源字符串内
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ContainsIgnoreCase(System.String,System.String)">
            <summary>
            忽略大小写，判断目标字符串是否出现在源字符串内
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.EqualsOrStartWith(System.String,System.String,System.StringComparison)">
            <summary>
            判断字符串是否与目标字符串相同或以目标字符串开头
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.EqualsOrStartWithIgnoreCase(System.String,System.String)">
            <summary>
            判断字符串是否与目标字符串相同或以目标字符串开头
            </summary>
            <param name="source"></param>
            <param name="target"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.EqualsOrEndsWith(System.String,System.String,System.StringComparison)">
            <summary>
            判断字符串是否与目标字符串相同或以目标字符串结束
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.EqualsOrEndsWithIgnoreCase(System.String,System.String)">
            <summary>
            判断字符串是否与目标字符串相同或以目标字符串结束
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AnyOneEquals(System.Collections.Generic.IEnumerable{System.String},System.String,System.StringComparison)">
            <summary>
            忽略大小写，判断目标字符串是否出现在指定的字符串集合内
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AnyOneEqualsIgnoreCase(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            忽略大小写，判断目标字符串是否出现在指定的字符串集合内
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AnyOneEquals(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparison)">
            <summary>
            判断字符串枚举中是否与目标字符串枚举中存在相同的元素
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AnyOneEqualsIgnoreCase(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            判断字符串枚举中是否与目标字符串枚举中存在相同（忽略大小写）的元素
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AnyOneContains(System.Collections.Generic.IEnumerable{System.String},System.String,System.StringComparison)">
            <summary>
            忽略大小写，判断目标字符串是否出现在指定的字符串集合中的任意一个字符串内
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AnyOneContainsIgnoreCase(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            忽略大小写，判断目标字符串是否出现在指定的字符串集合中的任意一个字符串内
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AnyOneContains(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparison)">
            <summary>
            判断字符串枚举中是否与目标字符串枚举中存在相同的元素
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="comparison"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AnyOneContainsIgnoreCase(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            忽略大小写，判断目标字符串集合中的是否存在某个字符串，出现在指定的字符串集合中的任意一个字符串内
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToHtmlAttrName(System.String)">
            <summary>
            处理字符串为 html 属性名称（将大写字母替换为小写，并添加 - 连字符）
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBool(System.Object,System.Boolean,System.String,System.String)">
            <summary>
            判断是否表示布尔值的True类型
            </summary>
            <param name="source">源对象</param>
            <param name="defaultValue">默认值，source 为空值时返回的结果</param>
            <param name="trueValue">直接作为true处理的值</param>
            <param name="falseValue">直接作为false处理的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBool(System.Object,System.String,System.String)">
            <summary>
            判断是否表示布尔值的True类型
            </summary>
            <param name="source">源对象</param>
            <param name="trueValue">直接作为true处理的值</param>
            <param name="falseValue">直接作为false处理的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBoolNullable(System.Object,System.String,System.String)">
            <summary>
            判断是否表示布尔值的True类型
            </summary>
            <param name="source">源对象</param>
            <param name="trueValue">直接作为true处理的值</param>
            <param name="falseValue">直接作为false处理的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBoolChar(System.Object)">
            <summary>
            将可能是布尔值的对象转换为单个字符（true=1, false=0）表示的字符串 
            </summary>
            <param name="source">转换的值</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBoolChar(System.Object,System.String)">
            <summary>
            将可能是布尔值的对象转换为单个字符（true=1, false=0）表示的字符串 
            </summary>
            <param name="source">转换的值</param> 
            <param name="nullText">值为空时返回的字符串</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBoolChar(System.Object,System.String,System.String)">
            <summary>
            将可能是布尔值的对象转换为单个字符表示的字符串 
            </summary>
            <param name="source">转换的值</param>
            <param name="trueChar">值为真时的字符串</param>
            <param name="falseChar">值为假时的字符串</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBoolChar(System.Object,System.String,System.String,System.String)">
            <summary>
            将可能是布尔值的对象转换为单个字符表示的字符串 
            </summary>
            <param name="source">转换的值</param>
            <param name="nullText">值为空时返回的字符串</param>
            <param name="trueChar">值为真时的字符串</param>
            <param name="falseChar">值为假时的字符串</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBoolText(System.Object)">
            <summary>
            将可能是布尔值的对象转换为字符串（true=是, false=否）；
            </summary>
            <param name="source">转换的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBoolText(System.Object,System.String)">
            <summary>
            将可能是布尔值的对象转换为字符串（true=是, false=否）；
            </summary>
            <param name="source">转换的值</param>
            <param name="nullText">值为空时的字符串</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBoolText(System.Object,System.String,System.String)">
            <summary>
            将可能是布尔值的对象转换为字符串
            </summary>
            <param name="source">转换的值</param>
            <param name="trueText">值为真时的字符串</param>
            <param name="falseText">值为假时的字符串</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToBoolText(System.Object,System.String,System.String,System.String)">
            <summary>
            将可能是布尔值的对象转换为字符串
            </summary>
            <param name="source">转换的值</param>
            <param name="nullText">值为空时的字符串</param>
            <param name="trueText">值为真时的字符串，默认为是</param>
            <param name="falseText">值为假时的字符串，默认为否</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.SplitLines(System.String)">
            <summary>
            按行分割字符串
            </summary>
            <param name="source"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.SortCommaString(System.String)">
            <summary>
            对逗号分隔的字符串进行排序
            </summary>
            <param name="primalString">最初的字符串</param>
            <returns>排序后的字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.SplitsDistinct(System.String,System.String[])">
            <summary>
            分割字符串，并移除重复项
            </summary>
            <param name="source"></param>
            <param name="separators">默认值等于 <code>BaseCore.ToolComm.ITEM_SPLIT_SYMBOL</code> 定义的常量</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Splits(System.String,System.String[])">
            <summary>
            分割字符串
            </summary>
            <param name="source"></param>
            <param name="separators">默认值等于 <code>BaseCore.ToolComm.ITEM_SPLIT_SYMBOL</code> 定义的常量</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Splits(System.String)">
            <summary>
            分割字符串
            </summary>
            <param name="source"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.CheckHyphens(System.String,System.String,System.String)">
            <summary>
            检查是否可以用于字符串多级识别的拼接
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="hyphens">连字符号</param>
        </member>
        <member name="M:KdCore.KdUtil.CheckIdHyphens(System.String,System.String[])">
            <summary>
            检查是否可以用于字符串多级识别的拼接
            </summary>
            <param name="name"></param>
            <param name="values"></param>
        </member>
        <member name="M:KdCore.KdUtil.CheckCodeHyphens(System.String,System.String[])">
            <summary>
            检查是否可以用于字符串多级识别的拼接
            </summary>
            <param name="name"></param>
            <param name="values"></param>
        </member>
        <member name="M:KdCore.KdUtil.CheckNameHyphens(System.String,System.String[])">
            <summary>
            检查是否可以用于字符串多级识别的拼接
            </summary>
            <param name="name"></param>
            <param name="values"></param>
        </member>
        <member name="M:KdCore.KdUtil.SameStart(System.String,System.String)">
            <summary>
            截取相同的部分，并合并不相同的部分
            </summary>
            <param name="left"></param>
            <param name="right"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.SameStartRemove(System.String,System.String,System.String)">
            <summary>
            截取相同的部分，并合并不相同的部分
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="jointer"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MergeUrl(System.String[])">
            <summary>
            合并组合URL类字符串
            </summary>
            <param name="urlPaths"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MergeId(System.String[])">
            <summary>
            合并组合主键ID类字符串
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MergeCode(System.String[])">
            <summary>
            合并组合编码标识类字符串
            </summary>
            <param name="codes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MergeName(System.String[])">
            <summary>
            合并组合名称标题类字符串
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Merge(System.String,System.String[])">
            <summary>
            合并串联的字符串
            </summary>
            <param name="separator">连接间隔字符串</param>
            <param name="sources">将要合并的字符串数组</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MergeDistinct(System.String,System.String[])">
            <summary>
            合并串联的字符串
            </summary>
            <param name="separator">连接间隔字符串</param>
            <param name="sources">将要合并的字符串数组</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Merge(System.String,System.Boolean,System.String[])">
            <summary>
            合并串联的字符串
            </summary>
            <param name="separator">连接间隔字符串</param>
            <param name="distinct">去除重复</param>
            <param name="sources">将要合并的字符串数组</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToMerge(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,System.Boolean)">
            <summary>
            合并串联的字符串
            </summary>
            <param name="sources">将要合并的字符串数组</param>
            <param name="separator">连接间隔字符串</param>
            <param name="distinct">去除重复</param>
            <param name="trimWhiteSpace">去除首尾空格</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoin(System.Collections.IEnumerable,System.String)">
            <summary>
            把枚举器中的对象逐个转换到字符串中（以separator为分隔）
            </summary>
            <param name="enumerable">枚举器</param>
            <param name="separator">分隔字符串</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoin(System.Collections.IEnumerable)">
            <summary>
            把枚举器中的对象逐个转换到字符串中（以 , 为分隔）
            </summary>
            <param name="enumerable">枚举器</param>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinLines(System.String,System.String[])">
            <summary>
            合并字符串，并以换行字符串为分隔
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinLines(System.Collections.IEnumerable)">
            <summary>
            把枚举器中的对象逐个转换到字符串中（以换行字符串为分隔）
            </summary>
            <param name="enumerable">枚举器</param>
        </member>
        <member name="M:KdCore.KdUtil.ToJoin``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            把枚举器中的对象逐个转换到字符串中（以separator为分隔）
            </summary>
            <param name="enumerable">枚举器</param>
            <param name="separator">分隔字符串</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoin``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            把枚举器中的对象逐个转换到字符串中（以 , 为分隔）
            </summary>
            <param name="enumerable">枚举器</param>
        </member>
        <member name="M:KdCore.KdUtil.ToJoin(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            把枚举器中的对象逐个转换到字符串中（以separator为分隔）
            </summary>
            <param name="enumerable">枚举器</param>
            <param name="separator">分隔字符串</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoin(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            把枚举器中的对象逐个转换到字符串中（以 , 为分隔）
            </summary>
            <param name="enumerable">枚举器</param>
        </member>
        <member name="M:KdCore.KdUtil.ToJoin(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            把枚举器1与枚举器2中的字符串合并后逐个转换到字符串中（以separator为分隔）
            </summary>
            <param name="enumerable1">枚举器1</param>
            <param name="enumerable2">枚举器2</param>
            <param name="separator">分隔字符</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinDistinct(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            把枚举器1与枚举器2中的字符串合并并去除重复后逐个转换到字符串中（以separator为分隔）
            </summary>
            <param name="enumerable1">枚举器1</param>
            <param name="enumerable2">枚举器2</param>
            <param name="separator">分隔字符</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinLines(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            把枚举器中的对象逐个转换到字符串中（以换行字符串为分隔）
            </summary>
            <param name="enumerable">枚举器</param>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinLines``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            把枚举器中的对象逐个转换到字符串中（以换行字符串为分隔）
            </summary>
            <param name="enumerable">枚举器</param>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinItems(System.String,System.String)">
            <summary>
            在字符串的首尾添加上间隔符，便于直接使用 Contains("," + itemValue + ",") 进行查询
            </summary>
            <param name="strItem">字符串</param> 
            <param name="separator">拼接分割符</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinItems(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            把枚举中的字符串以 , 为分隔拼接到同一个字符串中；
            并在首尾添加上间隔符，便于直接使用 Contains("," + itemValue + ",") 进行查询
            </summary>
            <param name="enumerable">枚举器</param>  
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinItems(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            把枚举中的字符串以指定的分隔符分隔后拼接到同一个字符串中；
            并在首尾添加上间隔符，便于直接使用 Contains("," + itemValue + ",") 进行查询
            </summary>
            <param name="enumerable">枚举器</param> 
            <param name="separator">拼接分割符</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinShow(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            把枚举中的字符串以指定的分隔符分隔后拼接到同一个字符串中以便于显示
            </summary>
            <param name="enumerable">枚举器</param> 
            <param name="separator">拼接分割符。默认为逗号，包含中文时使用中文标点，不包含中文时使用英文标点加空格</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToSingleLine(System.String)">
            <summary>
            将多行字符串转换为单行字符串，每行之间用空格间隔
            </summary>
            <param name="multiLines"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToShowItems(System.String,System.String)">
            <summary>
            将使用逗号分隔的字符串给分隔符添加上一个空格，便于显示查看
            </summary>
            <param name="strItems"></param>
            <param name="hyphens"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinSql(System.Collections.IEnumerable)">
            <summary>
            把枚举器中的对象逐个以SQL拼接方式转换到字符串中
            </summary>
            <param name="enumerable">枚举器</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinSql(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            把枚举器中的对象逐个以SQL拼接方式转换到字符串中
            </summary>
            <param name="enumerable">枚举器</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToJoinSql(System.String,System.String[])">
            <summary>
            转换字符串拼接为SQL拼接方式
            </summary>
            <param name="strJoint">现有的特定分隔符间隔的拼接字符串</param>
            <param name="separators">现有的分隔符</param>
            <returns>逗号间隔的SQL拼接字符串</returns>
        </member>
        <member name="M:KdCore.KdUtil.ReplaceSplitChar(System.String,System.String,System.String)">
            <summary>
            替换拼接分割字符
            </summary>
            <param name="oldString">需要分隔的字符串</param>
            <param name="oldSplit">旧的分隔字符串</param>
            <param name="newSeparator">新的分隔字符串</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ToStringList(System.String,System.String[])">
            <summary>
            把字符串分离到ArrayList，分离字符串为splitString
            </summary>
            <param name="source">需要分隔的字符串</param>
            <param name="separators">分隔字符串</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetBytesLength(System.String)">
            <summary>
            返回字符串长度, 1个汉字长度为2
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.UnionSplits(System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            合并分隔后的字符串数组
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.UnionSplits(System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)">
            <summary>
            合并分隔后的字符串数组
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.UnionSplits(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            合并分隔后的字符串数组
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.UnionSplits(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            合并分隔后的字符串数组
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ParseMobiles(System.String,System.String[])">
            <summary>
            格式化手机号码，长度小于5位的号码忽略
            </summary>
            <param name="phone">手机号码，可以是多个、多行</param>
            <param name="phones">手机号码，可以是多个、多行</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsClrBuiltInType(System.Type)">
            <summary>
             判断程序集是否是 CLR 内置类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsProxyType(System.Type)">
            <summary>
            推断类型是否为动态代理类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsBaseOf``1(System.Type)">
            <summary>
            确定类型 subType 的实例是否能分配给当前类型( TBase )实例。
            即 subType 是 TBase 的子类，或继承了 TBase 代表的接口
            </summary>
            <typeparam name="TBase"></typeparam>
            <param name="subType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsBaseOf(System.Type,System.Type)">
            <summary>
            确定类型 subType 的实例是否能分配给当前类型( baseType )实例。
            即 subType 是 baseType 的子类，或继承了 baseType 代表的接口
            </summary>
            <param name="subType"></param>
            <param name="baseType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.ChangeType(System.Object,System.Type)">
            <summary>
            更改实体对象的类型
            </summary>
            <param name="value">实体对象</param>
            <param name="type">新的类型</param>
            <returns>转换类型后的实体，转换失败返回null</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetDefaultValue(System.Type)">
            <summary>
            获取类型的默认值
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.HasGenericTypeArgument(System.Type,System.Type)">
            <summary>
            获取指定类型 type 是否包含泛型类型参数 argsType
            </summary>
            <param name="type"></param>
            <param name="argsType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.HasGenericTypeArgument(System.Type,System.Type,System.Boolean)">
            <summary>
            获取指定类型 type 是否包含泛型类型参数 argsType
            </summary>
            <param name="type"></param>
            <param name="argsType"></param>
            <param name="inherit">是否查询基类</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsNullable(System.Type)">
            <summary>
             获取该类型是否为可空类型
            </summary>
            <param name="type">查询的类型</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsBoolean(System.Type)">
            <summary>
             获取该类型是否为 <see cref="T:System.Boolean"/>或者 bool? 类型 <see cref="T:System.Nullable"/>
            </summary>
            <param name="type">查询的类型</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsString(System.Type)">
            <summary>
             获取该类型是否为 <see cref="T:System.Boolean"/>或者 bool? 类型 <see cref="T:System.Nullable"/>
            </summary>
            <param name="type">查询的类型</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.AllowsNullValue(System.Type)">
            <summary>
            获取该类型是否可以接受null值
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetNotNullableType(System.Type)">
            <summary>
            获取数据的基类型
            </summary>
            <param name="nullableType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsPublicClass(System.Type)">
            <summary>
            获取该类型是否为公共且不是抽象的类（class）类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsBaseType(System.Type)">
            <summary>
            判断是否为基本类型，主要用于自动判断类型是否可以直接转化为字符串输出
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsInteger(System.Type)">
            <summary>
            是否整数类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsFloat(System.Type)">
            <summary>
            是否浮点数类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsNumeric(System.Type)">
            <summary>
            是否数字类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetShowName(System.Type,System.Boolean)">
            <summary>
            获取便于查看的显示名称，主要处理泛型类的名称显示
            </summary>
            <param name="type"></param>
            <param name="withNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetWebAreaName(System.Type)">
            <summary>
            获取 Asp.Net MVC 的 Area Name 名称
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetWebControllerName(System.Type)">
            <summary>
            获取 Asp.Net MVC 的 Controller Name 名称
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.IsClrAssembly(System.Reflection.Assembly)">
            <summary>
            判断程序集是否是 CLR 程序集
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.TryGetExportedTypes(System.Reflection.Assembly)">
            <summary>
            尝试获取此程序集中定义的公共类型，这些公共类型在程序集外可见。
            输出日志但不抛出异常
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetExportedTypes(System.AppDomain)">
            <summary>
            获取已加载到此应用程序域的执行上下文中的程序集中定义的公共类型，这些公共类型在程序集外可见。
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetExportedTypes(System.AppDomain,System.Func{System.Type,System.Boolean})">
            <summary>
            获取已加载到此应用程序域的执行上下文中的程序集中定义的公共类型，这些公共类型在程序集外可见。
            </summary>
            <param name="domain"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetFileName(System.Reflection.AssemblyName)">
            <summary>
            获取程序集文件名称
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetFilePath(System.Reflection.AssemblyName)">
            <summary>
            获取程序集文件的完整路径
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetFileTime(System.Reflection.AssemblyName)">
            <summary>
            获取程序集文件的最后修改时间
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetAssemblyItems(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            从当前 <see cref="T:System.Threading.Thread"/>  的当前应用程序域<see cref="P:System.AppDomain.CurrentDomain"/>中获取正在使用的程序集中正在使用的程序集信息
            </summary>
            <param name="excludeSystem">排除 .Net 框架自身提供的程序集</param>
            <param name="excludeMicrosoft">排除微软提供的程序集</param>
            <param name="excludeTemp">排除临时程序集，如Web项目会在运行时自动编译一些程序集</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetAssemblyNames(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            从当前 <see cref="T:System.Threading.Thread"/>  的当前应用程序域<see cref="P:System.AppDomain.CurrentDomain"/>中获取正在使用的程序集中正在使用的程序集信息
            </summary>
            <param name="excludeSystem">排除 .Net 框架自身提供的程序集</param>
            <param name="excludeMicrosoft">排除微软提供的程序集</param>
            <param name="excludeTemp">排除临时程序集，如 Web 项目会在运行时自动编译一些程序集</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetAssembly(System.String,System.Boolean)">
            <summary>
            获取指定程序集名称的程序集
            </summary>
            <param name="assemblyName">查询程序集名称</param>
            <param name="fullAssemblyName">获取程序集的是否是程序集的全名（也称为显示名称）。</param>
            <returns>程序集</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetAssemblyType(System.String,System.String,System.Boolean)">
            <summary>
            获取指定程序集名称和类名称的类型
            </summary>
            <param name="assemblyName">查询程序集名称</param>
            <param name="typeName">查询类型名称</param>
            <param name="fullAssemblyName">获取程序集的是否是程序集的全名（也称为显示名称）。</param>
            <returns>类型</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetClassType(System.String)">
            <summary>
            获取类的类型；暂时限定只能获取公共（public）的非抽象（abstract）类型（class）
            </summary>
            <param name="typeFullName">类型全名，如 Namespace.Path.Name.ClassName</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetCallMethod(System.Int32)">
            <summary>
            获取调用当前方法的方法
            </summary>
            <param name="skipLevels">跳过几层调用</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetAssemblyName(System.Object,System.Boolean)">
            <summary>
            获取查询对象的类型所在的程序集名称或完全限定名称
            </summary>
            <param name="obj">查询对象</param> 
            <param name="fullQualifiedName">是否获取程序集的完全限定名称</param>
            <returns>程序集名称</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetAssemblyName(System.Type,System.Boolean)">
            <summary>
            获取类型所在的程序集名称或完全限定名称
            </summary>
            <param name="type">查询类型</param> 
            <param name="fullQualifiedName">是否获取程序集的完全限定名称</param>
            <returns>程序集名称</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetAuthSignOriginal(System.Reflection.MethodBase)">
            <summary>
            获取方法的授权验证识别原始标识
            </summary>
            <param name="method">方法或构造函数的声明</param>
            <returns>授权验证识别原始标识</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetFullName(System.Reflection.MethodBase,System.Boolean)">
            <summary>
            获取方法的完整名称，包含方法的类型的完全限定名称和方法名称拼接的字符串
            </summary>
            <param name="method">方法或构造函数的声明</param>
            <param name="declaringTypeName">使用声明该方法的类型而不是当前类型</param>
            <returns>方法的完全限定名称</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetRuntimeIdentify(System.Reflection.MethodBase)">
            <summary>
            获取方法的唯一识别标识，包含方法的类型的完全限定名称和方法名称拼接的字符串
            </summary>
            <param name="method">方法或构造函数的声明</param>
            <returns>方法的完全限定名称</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetInheritLayer(System.Type,System.Type)">
            <summary>
            查询当前类到基类的继承层数，未兼容接口类型的情况
            </summary>
            <param name="currType">当前类型</param>
            <param name="baseType">基类类型</param>
            <returns>继承层数</returns>
        </member>
        <member name="M:KdCore.KdUtil.GetInheritLayer(System.Reflection.MethodBase)">
            <summary>
            查询获取到方法的类型到声明方法的基类类型的继承层数，未兼容接口类型的情况
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetTraceName(System.Reflection.MethodBase)">
            <summary>
            获取方法容易识别的名称字符串
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetTraceString(System.Diagnostics.StackFrame,System.String,System.Boolean)">
            <summary>
            获取堆栈帧的跟踪位置信息字符串
            </summary>
            <param name="frame"></param>
            <param name="methodName"></param>
            <param name="needFileInfo"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetTraceString(System.Diagnostics.StackFrame,System.Boolean)">
            <summary>
            获取堆栈帧的跟踪位置信息字符串
            </summary>
            <param name="frame"></param>
            <param name="needFileInfo"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdUtil.DictEntitySetProperties">
            <summary>
            数据实体类型在实例中需要赋值的属性缓存
            </summary>
        </member>
        <member name="M:KdCore.KdUtil.GetEntityProperties(System.Type)">
            <summary>
            获取实体数据需要赋值的属性
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetProperties(System.Type,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            获取指定类型的公共属性
            </summary>
            <param name="type"></param>
            <param name="canWrite"></param>
            <param name="canRead"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.SetPropValue(System.Reflection.PropertyInfo,System.Object,System.Object)">
            <summary>
            根据反射原理设置实体属性值
            </summary>
            <param name="property"></param>
            <param name="entity">对象</param>
            <param name="value">设置值</param>
        </member>
        <member name="M:KdCore.KdUtil.GetPropValue``1(``0,System.String)">
            <summary>
            获取实体对象的属性值
            如果是引用类型则递归查找最终的属性
            </summary>
            <typeparam name="TEntity">声明了要访问属性的对象的类型</typeparam>
            <param name="entity">包含了要访问的属性的对象。 </param> 
            <param name="propertyName">要访问的属性的名称。 </param> 
            <returns>对象的属性值</returns> 
        </member>
        <member name="M:KdCore.KdUtil.GetPropType(System.Type,System.String)">
            <summary>
            从类型中，利用反射获取某个属性的类型，如果是可空类型则返回其基类型，支持导航属性
            </summary>
            <param name="type"></param>
            <param name="propertyName">支持导航属性，如xxxx.xxxx，中间用.分隔</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.GetPropType``1(``0,System.String)">
            <summary>
            从对象中，利用反射获取某个属性的类型，如果是可空类型则返回其基类型，支持导航属性
            </summary>
            <param name="entity"></param>
            <param name="propertyName">支持导航属性，如xxxx.xxxx，中间用.分隔</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.Clone``1(System.Object,``0,System.String[])">
            <summary>
            对象克隆
            </summary>
            <param name="objSource">原有对象</param> 
            <param name="objTarget">目标对象</param> 
            <param name="onlyProperties">设置仅绑定的属性，不设置时比对所有属性进行绑定</param>
            <returns>目标对象</returns>
        </member>
        <member name="M:KdCore.KdUtil.Clone``1(``0,System.String[])">
            <summary>
            对象克隆
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="onlyProperties"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MapEntity(System.Object,System.Object,System.Type,System.Type)">
            <summary>
            实体映射复制赋值
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="targetType"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MapAssign(System.Object,System.Object)">
            <summary>
            实体映射复制赋值
            </summary> 
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MapAssignTo``1(KdCore.Data.IKdMapable,``0)">
            <summary>
            实体映射复制赋值
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MapCreate``1(KdCore.Data.IKdMapable)">
            <summary>
            实体映射复制赋值
            </summary>
            <typeparam name="TTarget"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MapClone(System.Object,System.Boolean,System.Type)">
            <summary>
            移除代理类，返回原本的数据对象，也可用于对象克隆
            </summary>
            <param name="source"></param>
            <param name="cloneDataId">是否同时克隆主键 Id</param>
            <param name="type">明确指定的克隆对象类型</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.MapClone``1(``0,System.Boolean)">
            <summary>
            移除代理类，返回原本的数据对象，也可用于对象克隆
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="source"></param>
            <param name="cloneDataId">是否同时克隆主键 Id</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtil.RemoveProxy``1(``0)">
            <summary>
            去除 Entity Framework 代理类封装，获取实际类型实例对象
            通常代理类的实例对象，在序列化保存之后，再次进行反序列化时，可能代理类已不存在，无法正常反序列化。
            如存入 Session 后，程序重启，无法从 Session服务器中正常还原等
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.KdUtilDataJson">
            <summary>
            常用对象JSON序列化处理扩展方法：使用  <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/>  类进行序列化
            </summary>
        </member>
        <member name="P:KdCore.KdUtilDataJson.DataJsonDefaultSettings">
            <summary>
            获取 Json 序列化默认设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilDataJson.GetSerializer``1">
            <summary>
            获取默认设置的 <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/> 
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilDataJson.FromJson``1(System.String)">
            <summary>
            JSON反序列化：使用 <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/> 类进行反序列化
            </summary>
        </member>
        <member name="M:KdCore.KdUtilDataJson.FromJsonFile``1(System.String,System.Text.Encoding)">
            <summary>
            JSON反序列化：使用 <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/> 类进行反序列化
            </summary>
        </member>
        <member name="M:KdCore.KdUtilDataJson.ToDataJson``1(``0)">
            <summary>
            JSON序列化：使用 <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/> 类进行序列化
            </summary>
        </member>
        <member name="M:KdCore.KdUtilDataJson.ToDataJsonFile``1(``0,System.String,System.Boolean)">
            <summary>
            序列化对象为JSON并保存为指定路径的文件：使用 <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/> 类进行序列化
            </summary>
            <typeparam name="TData">序列化对象的类型</typeparam>
            <param name="data">要序列化的对象</param>
            <param name="jsonSavePath">保存路径，请指定为绝对路径的参数值</param> 
            <param name="backupExists">是否备份现有文件</param>
            <returns>序列化结果JSON字符串</returns>
        </member>
        <member name="T:KdCore.Web.KdHttpRequestValues">
            <summary>
            HTTP 请求数据参数封装
            </summary>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.RawUrl">
            <summary>
            获取或设置遵守网站名称的所请求的 URL 部分。
            </summary>
            <returns>遵守网站名称的 URL 部件。</returns>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.Path">
            <summary>
            获取或设置所请求资源的虚拟路径。
            </summary>
            <returns>虚拟路径。</returns>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.PathInfo">
            <summary>
            获取或设置具有 URL 扩展名的资源的附加路径信息。
            </summary>
            <returns>包含资源的附加路径信息的字符串。</returns>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.Url">
            <summary>
            获取或设置请求获取 URL 数据。
            </summary>
            <returns>一个对象，它包含该请求的 URL 数据。</returns>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.Item(System.String)">
            <summary>
            从当前实例的 <see cref="P:KdCore.Web.KdHttpRequestValues.Form"/>、<see cref="P:KdCore.Web.KdHttpRequestValues.Cookies"/>、<see cref="P:KdCore.Web.KdHttpRequestValues.QueryString"/>、<see cref="P:KdCore.Web.KdHttpRequestValues.ServerVariables"/> 等属性集合中获取指定的对象。
            </summary>
            <param name="field">要检索的对象的键。</param>
            <returns>由 field 参数指定的对象。</returns>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.Form">
            <summary>
            获取或设置客户端提交的表单变量集合。
            </summary>
            <returns>来自 HTTP 请求的变量形式。</returns>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.QueryString">
            <summary>
            获取或设置客户端提交的 HTTP 查询字符串集合。
            </summary>
            <returns>客户端发送的查询字符串变量的集合。</returns>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.Headers">
            <summary>
            获取或设置客户端发送的 HTTP 标头集合。
            </summary>
            <returns>HTTP 请求中的标头。</returns>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.Cookies">
            <summary>
            获取或设置客户端发送的 cookies 标头集合。
            </summary>
            <returns>来自 HTTP 请求的 cookie。</returns>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.ServerVariables">
            <summary>
            获取或设置 Web 服务器变量的集合。
            </summary>
            <returns>服务器变量。</returns>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.Files">
            <summary>
            获取或设置客户端上载的文件集合。(通常使用在 ASP.NET WebForm 项目中)
            </summary>
            <returns>来自 HTTP 请求的文件。</returns>
        </member>
        <member name="P:KdCore.Web.KdHttpRequestValues.FilesBase">
            <summary>
            获取或设置客户端上载的文件集合。(通常使用在 ASP.NET MVC 项目中)
            </summary>
            <returns>来自 HTTP 请求的文件。</returns>
        </member>
        <member name="T:KdCore.Web.KdUtilHttp">
            <summary>
            常用 HTTP 请求处理方法
            </summary>
        </member>
        <member name="P:KdCore.Web.KdUtilHttp.DefaultUserAgent">
            <summary>
            获取或设置默认的 User-agent HTTP 标头的值。
            </summary>
        </member>
        <member name="M:KdCore.Web.KdUtilHttp.CreateHttpClient">
            <summary>
            创建一个默认的 HttpClient 对象
            </summary> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Web.KdUtilHttp.HttpPostAsync(System.Net.Http.HttpClient,System.String,System.Collections.Specialized.NameValueCollection,System.Text.Encoding)">
            <summary>
            HTTP POST 提交获取数据
            </summary>
            <param name="client"></param>
            <param name="url"></param>
            <param name="postData"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Web.KdUtilHttp.HttpPostReadAsStringAsync(System.Net.Http.HttpClient,System.String,System.Collections.Specialized.NameValueCollection,System.Text.Encoding)">
            <summary>
            HTTP POST 提交获取数据
            </summary>
            <param name="client"></param>
            <param name="url"></param>
            <param name="postData"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Web.KdUtilHttp.HttpPost(System.Net.Http.HttpClient,System.String,System.Collections.Specialized.NameValueCollection,System.Text.Encoding)">
            <summary>
            HTTP POST 提交获取数据
            </summary>
            <param name="client"></param>
            <param name="url"></param>
            <param name="postData"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Web.KdUtilHttp.HttpPostReadAsString(System.Net.Http.HttpClient,System.String,System.Collections.Specialized.NameValueCollection,System.Text.Encoding)">
            <summary>
            HTTP POST 提交获取数据
            </summary>
            <param name="client"></param>
            <param name="url"></param>
            <param name="postData"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Web.KdUtilHttp.CreateWebClient(System.Text.Encoding,System.Boolean)">
            <summary>
            创建一个默认的WebClient对象，系统自动填充了Headers信息
            </summary>
            <param name="encode">网页采用的编码格式</param>
            <param name="useAjax">是否使用 ajax 方式</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Web.KdUtilHttp.HttpGet(System.Net.WebClient,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            根据url得到网页的html内容
            </summary>
            <param name="client"></param>
            <param name="url">网页URL链接地址</param>
            <param name="encode">网页采用的编码格式</param>
            <param name="useAjax">是否使用 ajax 方式</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Web.KdUtilHttp.HttpGet(System.Net.WebClient,System.String,System.String@,System.Text.Encoding,System.Boolean)">
            <summary>
            根据url得到网页的html内容
            </summary>
            <param name="client"></param>
            <param name="url"></param>
            <param name="cookies"></param>
            <param name="encode"></param>
            <param name="useAjax">是否使用 ajax 方式</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Web.KdUtilHttp.HttpPost(System.Net.WebClient,System.String,System.Collections.Specialized.NameValueCollection,System.Text.Encoding,System.Boolean)">
            <summary>
            通过post方式，根据url得到页面的html内容
            </summary>
            <param name="client"></param>
            <param name="url"></param>
            <param name="postValues"></param>
            <param name="encode"></param>
            <param name="useAjax"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Web.KdUtilHttp.HttpPost(System.Net.WebClient,System.String,System.String@,System.Collections.Specialized.NameValueCollection,System.Text.Encoding,System.Boolean)">
            <summary>
            通过post方式，根据url得到页面的html内容
            </summary>
            <param name="client"></param>
            <param name="url"></param>
            <param name="cookies"></param>
            <param name="postValues"></param>
            <param name="encode"></param>
            <param name="useAjax"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Web.KdWebServiceAgent">
            <summary>
            WebService 调用通用代理类
            </summary>
        </member>
        <member name="M:KdCore.Web.KdWebServiceAgent.ResetCaches">
            <summary>
            清除已缓存的代理类
            </summary>
        </member>
        <member name="M:KdCore.Web.KdWebServiceAgent.GetServiceDescriptionImporter(System.String)">
            <summary>
            获取 XML Web Services 生成客户端代理类的 Importer
            </summary>
            <param name="urlService">WebService地址或WSDL文件路径</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Web.KdWebServiceAgent.GetWebServiceDynamicTypes(System.String,System.String)">
            <summary>
            获取 WebService 生成客户端代理类的类型
            </summary>
            <param name="urlService">WebService 地址</param>
            <param name="subNameSpace">子命名空间名称</param>
            <returns> WebService 代理类的类型数组，第一个类型为WebService的代理类，其他为参数类型</returns>
        </member>
        <member name="P:KdCore.Web.KdWebServiceAgent.SoapType">
            <summary>
            WebService 接口调用类型
            </summary>
        </member>
        <member name="P:KdCore.Web.KdWebServiceAgent.SoapTypes">
            <summary>
            WebService 接口调用类型及参数类型
            </summary>
        </member>
        <member name="P:KdCore.Web.KdWebServiceAgent.SoapInstance">
            <summary>
            WebService 接口调用的原始实例对象
            </summary>
        </member>
        <member name="P:KdCore.Web.KdWebServiceAgent.Service">
            <summary>
            WebService 接口调用的实例对象
            </summary>
        </member>
        <member name="M:KdCore.Web.KdWebServiceAgent.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="urlService">WebService 地址</param>
            <param name="subNameSpace">指定创建的代理类所在子命名空间的名称</param>
        </member>
        <member name="M:KdCore.Web.KdWebServiceAgent.GetSoapMethods">
            <summary>
            获取 WebService 接口提供的方法
            </summary>
        </member>
        <member name="M:KdCore.Web.KdWebServiceAgent.GetSoapArgsType(System.String)">
            <summary>
            获取 WebService 接口的参数类型
            </summary>
        </member>
        <member name="M:KdCore.Web.KdWebServiceAgent.Invoke(System.String,System.Object[])">
            <summary>
             调用指定的方法
            </summary>
            <param name="methodName">方法名，大小写敏感</param>
            <param name="args">参数，按照参数顺序赋值</param>
            <returns>WebService 的返回值</returns>
        </member>
        <member name="M:KdCore.Web.KdWebServiceAgent.Invoke(System.Reflection.MethodInfo,System.Object[])">
            <summary>
             调用指定方法
            </summary>
            <param name="method">方法信息</param>
            <param name="args">参数，按照参数顺序赋值</param>
            <returns>WebService 的返回值</returns>
        </member>
        <member name="M:KdCore.Web.KdWebServiceAgent.CreateSoapArgs(System.String)">
            <summary>
            创建一个 WebService 接口的参数类型实例
            </summary>
        </member>
        <member name="T:KdCore.Web.KdWebProxySetting">
            <summary>
            网络代理设置
            </summary>
        </member>
        <member name="P:KdCore.Web.KdWebProxySetting.UseProxy">
            <summary>
            是否使用代理
            </summary>
        </member>
        <member name="P:KdCore.Web.KdWebProxySetting.ProxyHost">
            <summary>
            代理服务器主机
            </summary>
        </member>
        <member name="P:KdCore.Web.KdWebProxySetting.ProxyPort">
            <summary>
            代理服务器端口
            </summary>
        </member>
        <member name="P:KdCore.Web.KdWebProxySetting.ProxyUser">
            <summary>
            获取或设置代理服务器验证凭据的用户名
            </summary>
        </member>
        <member name="P:KdCore.Web.KdWebProxySetting.ProxyPwd">
            <summary>
            获取或设置代理服务器验证凭据的密码
            </summary>
        </member>
        <member name="P:KdCore.Web.KdWebProxySetting.ProxyDomain">
            <summary>
            获取或设置代理服务器验证凭据的域名或计算机名。
            </summary>
        </member>
        <member name="M:KdCore.Web.KdWebProxySetting.CreateWebProxy">
            <summary>
            创建一个 Http 代理设置的实例对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.KdUtilWeb">
            <summary>
            Http Web 扩展
            </summary>
        </member>
        <member name="P:KdCore.KdUtilWeb.Logger">
            <summary>
            日志记录对象
            </summary>
        </member>
        <member name="P:KdCore.KdUtilWeb.WebBinDirectory">
            <summary>
            获取当前应用程序的 /bin 目录的物理路径。
            </summary>
        </member>
        <member name="P:KdCore.KdUtilWeb.WebAppDirectory">
            <summary>
            获取当前应用程序的所在目录的物理路径。
            </summary>
        </member>
        <member name="P:KdCore.KdUtilWeb.WebTempDirectory">
            <summary>
            获取当前应用程序的运行编译生成临时文件所在的物理路径。
            </summary>
        </member>
        <member name="P:KdCore.KdUtilWeb.RequestTagIdKeyName">
            <summary>
            获取或设置用于数据区分的用户请求的唯一标识的缓存键名称
            </summary>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetHttpBase(System.Web.HttpContext)">
            <summary>
            获取类型转换对象
            </summary>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetHttpBase(System.Web.HttpRequest)">
            <summary>
            获取类型转换对象
            </summary>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetCurrRequestId(System.Web.HttpContextBase)">
            <summary>
            获取当前请求的识别标识，如尚未创建时就创建一个长度12位的随机字符串作为识别标识
            </summary>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetLogHeaderLines(System.Web.HttpContextBase,System.String)">
            <summary>
            日志区分标识
            </summary>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetCurrUser(System.Web.HttpSessionStateBase)">
            <summary>
            获取当前登录用户
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.SetCurrUser(System.Web.HttpSessionStateBase,System.Security.Principal.IPrincipal)">
            <summary>
            设置当前登录用户
            </summary>
            <param name="session"></param>
            <param name="user"></param>
        </member>
        <member name="M:KdCore.KdUtilWeb.UserLogout(System.Web.HttpSessionStateBase)">
            <summary>
            用户退出登录的业务处理
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetCurrUserUpdateTime(System.Web.HttpSessionStateBase)">
            <summary>
            获取当前登录用户的用户数据更新时间
            </summary>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.HasFileUpload(System.Web.HttpContextBase)">
            <summary>
            获取当前 HTTP 请求的处理结果中是否包含文件上传
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.HasFileUpload(System.Web.HttpContextBase,System.Boolean)">
            <summary>
            设置当前 HTTP 请求的处理结果中是否包含文件上传
            </summary>
            <param name="context"></param>
            <param name="hasFileUpload"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.UrlDecode(System.Collections.Specialized.NameValueCollection)">
            <summary>
            对键值集合的值进行 UrlDecode 解码
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.HtmlDecode(System.Collections.Specialized.NameValueCollection)">
            <summary>
            对键值集合的值进行 HtmlDecode 解码
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetUserRequest(System.Web.HttpRequestBase)">
            <summary>
            获取当前 HTTP 请求的用户参数，包括 Form 表单和 QueryString 查询字符串
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetCurrUser(System.Web.HttpContextBase)">
            <summary>
            获取当前访问已存在的登录用户
            </summary>
        </member>
        <member name="M:KdCore.KdUtilWeb.IsLogin(System.Web.HttpContextBase)">
            <summary>
            获取当前访问是否已登录
            </summary>
        </member>
        <member name="M:KdCore.KdUtilWeb.Clone(System.Uri)">
            <summary>
            复制一个新的 Uri 对象
            </summary>
            <param name="source">原始的 Uri 对象</param>
            <returns>一个新的 Uri 对象</returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.Clone(System.Web.HttpCookieCollection)">
            <summary>
            创建一个新的 HttpCookieCollection 集合对象，并将源集合中的值都复制到新的集合中
            </summary>
            <param name="source">原始的 HttpCookieCollection 集合对象</param>
            <returns>一个新的 HttpCookieCollection 对象</returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetRequestValues(System.Web.HttpRequestBase,System.Boolean)">
            <summary>
            获取 Http 请求客户端提交的相关数据
            </summary>
            <param name="request"></param>
            <param name="withHttpFiles"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetClientType(System.Web.HttpRequestBase,System.Boolean)">
            <summary>
            从请求参数中推断当前请求使用客户端类型
            </summary>
            <param name="request"></param>
            <param name="onlyQueryString"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetClientDevice(System.Web.HttpSessionStateBase)">
            <summary>
            获取 Session 中保存的客户端类型信息
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:KdCore.KdUtilWeb.SetClientDevice(System.Web.HttpSessionStateBase,KdCore.KdClientDevice)">
            <summary>
            设置客户端类型信息保存到 Session 中
            </summary>
            <param name="session"></param>
            <param name="device"></param>
        </member>
        <member name="M:KdCore.KdUtilWeb.ChangeClientType(System.Web.HttpSessionStateBase,KdCore.BbClientType)">
            <summary>
            设置客户端类型信息保存到 Session 中
            </summary>
            <param name="session"></param>
            <param name="clientType"></param>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetClientDevice(System.Web.HttpContextBase)">
            <summary>
            获取已识别的客户端设备数据，如果尚未识别则通过浏览器信息进行识别
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:KdCore.KdUtilWeb.DeduceClient(System.Web.HttpRequestBase)">
            <summary>
            通过浏览器信息识别客户端设备数据
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.UpdateClientType(System.Web.HttpContextBase)">
            <summary>
            更新 Session 中存储的客户端类型
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:KdCore.KdUtilWeb.DeduceIsDebugMode(System.Web.HttpRequestBase)">
            <summary>
            通过 QueryString（参数名称参见 KdBaseContext.Config.ParamName_DebugMode ） 判断是否调试模式的请求
            </summary>
        </member>
        <member name="M:KdCore.KdUtilWeb.DeduceIsAjaxOrWebAPI(System.Web.HttpRequestBase)">
            <summary>
            通过请求头及 Query String 参数判断是否 ajax 或 Web API 请求
            </summary>
        </member>
        <member name="M:KdCore.KdUtilWeb.DeduceIsDlgMode(System.Web.HttpRequestBase)">
            <summary>
            通过 Query String 参数判断是否对话框模式的请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.IsIeAndLessThan(System.Web.HttpRequestBase,System.Int32,System.Boolean)">
            <summary>
            判断浏览器是否是IE且版本低于指定的版本号
            </summary>
            <param name="request"></param>
            <param name="version"></param>
            <param name="withEquals"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.ExistsVirtualPath(System.String)">
            <summary>
            判断虚拟路径是否存在于应用程序中（未验证正确性，未知资源耗费如何，慎用）
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.OnDisposed(System.Web.HttpApplication,System.Object,System.EventArgs)">
            <summary>
            应用程序错误处理
            </summary>
            <param name="httpApplication"></param>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetQueryValues(System.String,System.Text.Encoding)">
            <summary>
            字符串查询参数转化为键值对集合
            </summary>
            <param name="query"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.ToQueryString(System.Collections.Specialized.NameValueCollection,System.Boolean,System.Collections.IDictionary)">
            <summary>
            键值对集合转化为 url 查询参数字符串
            </summary>
            <param name="nameValues"></param>
            <param name="urlEncoded"></param>
            <param name="excludeKeys"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.Url(System.String,System.Collections.Specialized.NameValueCollection,System.Boolean,System.Text.Encoding,System.String[])">
            <summary>
            构造 URL 链接地址
            </summary>
            <param name="baseUrl"></param>
            <param name="nameValues"></param>
            <param name="replaceExists"></param>
            <param name="encoding"></param>
            <param name="removeKeys"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.Url(System.String,System.Collections.Specialized.NameValueCollection,System.Boolean,System.String[])">
            <summary>
            构造 URL 链接地址
            </summary>
            <param name="baseUrl"></param>
            <param name="nameValues"></param>
            <param name="replaceExists"></param>
            <param name="removeKeys"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.Url(System.String,System.Collections.Specialized.NameValueCollection,System.String[])">
            <summary>
            构造 URL 链接地址
            </summary>
            <param name="baseUrl"></param>
            <param name="nameValues"></param>
            <param name="removeKeys"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.UrlClear(System.String,System.String[])">
            <summary>
            构造 URL 链接地址
            </summary>
            <param name="baseUrl"></param>
            <param name="removeKeys"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.Url(System.String,System.Boolean,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            构造 URL 链接地址
            </summary>
            <param name="baseUrl"></param>
            <param name="replaceExists"></param>
            <param name="urlParams"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.Url(System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            构造 URL 链接地址
            </summary>
            <param name="baseUrl"></param>
            <param name="urlParams"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetAppRelativeUrl(System.Web.HttpRequestBase)">
            <summary>
            获取当前请求的相对虚拟路径
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetAppFullUrl(System.Web.HttpRequestBase)">
            <summary>
            获取当前请求的应用程序完整地址（一般以http开头）
            </summary>
            <param name="request">当前的客户端请求</param>
            <returns>应用程序完整地址（一般以http开头）</returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.VirtualPath(System.Web.HttpRequestBase,System.String)">
            <summary>
            获取绝对地址URL的虚拟路径
            </summary>
            <param name="request">当前 HttpRequest 请求</param>
            <param name="absoluteUrl">绝对地址URL</param>
            <returns>当前系统的虚拟路径</returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.LogUriDetails(KdCore.Logs.IKdLogger,System.Uri,System.String)">
            <summary>
            将一个 URI 的详细解析内容写入日志
            </summary>
            <param name="log"></param>
            <param name="uri"></param>
            <param name="uriName"></param>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetCaptchaCode(System.Web.HttpSessionStateBase,System.String,System.Boolean)">
            <summary>
            获取当前 Session 中保存的验证码
            </summary>
            <param name="session"></param> 
            <param name="sessionKey">生成验证码保存在Session中的Key</param>
            <param name="remove">是否在取出的同时移除当前的验证码，通常来说验证码在验证一次之后将会失效</param>
        </member>
        <member name="M:KdCore.KdUtilWeb.SetCaptchaCode(System.Web.HttpSessionStateBase,System.String,System.String)">
            <summary>
            设置当前 Session 中使用的验证码
            </summary>
            <param name="session"></param>
            <param name="sessionKey">生成验证码保存在Session中的Key</param>
            <param name="verifyCode"></param> 
        </member>
        <member name="M:KdCore.KdUtilWeb.SetCaptchaCode(System.Web.HttpSessionStateBase,System.String,System.Int32)">
            <summary>
            设置当前 Session 中使用的图片验证码
            </summary>
            <param name="session"></param>
            <param name="sessionKey">生成验证码保存在Session中的Key</param>
            <param name="codeLength">验证码长度</param>
            <returns>当前设置的验证码</returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.CreateCaptchaImage(System.Web.HttpSessionStateBase,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置当前 Session 中使用的图片验证码，并返回验证码的图片（字节数组）
            </summary>
            <param name="session"></param>
            <param name="sessionKey">生成验证码保存在Session中的Key</param>
            <param name="codeLength">验证码长度</param>
            <param name="imgWidth">验证码图片宽度</param>
            <param name="imgHeight">验证码图片高度</param>
            <returns>验证码的图片（字节数组）</returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.VerifyCaptchaCode(System.Web.HttpSessionStateBase,System.String,System.String)">
            <summary>
            验证用户输入的验证码是否与当前 Session 中服务器保存的验证码一致
            </summary>
            <param name="session"></param>
            <param name="sessionKey">生成验证码保存在Session中的Key</param>
            <param name="codeInput">用户输入的验证码</param>
            <returns>用户输入的验证码是否与服务器保存的验证码一致</returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.CreateCaptchaImageLogin(System.Web.HttpSessionStateBase,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置当前 Session 中使用的用户登录图片验证码，并返回验证码的图片
            </summary>
            <param name="session"></param>
            <param name="codeLength">验证码长度</param>
            <param name="imgWidth">验证码图片宽度</param>
            <param name="imgHeight">验证码图片高度</param>
            <returns>验证码的图片</returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.VerifyCaptchaCodeLogin(System.Web.HttpSessionStateBase,System.String)">
            <summary>
            验证用户输入的登录验证码是否与当前 Session 中服务器保存的验证码一致
            </summary>
            <param name="session"></param>
            <param name="codeInput">用户输入的验证码</param>
            <returns>用户输入的验证码是否与服务器保存的验证码一致</returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetUrlFrom(System.Web.HttpRequestBase)">
            <summary>
            从 Query String 中读取来源页面的 URL 地址，如果不包含则返回 null
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.SetLastRequest(System.Web.HttpSessionStateBase,System.Uri,System.String)">
            <summary>
            设置当前 Session 中用于页面跳转的最后一次访问地址
            </summary>
            <param name="session"></param>
            <param name="lastRequest"></param> 
            <param name="sessionCacheKey"></param>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetLastRequest(System.Web.HttpSessionStateBase,System.String,System.Boolean)">
            <summary>
            获取当前 Session 中用于页面跳转的最后一次访问地址
            </summary>
            <param name="session"></param> 
            <param name="sessionCacheKey"></param>
            <param name="remove">是否在获取后移除缓存</param>
        </member>
        <member name="M:KdCore.KdUtilWeb.HarTrue(System.Web.HttpSessionStateBase,System.String)">
            <summary>
            获取当前 Session 中指定参数 key 的缓存是否存在为 true
            </summary>
            <param name="session"></param> 
            <param name="sessionCacheKey"></param>
        </member>
        <member name="M:KdCore.KdUtilWeb.RunInIIS(System.Web.HttpRequestBase)">
            <summary>
            判断当前程序是否运行在IIS中，如果在IIS中运行返回true，在Visual Studio ASP.NET Development Server下或其他情况下返回false
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.UrlIsExist(System.String)">
            <summary>
            判断url地址是否真实存在，存在返回true，否则返回false
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.MergeRouteValues(System.Web.Routing.RouteValueDictionary,System.Object,System.Boolean)">
            <summary>
            合并路由参数集合
            </summary>
            <param name="routes"></param>
            <param name="target"></param>
            <param name="replaceExist"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.ToRouteValues(System.Object)">
            <summary>
            转换为路由参数集合
            </summary>
            <param name="routeValues"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.ToRouteValues(System.Collections.Specialized.NameValueCollection)">
            <summary>
            转换为路由参数集合
            </summary>
            <param name="routeValues"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.HasFile(System.Web.HttpPostedFile)">
            <summary>
            判断用户是否选择了上传文件，并包含实际文件内容
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.HasFile(System.Web.HttpPostedFileBase)">
            <summary>
            判断用户是否选择了上传文件，并包含实际文件内容
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.MergeScript(System.String,System.String)">
            <summary>
            合并 JavaScript 输出
            </summary>
            <param name="firstScript"></param>
            <param name="secondScript"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.QuoteJScriptString(System.String,System.Boolean)">
            <summary>
            从System.Web.UI.Util中复制出来的方法
            </summary>
            <param name="value"></param>
            <param name="forUrl"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.EncryptAppDataFile(KdCore.KdAzdgHelper,System.String,System.String,System.String[])">
            <summary>
            通过AZDG加密文件内容
            </summary>
            <param name="azdg"></param>
            <param name="fileName"></param>
            <param name="folder"></param>
            <param name="subfolders"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.RemoteRequest(System.String,System.String,System.String,System.String)">
            <summary>
            请求远程地址的内容，通过AZDG加密的CODE验证授权
            AZDG加密密钥及请求地址均在config文件配置
            </summary>
            <param name="code"></param>
            <param name="requestFileName"></param>
            <param name="urlTarget"></param>
            <param name="authCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.RemoteSend(System.String,System.String,System.String,System.String)">
            <summary>
            通过AZDG加密发送需要同步的文件或文件夹；
            如果传输的是文件夹，则只同步当前文件夹下的文件，并且跳过扩展名为 .bak 的的文件。
            AZDG加密密钥及请求地址均在config文件配置
            </summary>
            <param name="code"></param>
            <param name="fileOrFolderName"></param>
            <param name="urlTarget"></param>
            <param name="authCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.ReceiveAzdgFile(System.Web.HttpRequestBase,KdCore.KdAzdgHelper,System.String,System.String)">
            <summary>
            保存通过AZDG加密传送的文件
            </summary>
            <param name="request"></param>
            <param name="azdg"></param>
            <param name="paramNameForFileName">用于获取文件名称的参数名称，为 null 时采用系统默认设置值</param>
            <param name="paramNameForFileContent">用于获取文件内容的参数名称，为 null 时采用系统默认设置值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.ReceiveAzdgFolder(System.Web.HttpRequestBase,KdCore.KdAzdgHelper,System.String,System.String,System.String)">
            <summary>
            保存通过AZDG加密传送的文件夹
            </summary>
            <param name="request"></param>
            <param name="azdg"></param>
            <param name="paramNameForFolderName">用于获取文件夹名称的参数名称，为 null 时采用系统默认设置值</param>
            <param name="paramPrefixForFileName">用于获取文件名称的参数名称前缀，为 null 时采用系统默认设置值</param>
            <param name="paramPrefixForFileContent">用于获取文件内容的参数名称前缀，为 null 时采用系统默认设置值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilWeb.GetDescription(System.Net.HttpStatusCode)">
            <summary>
            获取 <see cref="T:System.Net.HttpStatusCode"/> 的描述说明
            </summary>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.BbMessage">
            <summary>
            带有外观模式的文本封装
            </summary>
        </member>
        <member name="P:KdCore.BbMessage.Pattern">
            <summary>
            显示的外观模式
            </summary>
        </member>
        <member name="P:KdCore.BbMessage.Mode">
            <summary>
            显示的外观模式名称
            </summary>
        </member>
        <member name="P:KdCore.BbMessage.Content">
            <summary>
            已编码的消息内容，比如包含了HTML标签等，不用再次进行编码
            </summary>
        </member>
        <member name="T:KdCore.KdBoolTriplet">
            <summary>
            三路布尔枚举
            </summary>
        </member>
        <member name="F:KdCore.KdBoolTriplet.Null">
            <summary>
            空值，未知真假
            </summary>
        </member>
        <member name="F:KdCore.KdBoolTriplet.False">
            <summary>
            否/假
            </summary>
        </member>
        <member name="F:KdCore.KdBoolTriplet.True">
            <summary>
            是/真
            </summary>
        </member>
        <member name="T:KdCore.BbShowPattern">
            <summary>
            数据外观样式类型
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.NoneKD">
            <summary>
            不设置图标，添加KD结尾避免将来命名冲突
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.AutoKD">
            <summary>
            系统根据上下文自行判断选择初始化过的合适图标，添加KD结尾避免将来命名冲突
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.Default">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.Primary">
            <summary>
            重要
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.Info">
            <summary>
            普通
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.Danger">
            <summary>
            危险
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.Link">
            <summary>
            超链接，btn样式支持
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.Error">
            <summary>
            错误，input样式支持
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.Active">
            <summary>
            激活 
            </summary>
        </member>
        <member name="F:KdCore.BbShowPattern.Disabled">
            <summary>
            禁用 
            </summary>
        </member>
        <member name="T:KdCore.IKdXmlSerialize">
            <summary>
            框架自动XML序列化的标识接口
            </summary>
        </member>
        <member name="T:KdCore.BbClientType">
            <summary>
            客户端类型枚举
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.None">
            <summary>
            未设置类型
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.PcWeb">
            <summary>
            电脑端网页浏览器
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.TabletWeb">
            <summary>
            平板端网页浏览器
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.MobileWeb">
            <summary>
            手机端网页浏览器
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.PcClient">
            <summary>
            电脑客户端
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.TabletClient">
            <summary>
            平板客户端
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.MobileClient">
            <summary>
            手机客户端
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.PcWebEmbed">
            <summary>
            电脑客户端内嵌网页
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.TabletWebEmbed">
            <summary>
            平板客户端内嵌网页
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.MobileWebEmbed">
            <summary>
            手机客户端内嵌网页
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.Pc">
            <summary>
            电脑客户端或网页
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.Tablet">
            <summary>
            平板客户端或网页
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.Mobile">
            <summary>
            手机客户端或网页
            </summary>
        </member>
        <member name="F:KdCore.BbClientType.All">
            <summary>
            所有客户端
            </summary>
        </member>
        <member name="T:KdCore.BbDataListLayout">
            <summary>
            数据显示的布局方式
            </summary>
        </member>
        <member name="F:KdCore.BbDataListLayout.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:KdCore.BbDataListLayout.Table">
            <summary>
            table标签布局
            </summary>
        </member>
        <member name="F:KdCore.BbDataListLayout.UnorderedList">
            <summary>
            ul标签布局
            </summary>
        </member>
        <member name="F:KdCore.BbDataListLayout.OrderedList">
            <summary>
            ol标签布局
            </summary>
        </member>
        <member name="T:KdCore.KdProduct">
            <summary>
            项目产品基本定义
            </summary>
        </member>
        <member name="P:KdCore.KdProduct.CorpName">
            <summary>
            当前系统的客户单位名称
            </summary>
        </member>
        <member name="P:KdCore.KdProduct.AppName">
            <summary>
            当前系统的项目名称
            </summary>
        </member>
        <member name="P:KdCore.KdProduct.AppShortName">
            <summary>
            当前系统的项目名称的简称
            </summary>
            <remarks>比如在短信内容前附加等</remarks>
        </member>
        <member name="P:KdCore.KdProduct.CorpShortName">
            <summary>
            当前系统的客户单位名称的简称
            </summary>
            <remarks>比如在短信内容结尾附加等</remarks>
        </member>
        <member name="T:KdCore.IKdActionAttribute">
            <summary>
            用户操作属性定义接口
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.SortNum">
            <summary>
            获取或设置权限显示顺序
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.ActionName">
            <summary>
            获取或设置权限名称
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.WorkCodes">
            <summary>
            获取或设置可操作功能权限的编码
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.ViewCodes">
            <summary>
            获取或设置仅查看功能权限的编码
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.ViewNameWork">
            <summary>
            获取或设置可操作功能的视图名称
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.ViewNameView">
            <summary>
            获取或设置仅查看功能的视图名称
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.DelayVerify">
            <summary>
            获取或设置是否延迟判断操作权限，等页面数据初始化完成后再采用主动的操作权限判断，主要用于流程审批过程的主办或传阅没有该模块的操作权限时也可办理
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.IgnoreCorpScope">
            <summary>
            获取或设置是否忽略数据的单位授权范围验证
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.IgnoreDeptScope">
            <summary>
            获取或设置是否忽略数据的部门授权范围验证
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.Description">
            <summary>
            获取或设置操作权限说明
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.EveryOne">
            <summary>
            获取或设置是否任何人均可访问（不登录也可正常访问）
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.EveryUser">
            <summary>
            获取或设置是否任意登录用户均可访问（只要登录即视为验证通过）
            </summary>
        </member>
        <member name="P:KdCore.IKdActionAttribute.AuthRoles">
            <summary>
            获取或设置授权角色。
            </summary>
            <returns>角色字符串</returns>
        </member>
        <member name="P:KdCore.IKdActionAttribute.AuthUsers">
            <summary>
            获取或设置授权用户。
            </summary>
            <returns>用户字符串</returns>
        </member>
        <member name="T:KdCore.KdClientDevice">
            <summary>
            客户端设备信息
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ParamName_ClientType">
            <summary>
            客户端请求时提交的客户端类型的参数名称； 默认值： _kdct
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ParamName_ClientTypeSave">
            <summary>
            客户端请求时提交的客户端类型的参数名称； 默认值： _kdcts
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ParamName_ClientWidth">
            <summary>
            客户端请求时提交的屏幕宽度的参数名称； 默认值： _kdcw
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ParamName_ClientHeight">
            <summary>
            客户端请求时提交的屏幕高度的参数名称； 默认值： _kdch
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ParamName_ClientDensity">
            <summary>
            客户端请求时提交的屏幕密度的参数名称； 默认值： _kdcs
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ParamName_ClientDensityDpi">
            <summary>
            客户端请求时提交的屏幕密度DPI的参数名称； 默认值： _kdcd
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ParamName_ClientDeviceId">
            <summary>
            客户端请求时提交的设备标识 ID 的参数名称； 默认值： _kdid
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.IsCrawler">
            <summary>
            获取或设置客户端是否为网络爬虫抓取程序
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.OperatingSystem">
            <summary>
            获取或设置客户端操作系统信息
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.OSPlatform">
            <summary>
            获取或设置客户端操作系统平台
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.OSVersion">
            <summary>
            获取或设置客户端操作系统版本号
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.OSServicePack">
            <summary>
            获取或设置客户端操作系统补丁更新版本
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.BrowserAgent">
            <summary>
            获取或设置客户端设备由浏览器在 User-Agent 请求标头中发送的浏览器字符串。
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.DeviceManufacturer">
            <summary>
            获取或设置客户端设备制造商
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.DeviceModel">
            <summary>
            获取或设置客户端设备型号
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.DeviceName">
            <summary>
            获取或设置客户端机器名称
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.IsPc">
            <summary>
            获取或设置客户端设备是否识别为电脑端
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.IsTablet">
            <summary>
            获取或设置客户端设备是否识别为平板电脑
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.IsMobile">
            <summary>
            获取或设置客户端设备是否识别为智能手机
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ClientType">
            <summary>
            获取或设置客户端使用的模式类型
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.StartTime">
            <summary>
            开始时间/安装后首次使用时间
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ClientVersion">
            <summary>
            客户端版本号
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.DeviceIP">
            <summary>
            客户端IP地址
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.DeviceCpu">
            <summary>
            客户端CPU编号
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.DeviceMac">
            <summary>
            客户端网卡MAC地址
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.DeviceImei">
            <summary>
            客户端移动设备IMEI码
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.MobileNumber">
            <summary>
            客户端当前移动设备手机号码
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ScreenBitDepth">
            <summary>
            获取或设置客户端设备屏幕支持的色彩位深
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ScreenPixelsWidth">
            <summary>
            获取或设置客户端设备屏幕宽度（单位：像素）
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ScreenPixelsHeight">
            <summary>
            获取或设置客户端设备屏幕高度（单位：像素）
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ScreenCharactersWidth">
            <summary>
            获取或设置客户端设备屏幕高度（单位：字符）
            </summary>
        </member>
        <member name="P:KdCore.KdClientDevice.ScreenCharactersHeight">
            <summary>
            获取或设置客户端设备屏幕宽度（单位：字符）
            </summary>
        </member>
        <member name="M:KdCore.KdClientDevice.ToString">
            <summary>
            重写 ToString 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdClientDevice.SetClientType(KdCore.BbClientType)">
            <summary>
            设置客户端设备当前使用的客户端类型
            </summary>
            <param name="clientType">客户端类型</param>
        </member>
        <member name="M:KdCore.KdClientDevice.SetClientType(System.String)">
            <summary>
            设置客户端设备当前使用的客户端类型
            </summary>
            <param name="clientType">客户端类型</param>
        </member>
        <member name="M:KdCore.KdClientDevice.Compatible(KdCore.BbClientType)">
            <summary>
            是否兼容客户端设备类型
            </summary>
            <param name="clientType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdClientDevice.NotCompatible(KdCore.BbClientType)">
            <summary>
            是否不兼容客户端设备类型
            </summary>
            <param name="clientType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdClientDevice.GetDefault">
            <summary>
            创建一个默认客户端设备类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdClientDevice.From(System.Web.HttpBrowserCapabilities)">
            <summary>
            通过浏览器信息识别客户端设备数据
            </summary>
            <param name="browser"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdClientDevice.From(System.Web.HttpBrowserCapabilitiesBase)">
            <summary>
            通过浏览器信息识别客户端设备数据
            </summary>
            <param name="browser"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.BbTaskTimer">
            <summary>
            定期执行代码计时器
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.LogLevel">
            <summary>
            当前类型中的 <see cref="M:KdCore.BbTaskTimer.LogWrite(System.String,System.Object[])"/> 方法中的日志输出级别
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.Logger">
            <summary>
            日志记录类
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.GlobalDisable">
            <summary>
            全局禁用定时器，即设置了定时器也不起作用
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.MinInterval">
            <summary>
            全局定时器最小时间间隔（以毫秒为单位），时间间隔过小会对性能造成很大影响
            </summary>
        </member>
        <member name="M:KdCore.BbTaskTimer.StartTask(System.Action,System.TimeSpan,System.Boolean,System.Nullable{System.TimeSpan},System.Boolean)">
            <summary>
            创建一个定时器，并启动定时任务；
            默认启动后仍需经过一次间隔时间，才会第一次执行定时任务中的任务处理；如需启动立即执行，请设置<see cref="P:KdCore.BbTaskTimer.ExecuteOnStart"/> 属性为 true
            </summary>
            <param name="taskAction">定时任务处理方法</param>
            <param name="taskInterval">定时任务执行间隔时间</param>
            <param name="executeOnStart">是否在启动定时任务时，立即执行一次这个任务处理方法</param>
            <param name="startTime">启动定时器的时间点，不指定的话马上开始启动定时任务</param>
            <param name="delayRandomOnStart">在指定时间点启动时，是否随机推迟几分钟（30秒至20分钟之间随机选择），防止集中启动运行导致系统阻塞 </param>
        </member>
        <member name="M:KdCore.BbTaskTimer.StartTask(System.Action,System.TimeSpan,System.Nullable{System.TimeSpan},System.Boolean)">
            <summary>
            创建一个定时器，并启动定时任务；
            默认启动后仍需经过一次间隔时间，才会第一次执行定时任务中的任务处理；如需启动立即执行，请设置<see cref="P:KdCore.BbTaskTimer.ExecuteOnStart"/> 属性为 true
            </summary>
            <param name="taskAction">定时任务处理方法</param>
            <param name="taskInterval">定时任务执行间隔时间</param>
            <param name="startTime">启动定时器的时间点，不指定的话马上开始启动定时任务</param>
            <param name="delayRandomOnStart">在指定时间点启动时，是否随机推迟几分钟（30秒至20分钟之间随机选择），防止集中启动运行导致系统阻塞 </param>
        </member>
        <member name="P:KdCore.BbTaskTimer.Id">
            <summary>
            获取或设置定时器识别标识
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.Name">
            <summary>
            获取或设置定时器标识名称
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.ExecuteOnStart">
            <summary>
            获取或设置是否在启动定时任务时预先执行一次
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.IsParallel">
            <summary>
            获取或设置是否与其他定时任务并行处理
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.IsDisabled">
            <summary>
            获取或设置是否禁止执行定期的任务
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.InitiateTimer">
            <summary>
            任务启动定时器实例变量
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.PlanStartTime">
            <summary>
            计划启动时间点，按每天的此时可刻检测计算
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.StartTime">
            <summary>
            获取任务开始执行时间
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.LastElapsed">
            <summary>
            获取定时器最后一次触发时间
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.LastExecute">
            <summary>
            获取定时器最后一次触发时间
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.ExecuteTimer">
            <summary>
            任务执行定时器实例变量
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.FuncUpdateInterval">
            <summary>
            获取或设置获取最新定时间隔时间的方法
            </summary>
        </member>
        <member name="F:KdCore.BbTaskTimer._periodicTasks">
            <summary>
            需要定时执行的作业任务列表
            </summary>
        </member>
        <member name="P:KdCore.BbTaskTimer.PeriodicTasks">
            <summary>
            需要定时执行的作业任务列表
            </summary>
        </member>
        <member name="M:KdCore.BbTaskTimer.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.BbTaskTimer.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="executeOnStart">是否在启动定时任务时预先执行一次任务处理</param>
        </member>
        <member name="M:KdCore.BbTaskTimer.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="name">定时器的标识名称</param>
            <param name="executeOnStart">是否在启动定时任务时预先执行一次任务处理</param>
        </member>
        <member name="M:KdCore.BbTaskTimer.LogWrite(System.String,System.Object[])">
            <summary>
            运行日志输出
            </summary>
            <param name="message">错误消息或错误消息格式化模板</param>
            <param name="messageParams">错误消息格式化参数</param>
        </member>
        <member name="M:KdCore.BbTaskTimer.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:KdCore.BbTaskTimer.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:KdCore.BbTaskTimer.EnsureInterval(System.Double)">
            <summary>
            确认执行周期时间（以毫秒为单位），保证不低于最小时间间隔 5 秒
            </summary>
            <param name="interval">0或负值标识停止执行</param>
        </member>
        <member name="M:KdCore.BbTaskTimer.StartTasks(System.TimeSpan,System.Nullable{System.TimeSpan},System.Boolean)">
            <summary>
            启动定时任务；默认启动后仍需经过一次间隔时间，才会第一次执行定时任务中的任务处理；如需启动立即执行，请设置<see cref="P:KdCore.BbTaskTimer.ExecuteOnStart"/> 属性为 true
            </summary>
            <param name="taskInterval">定时任务执行间隔时间</param>
            <param name="startTime">启动定时器的时间点，不指定的话马上开始启动定时任务</param>
            <param name="delayRandomOnStart">在指定时间点启动时，是否随机推迟几分钟（30秒至20分钟之间随机选择），防止集中启动运行导致系统阻塞 </param>
        </member>
        <member name="M:KdCore.BbTaskTimer.StartTasks(System.Double,System.Nullable{System.TimeSpan},System.Boolean)">
            <summary>
            启动定时任务；默认启动后仍需经过一次间隔时间，才会第一次执行定时任务中的任务处理；如需启动立即执行，请设置<see cref="P:KdCore.BbTaskTimer.ExecuteOnStart"/> 属性为 true
            </summary>
            <param name="taskInterval">定时任务执行间隔时间（以毫秒为单位）</param>
            <param name="startTime">启动定时器的时间点，不指定的话马上开始启动定时任务</param>
            <param name="delayRandom">在指定时间点启动时，是否随机推迟几分钟（30秒至20分钟之间随机选择），防止集中启动运行导致系统阻塞 </param>
        </member>
        <member name="M:KdCore.BbTaskTimer.StartTasksDelay">
            <summary>
            延时启动开始执行定时任务
            </summary>
        </member>
        <member name="M:KdCore.BbTaskTimer.StartTasks">
            <summary>
            立刻开始执行定时任务
            </summary>
        </member>
        <member name="M:KdCore.BbTaskTimer.StopTasks">
            <summary>
            停用定时任务
            </summary>
        </member>
        <member name="M:KdCore.BbTaskTimer.TimerExecute_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            定期执行事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KdCore.BbTaskTimer.SetTask(System.Action,System.String)">
            <summary>
            添加需要定期执行的方法
            </summary>
            <param name="action">定时任务处理方法</param>
            <param name="actionName">定时任务的标识名称</param>
        </member>
        <member name="M:KdCore.BbTaskTimer.RemoveTask(System.Action)">
            <summary>
            移除定期执行的方法
            </summary>
            <param name="action">定时任务处理方法</param>
        </member>
        <member name="M:KdCore.BbTaskTimer.RemoveTask(System.String)">
            <summary>
            移除定期执行的方法
            </summary>
            <param name="actionName">定时任务的标识名称</param>
        </member>
        <member name="M:KdCore.BbTaskTimer.ClearTasks">
            <summary>
            清空定期执行的方法列表
            </summary>
        </member>
        <member name="T:KdCore.KdUtilCrypto">
            <summary>
            摘自微软开源项目的密码加密实现方法
            </summary>
        </member>
        <member name="M:KdCore.KdUtilCrypto.EncryptPwd(System.String)">
            <summary>
            密码加密
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilCrypto.VerifyPwd(System.String,System.String)">
            <summary>
            密码验证
            </summary>
            <param name="pwdEncrypted"></param>
            <param name="pwdOriginal"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.BbCycleDateTime">
            <summary>
            日期时间周期类型分组方式
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.None">
            <summary>
            未设置
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Year">
            <summary>
            按年份，每年的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Month">
            <summary>
            按月份，每月的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Week">
            <summary>
            按周，每周的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Day">
            <summary>
            按天，每天的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Hour12">
            <summary>
            按小时，每十二小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Hour08">
            <summary>
            按小时，每八小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Hour06">
            <summary>
            按小时，每六小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Hour04">
            <summary>
            按小时，每四小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Hour03">
            <summary>
            按小时，每三小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Hour02">
            <summary>
            按小时，每两小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Hour">
            <summary>
            按小时，每小时的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Minute45">
            <summary>
            按分钟，每45分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Minute30">
            <summary>
            按分钟，每30分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Minute15">
            <summary>
            按分钟，每15分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Minute10">
            <summary>
            按分钟，每10分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Minute05">
            <summary>
            按分钟，每5分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Minute">
            <summary>
            按分钟，每分钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Second45">
            <summary>
            按秒钟，每45秒钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Second30">
            <summary>
            按秒钟，每30秒钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Second15">
            <summary>
            按秒钟，每15秒钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Second10">
            <summary>
            按秒钟，每10秒钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Second05">
            <summary>
            按秒钟，每5秒钟的数据作为一组
            </summary>
        </member>
        <member name="F:KdCore.BbCycleDateTime.Second">
            <summary>
            按秒钟，每秒钟的数据作为一组
            </summary>
        </member>
        <member name="T:KdCore.KdBaseContext">
            <summary>
            系统程序基本配置与管理
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.KdCoreVersion">
            <summary>
            框架文件 - 版本号
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.KdCoreCompany">
            <summary>
            框架文件 - 公司名称
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.KdCoreTrademark">
            <summary>
            框架文件 - 合法商标
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.KdCoreCopyright">
            <summary>
            框架文件 - 版权声明
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.AsyncCode">
            <summary>
            系统缓存重置同步识别编码
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext._lockObj">
            <summary>
            当前类中加锁时锁定对象
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.MarkStamp">
            <summary>
            获取或设置当前系统数据验证标识
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.BinDirectory">
            <summary>
            获取或设置当前系统的桌面程序启动路径或 Web 程序的 /bin 目录的物理路径。
            </summary>
        </member>
        <member name="E:KdCore.KdBaseContext.OnInit">
            <summary>
            系统配置等初始化的事件发布
            </summary>
        </member>
        <member name="E:KdCore.KdBaseContext.OnResetCaches">
            <summary>
            重置缓存的事件声明
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.IsIntact">
            <summary>
            框架完整性验证是否通过
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.CheckIntact">
            <summary>
            检查验证框架完整性
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.Initialize(System.Func{System.String,System.String})">
            <summary>
            初始化系统配置
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.CacheLastUpdate">
            <summary>
            获取或设置缓存最后更新时间
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.ResetCaches">
            <summary>
            重置系统缓存
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.ResetCacheByCode(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})">
            <summary>
            更新指定类型的缓存设置
            </summary>
            <param name="cacheType"></param>
            <param name="reserveDuration"></param>
            <param name="earliestTime"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdBaseContext.RunIsDebugMode">
            <summary>
            获取或设置当前程序实际上是否以调试模式在运行
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.RunAsDebugMode">
            <summary>
            获取或设置当前程序是否以调试方式运行，以便加载更多信息
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.UseHttpRuntimeDebugMode">
            <summary>
            获取或设置使用 web.config 中配置运行的调试模式，通常在配置文件中进行配置
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.IsModuleManage">
            <summary>
            获取或设置当前程序是否是独立的系统管理模块，后台配置管理
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.IsModuleFunction">
            <summary>
            获取或设置当前程序是否是独立的业务功能模块，前台系统
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.AppDataTagCode">
            <summary>
            获取或设置当前程序的数据识别标识，通常用于数据库区分数据所属的程序，避免不同程序间独立的数据受影响
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Config">
            <summary>
            获取或设置系统基本设置【暂时尚不能使用】
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.EnableAutoLoginByUserToken">
            <summary>
            获取或设置是否使用 UserToken 进行自动登录操作
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_BuildId">
            <summary>
            获取或设置系统生成主键ID的方法
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_GetPatternCssClass">
            <summary>
            获取或设置通过外观样式获取 CSS 样式名称的方法
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Empty_Href">
            <summary>
            表示空链接的 Href 值
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.MAX_TREE_LEVEL_SORT">
            <summary>
            树节点同一级的最大排序号
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.MAX_SCOPE_LEVEL">
            <summary>
            最大可设置生效范围级别
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.STRING_TAB">
            <summary>
            字符串：制表符
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.STRING_TAB_DOUBLE">
            <summary>
            字符串：制表符
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.STRING_NEW_LINE_TAB">
            <summary>
            字符串：制表符
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.STRING_NEW_LINE_TAB_DOUBLE">
            <summary>
            字符串：制表符
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.STRING_EMPTY">
            <summary>
            空字符串
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.SESSION_CLIENT_TYPE">
            <summary>
            session中保存当前客户端类型信息的key
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.SESSION_CLIENT_DEVICE">
            <summary>
            session中保存当前客户端设备信息的key
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.SESSION_LOGIN_USER_UPDATETIME">
            <summary>
            session中保存登录用户信息更新时间的key
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.SESSION_LOGIN_USER">
            <summary>
            session中保存登录用户信息的key
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.SESSION_LOGIN_VERIFY_CODE">
            <summary>
            session中保存登录用户验证码的key
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.SESSION_LOGIN_USER_PWD_IS_WEAK">
            <summary>
            session中保存登录用户是否弱口令的key
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.SESSION_LAST_REQUEST">
            <summary>
            session中保存系统最后一次记录的访问地址的key，必须在主动指定保存，系统不会自动生成
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.SESSION_TIPS_MESSAGE">
            <summary>
            session中保存系统产生的提示或警告信息的key
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.SESSION_LAST_MESSAGE">
            <summary>
            session中保存系统最后一次产生的警告信息的key
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.CURRENT_ACTION_MESSAGE">
            <summary>
            当前操作过程中产生的提示或警告信息的key
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.ID_HYPHENS_CHAR">
            <summary>
            ID拼接连接符
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.ID_HYPHENS">
            <summary>
            ID拼接连接符
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.CODE_HYPHENS">
            <summary>
            编码拼接连接符
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.NAME_HYPHENS">
            <summary>
            名称拼接连接符
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.ITEM_HYPHENS">
            <summary>
            多项组合字符串时的分割符号
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.ITEM_HYPHENS_CHAR">
            <summary>
            多项组合字符串时的分割符号
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.ITEM_HYPHENS_CN">
            <summary>
            多项组合字符串时的中文分割符号
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.MULTI_ITEMS">
            <summary>
            包含有多个子项数据的属性的自定义数据类型名称
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.DateTime_Empty">
            <summary>
            视为未赋值的时间值
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.DateTime_Zero">
            <summary>
            获取或设置系统有效日期时间的起始值
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.DateTime_Spot">
            <summary>
            获取或设置日期时间的一个常用于比较判断的时间点；
            默认值：January 1, 1970, 00:00:00 GMT
            比如 Java 中就使用 January 1, 1970, 00:00:00 GMT，作为 Date 对象 getTime 方法的比较时间点
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.DATE_NORMAL">
            <summary>
             普通日期格式
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.DATE_NORMAL_FMT">
            <summary>
             普通日期格式(Eval)
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.DATE_SHORT">
            <summary>
            短日期格式
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.DATE_SHORT_FMT">
            <summary>
            短日期格式(Eval)
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.DATE_CHINESE">
            <summary>
            普通日期格式；中文年月日
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.DATE_CHINESE_FMT">
            <summary>
            普通日期格式(Eval)；中文年月日
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.DATE_CHINESE_SHORT">
            <summary>
            短日期格式；中文年月日
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.DATE_CHINESE_SHORT_FMT">
            <summary>
            短日期格式(Eval)；中文年月日
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIMESPAN_NORMAL">
            <summary>
            普通时间格式
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_DB_PRECISE">
            <summary>
            精确日期时间格式(SQL SERVER 通常只能保存三位小数)
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_DB_PRECISE_FMT">
            <summary>
            精确日期时间格式(SQL SERVER 通常只能保存三位小数)
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_PRECISE">
            <summary>
            精确日期时间格式
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_PRECISE_FMT">
            <summary>
            精确日期时间格式
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_NORMAL">
            <summary>
            普通日期时间格式
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_NORMAL_FMT">
            <summary>
            普通日期时间格式(Eval)
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_SHORT">
            <summary>
            带时间短日期格式
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_SHORT_FMT">
            <summary>
            带时间短日期格式(Eval)
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_CHINESE">
            <summary>
            普通日期时间格式；中文年月日
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_CHINESE_FMT">
            <summary>
            普通日期时间格式(Eval)；中文年月日
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_CHINESE_SHORT">
            <summary>
            带时间短日期格式；中文年月日
            </summary>
        </member>
        <member name="F:KdCore.KdBaseContext.TIME_CHINESE_SHORT_FMT">
            <summary>
            带时间短日期格式(Eval)；中文年月日
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Culture">
            <summary>
            系统采用的本地化区域信息
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Chinese">
            <summary>
            简体中文本地化区域信息
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.IsWebApp">
            <summary>
            获取或设置当前程序是否为 Web 应用程序
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.AppDataFolderName">
            <summary>
            获取或设置当前程序的默认数据存储文件夹的名称，默认为 App_Data
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.RuntimeVerifyFuncs">
            <summary>
            当前系统程序运行环境是否符合要求的验证方法
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.RuntimeVerifyResults">
            <summary>
            当前系统程序运行环境是否符合要求的验证结果
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.BbRuntimeVerifyIsExecuted">
            <summary>
            获取当前系统程序运行环境是否已经进行验证
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.BbRuntimeVerifyIsPassed">
            <summary>
            获取当前系统程序运行环境是否通过验证
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.AddRuntimeVerify(System.String,System.Func{System.Boolean})">
            <summary>
            添加系统运行环境验证方法
            </summary>
            <param name="verifyName"></param>
            <param name="funcRuntimeVerify"></param>
        </member>
        <member name="M:KdCore.KdBaseContext.RemoveRuntimeVerify(System.String)">
            <summary>
            移除系统运行环境验证方法
            </summary>
            <param name="verifyName"></param>
        </member>
        <member name="M:KdCore.KdBaseContext.VerifyRuntime">
            <summary>
            执行已配置的系统环境验证方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.VerifyRuntime(System.String)">
            <summary>
            获取当前系统环境是否通过指定的验证方法
            </summary>
            <param name="verifyName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.ReverifyRuntime(System.String)">
            <summary>
            获取当前系统环境是否通过指定的验证方法
            </summary>
            <param name="verifyName"></param>
            <returns></returns>
        </member>
        <member name="F:KdCore.KdBaseContext.VerifyToken_VersionsExplain">
            <summary>
            验证标识：程序集版本更新说明
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.UseVersionsExplain">
            <summary>
            是否启用的了程序版本更新说明
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.VerifyVersionsExplain(System.Boolean)">
            <summary>
            程序集版本更新说明处理是否通过验证
            </summary>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_GetObjectType">
            <summary>
            获取或设置用于获取实际类型，剥离EntityFramework的代理类的方法
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.GetObjectType(System.Type)">
            <summary>
            去除 Entity Framework 的实体代理类型，获取类型的真实类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.DefaultMsgAction(System.Boolean)">
            <summary>
            获取默认的操作结果提示消息
            </summary>
            <param name="actionSuccess"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_PwdEncrypt">
            <summary>
            获取或设置当前系统采用的密码加密处理方法
            </summary>
            <remarks>参数为待加密的密码字符串，返回值为加密后的密码字符串</remarks>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_PwdEncryptVerify">
            <summary>
            获取或设置当前系统采用的密码加密后的验证方式
            </summary>
            <remarks>参数1为已加密的密码，参数2为待验证的密码，返回值为待验证密码与已加密的密码是否一致</remarks>
        </member>
        <member name="M:KdCore.KdBaseContext.PwdEncrypt(System.String)">
            <summary>
            对密码字符串进行加密处理
            </summary>
            <param name="pwdOriginal"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.PwdVerify(System.String,System.String)">
            <summary>
            对密码字符串进行加密处理
            </summary>
            <param name="pwdEncrypted">系统保存的已加密密码</param>
            <param name="pwdNeedVerify">待验证的密码</param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_MapEntity">
            <summary>
            数据实体模型映射转换处理方法
            in1 object 提供赋值数据的源对象
            in2 object 接受数据赋值的目标对象，为 null 时表示需要创建新的目标对象
            in3 Type 接受数据赋值的目标对象类型，第二个参数为 null 必须提供
            in4 Type 提供赋值数据的源对象类型，可省略
            out object 已赋值的目标对象，或新创建的目标类型对象
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.GetMime(System.String)">
            <summary>
            获取指定文件名的 MIME 映射
            </summary>
            <param name="fileName">用来确定 MIME 种类的文件名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetAppSetting(System.String)">
            <summary>
            获取当前程序配置文件中的程序配置值
            </summary>
            <returns>当前配置的数据库连接字符串</returns>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_VirtualPathToPhysicsPath">
            <summary>
            获取或设置虚拟路径转换为物理路径的处理方法
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.VirtualPathToPhysicsPathDefault(System.String)">
            <summary>
            自行计算获取物理路径的处理方法
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.VirtualPathToPhysicsPath(System.String)">
            <summary>
            虚拟路径转换为物理路径
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.FileExists(System.String)">
            <summary>
            检查文件是否存在
            </summary>
            <param name="filePath">不用区分虚拟路径或物理路径,程序判断如果是绝对路径则直接返回,如果是相对路径或虚拟路径则自动转换为物理绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVopPathDataFolder(System.Boolean,System.Boolean,System.String,System.String,System.String[])">
            <summary>
            获取系统数据目录的相对路径
            </summary>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="ensureExists">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据目录的相对路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVopPathDataFolder(System.Boolean,System.Boolean,KdCore.BbCycleDateTime,System.String,System.String,System.String[])">
            <summary>
            获取系统数据目录的相对路径
            </summary>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="ensureExists">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据目录的相对路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVopPathDataFile(System.Boolean,System.Boolean,System.String,System.String,System.String,System.String[])">
            <summary>
            获取系统数据文件的相对路径
            </summary>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="ensureFolder">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVopPathDataFile(System.Boolean,System.Boolean,KdCore.BbCycleDateTime,System.String,System.String,System.String,System.String[])">
            <summary>
            获取系统数据文件的相对路径
            </summary>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="ensureFolder">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVopPathAppData(System.Boolean,System.Boolean,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹的相对路径
            </summary>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="ensureExists">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">子文件夹</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVopPathAppData(System.Boolean,System.Boolean,KdCore.BbCycleDateTime,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹的相对路径
            </summary>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="ensureExists">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVopPathAppDataFile(System.Boolean,System.Boolean,System.String,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹中文件的相对路径
            </summary>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="ensureFolder">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVopPathAppDataFile(System.Boolean,System.Boolean,KdCore.BbCycleDateTime,System.String,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹中文件的相对路径
            </summary>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="ensureFolder">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVPathDataFolder(System.String,System.String,System.String[])">
            <summary>
            获取系统数据目录的相对虚拟路径
            </summary>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据目录的相对虚拟路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVPathDataFolder(KdCore.BbCycleDateTime,System.String,System.String,System.String[])">
            <summary>
            获取系统数据目录的相对虚拟路径
            </summary> 
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据目录的相对虚拟路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVPathDataFile(System.String,System.String,System.String,System.String[])">
            <summary>
            获取系统数据文件的相对虚拟路径
            </summary>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的相对虚拟路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVPathDataFile(KdCore.BbCycleDateTime,System.String,System.String,System.String,System.String[])">
            <summary>
            获取系统数据文件的相对虚拟路径
            </summary>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的相对虚拟路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVPathAppData(System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹的相对虚拟路径
            </summary> 
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">子文件夹</param>
            <returns>系统数据目录的相对虚拟路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVPathAppData(KdCore.BbCycleDateTime,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹的相对虚拟路径
            </summary>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据目录的相对虚拟路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVPathAppDataFile(System.String,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹中文件的相对虚拟路径
            </summary>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的相对虚拟路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetVPathAppDataFile(KdCore.BbCycleDateTime,System.String,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹中文件的相对虚拟路径
            </summary>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的相对虚拟路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathDataFolder(System.Boolean,System.String,System.String,System.String[])">
            <summary>
            获取系统数据目录的物理路径
            </summary>
            <param name="ensureExists">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据目录的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathDataFolder(System.Boolean,KdCore.BbCycleDateTime,System.String,System.String,System.String[])">
            <summary>
            获取系统数据目录的物理路径
            </summary>
            <param name="ensureExists">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据目录的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathDataFile(System.Boolean,System.String,System.String,System.String,System.String[])">
            <summary>
            获取系统数据文件的物理路径
            </summary>
            <param name="ensureFolder">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathDataFile(System.Boolean,KdCore.BbCycleDateTime,System.String,System.String,System.String,System.String[])">
            <summary>
            获取系统数据文件的物理路径
            </summary>
            <param name="ensureFolder">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathAppData(System.Boolean,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹的物理路径
            </summary>
            <param name="ensureExists">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">子文件夹</param>
            <returns>系统数据目录的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathAppData(System.Boolean,KdCore.BbCycleDateTime,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹的物理路径
            </summary>
            <param name="ensureFolder">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据目录的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathAppDataFile(System.Boolean,System.String,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹中文件的物理路径
            </summary>
            <param name="ensureFolder">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathAppDataFile(System.Boolean,KdCore.BbCycleDateTime,System.String,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹中文件的物理路径
            </summary>
            <param name="ensureFolder">是否直接检查文件夹是否存在，不存在时自动创建</param>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathDataFolder(System.String,System.String,System.String[])">
            <summary>
            获取系统数据目录的物理路径
            </summary>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据目录的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathDataFolder(KdCore.BbCycleDateTime,System.String,System.String,System.String[])">
            <summary>
            获取系统数据目录的物理路径
            </summary> 
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据目录的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathDataFile(System.String,System.String,System.String,System.String[])">
            <summary>
            获取系统数据文件的物理路径
            </summary>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathDataFile(KdCore.BbCycleDateTime,System.String,System.String,System.String,System.String[])">
            <summary>
            获取系统数据文件的物理路径
            </summary>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolder">指定的二级分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathAppData(System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹的物理路径
            </summary> 
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">子文件夹</param>
            <returns>系统数据目录的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathAppData(KdCore.BbCycleDateTime,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹的物理路径
            </summary>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据目录的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathAppDataFile(System.String,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹中文件的物理路径
            </summary>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的物理路径</returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetPathAppDataFile(KdCore.BbCycleDateTime,System.String,System.String,System.String[])">
            <summary>
            获取 App_Data 文件夹或其子文件夹中文件的物理路径
            </summary>
            <param name="saveCycle">数据保存文件夹分组方式</param>
            <param name="fileName">数据文件保存文件名称</param>
            <param name="folder">指定的分类文件夹名称</param>
            <param name="subfolders">分类文件夹下的子文件夹路径名称</param>
            <returns>系统数据文件的物理路径</returns>
        </member>
        <member name="P:KdCore.KdBaseContext.CacheSessionUsers">
            <summary>
            当前存在的会话用户的缓存
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.OnUserLogin">
            <summary>
            获取或设置设置指定 Session 的登录用户时的数据处理方法
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.OnUserLogout">
            <summary>
            获取或设置用户退出登录关闭 Session 时的数据处理方法
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.CloseSession(System.String)">
            <summary>
            关闭 Session
            </summary>
            <param name="sessionId"></param>
        </member>
        <member name="M:KdCore.KdBaseContext.SetSessionUser(System.String,System.Security.Principal.IPrincipal)">
            <summary>
            设置指定 Session 的登录用户
            </summary>
            <param name="sessionId"></param>
            <param name="user"></param>
        </member>
        <member name="M:KdCore.KdBaseContext.GetSessionUser(System.String)">
            <summary>
            获取指定 Session 的登录用户
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdBaseContext.Default_ClientType">
            <summary>
            系统默认客户端类型
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Support_ClientTypes">
            <summary>
            系统支持的客户端类型
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Support_UploadClientTypes">
            <summary>
            系统支持上传的客户端类型
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.IsSupport(KdCore.BbClientType)">
            <summary>
            获取当前系统设置是否支持客户端设备类型
            </summary>
            <param name="clientType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.FilterSupport(KdCore.BbClientType)">
            <summary>
            过滤当前系统支持的客户端类型
            </summary>
            <param name="clientType"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdBaseContext.CheckClientTypeEveryRequest">
            <summary>
            获取或设置是否每次请求都检测客户端类型
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_GetClientTypeDesc">
            <summary>
            获取或设置获取客户端类型描述的方法
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_GetClientTypeFromBrowser">
            <summary>
            获取或设置通过浏览器信息识别客户端类型的方法
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_GetClientTypeFromBrowserBase">
            <summary>
            获取或设置通过浏览器信息识别客户端类型的方法
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_GetClientTypeFromRequest">
            <summary>
            获取或设置通过浏览器信息识别客户端类型的方法
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_GetClientTypeFromRequestBase">
            <summary>
            获取或设置通过浏览器信息识别客户端类型的方法
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_GetPageButtonCount">
            <summary>
            获取客户端分页按钮显示个数的处理方法
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Default_DataListLayout">
            <summary>
            系统默认数据列表布局方式
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Support_DataListLayouts">
            <summary>
            系统支持的客户端类型
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.SupportMultiListLayout">
            <summary>
            获取当前系统设置是否支持多种数据显示布局
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.IsSupport(KdCore.BbDataListLayout)">
            <summary>
            获取当前系统设置是否支持数据显示布局
            </summary>
            <param name="layout"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.GetCurrSupportListLayouts">
            <summary>
            获取当前系统支持的客户端类型
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_GetCssForTheme">
            <summary>
            获取或设置如何动态加载不同主题的专属 CSS 样式表路径
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.GetCssForTheme(System.String)">
            <summary>
            获取动态加载不同主题的专属 CSS 样式表路径
            </summary>
            <param name="themeName"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_GetCssForClient">
            <summary>
            获取或设置如何为客户端获取专属 CSS 样式表路径
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.GetCssForClient(KdCore.KdClientDevice)">
            <summary>
            获取客户端专属 CSS 样式表路径
            </summary>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_GetCssForFontSize">
            <summary>
            获取或设置如何动态加载不同字体尺寸的专属 CSS 样式表路径
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.GetCssForFontSize(KdCore.KdClientDevice,System.String)">
            <summary>
            获取动态加载不同字体尺寸的专属 CSS 样式表路径
            </summary>
            <param name="device"></param>
            <param name="fontSizeName"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdBaseContext.IconNameFolderDefault">
            <summary>
            获取或设置文件夹默认显示图标名称
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.IconNameFileDefault">
            <summary>
            获取或设置文件默认显示图标名称
            </summary>
        </member>
        <member name="P:KdCore.KdBaseContext.Dict_ExtNameToIconName">
            <summary>
            获取或设置文件扩展名与显示图标之间的对应关系字典
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.SetIconName(System.String,System.String[])">
            <summary>
            设置文件扩展名对应的显示图标名称
            </summary>
            <param name="iconName">显示图标名称</param>
            <param name="extNames">文件扩展名</param>
        </member>
        <member name="M:KdCore.KdBaseContext.GetIconName(System.String)">
            <summary>
            获取文件扩展名对应的显示图标名称
            </summary>
            <param name="extName">文件扩展名</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.InitIconNames(System.Collections.Specialized.NameValueCollection)">
            <summary>
            初始化文件扩展名对应的显示图片名称
            </summary>
            <param name="iconExtNames"></param>
        </member>
        <member name="M:KdCore.KdBaseContext.IsImage(System.String)">
            <summary>
            根据扩展名判断是否图片文件
            </summary>
            <param name="extName">扩展名</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdBaseContext.IsWebImage(System.String)">
            <summary>
            根据文件扩展名判断是否 Web 图片文件
            </summary>
            <param name="extName">文件扩展名</param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdBaseContext.Func_AddWaterMark">
            <summary>
            获取或设置给文件添加图片水印的处理方法
            </summary>
        </member>
        <member name="M:KdCore.KdBaseContext.SupportWatermark(System.String)">
            <summary>
            指定扩展名的文件是否支持添加水印
            </summary>
            <param name="extName"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.PropertyHelper">
            <summary>
            属性访问工具
            </summary>
        </member>
        <member name="M:KdCore.Reflection.PropertyHelper.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a fast property helper. This constructor does not cache the helper.
            </summary>
        </member>
        <member name="P:KdCore.Reflection.PropertyHelper.Name">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="M:KdCore.Reflection.PropertyHelper.MakeFastPropertySetter``1(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property setter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast setter.</returns>
            <remarks>This method is more memory efficient than a dynamically compiled lambda, and about the same speed.</remarks>
        </member>
        <member name="M:KdCore.Reflection.PropertyHelper.GetValue(System.Object)">
            <summary>
            获取属性的值
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Reflection.PropertyHelper.GetProperties(System.Object)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the underlying type.
            </summary>
            <param name="instance">the instance to extract property accessors for.</param>
            <returns>a cached array of all public property getters from the underlying type of this instance.</returns>
        </member>
        <member name="M:KdCore.Reflection.PropertyHelper.MakeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>This method is more memory efficient than a dynamically compiled lambda, and about the same speed.</remarks>
        </member>
        <member name="M:KdCore.Reflection.PropertyHelper.GetProperties(System.Object,System.Func{System.Reflection.PropertyInfo,KdCore.Reflection.PropertyHelper},System.Collections.Concurrent.ConcurrentDictionary{System.Type,KdCore.Reflection.PropertyHelper[]})">
            <summary>
            获取实例对象的属性数组
            </summary>
            <param name="instance"></param>
            <param name="createPropertyHelper"></param>
            <param name="cache"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.TryGetValueDelegate">
            <summary>
            获取类型的属性的值的方法委托类型声明
            </summary>
            <param name="dictionary"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.TypeHelper">
            <summary>
            类型反射访问工具
            </summary>
        </member>
        <member name="M:KdCore.Reflection.TypeHelper.CreateDelegate``1(System.Reflection.Assembly,System.String,System.String,System.Object)">
            <summary>
            method is used primarily for lighting up new .NET Framework features even if MVC targets the previous version
             thisParameter is the 'this' parameter if target method is instance method, should be null for static method
            </summary>
            <typeparam name="TDelegate"></typeparam>
            <param name="assembly"></param>
            <param name="typeName"></param>
            <param name="methodName"></param>
            <param name="thisParameter"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Reflection.TypeHelper.CreateDelegate``1(System.Type,System.String,System.Object)">
            <summary>
            创建一个表示获取类型的属性的值的方法的委托类型
            </summary>
            <typeparam name="TDelegate"></typeparam>
            <param name="targetType"></param>
            <param name="methodName"></param>
            <param name="thisParameter"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Reflection.TypeHelper.CreateTryGetValueDelegate(System.Type)">
            <summary>
            创建一个表示获取类型的属性的值的方法的委托类型
            </summary>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Reflection.TypeHelper.ExtractGenericInterface(System.Type,System.Type)">
            <summary>
            创建一个表示获取类型的属性的值的方法的委托类型
            </summary>
            <param name="queryType"></param>
            <param name="interfaceType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Reflection.TypeHelper.EnsureDebuggableException(System.MissingMethodException,System.String)">
            <summary>
            Provide a new <see cref="T:System.MissingMethodException" /> if original Message does not contain given full Type name.
            </summary>
            <param name="originalException"><see cref="T:System.MissingMethodException" /> to check.</param>
            <param name="fullTypeName">Full Type name which Message should contain.</param>
            <returns>New <see cref="T:System.MissingMethodException" /> if an update is required; null otherwise.</returns>
        </member>
        <member name="T:KdCore.Reflection.IConstructorInvoker">
            <summary>
            构造函数访问器接口
            </summary>
        </member>
        <member name="M:KdCore.Reflection.IConstructorInvoker.Invoke(System.Object[])">
            <summary>
            访问构造函数，创建数据实例
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.ConstructorInvoker">
            <summary>
            构造函数访问器
            </summary>
        </member>
        <member name="P:KdCore.Reflection.ConstructorInvoker.ConstructorInfo">
            <summary>
            构造函数属性的信息封装
            </summary>
        </member>
        <member name="M:KdCore.Reflection.ConstructorInvoker.#ctor(System.Reflection.ConstructorInfo)">
            <summary>
            构造函数
            </summary>
            <param name="constructorInfo"></param>
        </member>
        <member name="M:KdCore.Reflection.ConstructorInvoker.Invoke(System.Object[])">
            <summary>
            调用构造函数，创建对象类型实例
            </summary>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.KdReflectionCaches">
            <summary>
            快速反射缓存
            </summary>
        </member>
        <member name="M:KdCore.Reflection.KdReflectionCaches.ResetCaches">
            <summary>
            重置缓存
            </summary>
        </member>
        <member name="P:KdCore.Reflection.KdReflectionCaches.MethodInvokerCache">
            <summary>
            方法访问器缓存
            </summary>
        </member>
        <member name="P:KdCore.Reflection.KdReflectionCaches.PropertyAccessorCache">
            <summary>
            属性访问器缓存
            </summary>
        </member>
        <member name="P:KdCore.Reflection.KdReflectionCaches.FieldAccessorCache">
            <summary>
            字段访问器缓存
            </summary>
        </member>
        <member name="P:KdCore.Reflection.KdReflectionCaches.ConstructorInvokerCache">
            <summary>
            构造函数访问器缓存
            </summary>
        </member>
        <member name="T:KdCore.Reflection.IFieldAccessor">
            <summary>
            字段访问器访问接口
            </summary>
        </member>
        <member name="M:KdCore.Reflection.IFieldAccessor.GetValue(System.Object)">
            <summary>
            获取字段的值
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.FieldAccessor">
            <summary>
            字段访问器
            </summary>
        </member>
        <member name="P:KdCore.Reflection.FieldAccessor.FieldInfo">
            <summary>
            字段属性的信息封装
            </summary>
        </member>
        <member name="M:KdCore.Reflection.FieldAccessor.#ctor(System.Reflection.FieldInfo)">
            <summary>
            构造函数
            </summary>
            <param name="fieldInfo"></param>
        </member>
        <member name="M:KdCore.Reflection.FieldAccessor.GetValue(System.Object)">
            <summary>
            获取字段的值
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.IFastReflectionCache`2">
            <summary>
            快速反射接口的缓存接口
            </summary>
            <typeparam name="TMember"></typeparam>
            <typeparam name="TAccessor"></typeparam>
        </member>
        <member name="M:KdCore.Reflection.IFastReflectionCache`2.Get(`0)">
            <summary>
            获取对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.FastReflectionCache`2">
            <summary>
            快速反射接口的缓存
            </summary>
            <typeparam name="TMember"></typeparam>
            <typeparam name="TAccessor"></typeparam>
        </member>
        <member name="M:KdCore.Reflection.FastReflectionCache`2.Get(`0)">
            <summary>
            获取对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Reflection.FastReflectionCache`2.Create(`0)">
            <summary>
            创建对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.FieldAccessorCache">
            <summary>
            字段反射访问器的缓存
            </summary>
        </member>
        <member name="M:KdCore.Reflection.FieldAccessorCache.Create(System.Reflection.FieldInfo)">
            <summary>
            创建对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.PropertyAccessorCache">
            <summary>
            属性反射访问器的缓存
            </summary>
        </member>
        <member name="M:KdCore.Reflection.PropertyAccessorCache.Create(System.Reflection.PropertyInfo)">
            <summary>
            创建对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.ConstructorInvokerCache">
            <summary>
            构造函数反射访问器的缓存
            </summary>
        </member>
        <member name="M:KdCore.Reflection.ConstructorInvokerCache.Create(System.Reflection.ConstructorInfo)">
            <summary>
            创建对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.MethodInvokerCache">
            <summary>
            方法反射访问器的缓存
            </summary>
        </member>
        <member name="M:KdCore.Reflection.MethodInvokerCache.Create(System.Reflection.MethodInfo)">
            <summary>
            创建对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.IFastReflectionFactory`2">
            <summary>
            快速反射工厂接口
            </summary>
            <typeparam name="TMember"></typeparam>
            <typeparam name="TAccessor"></typeparam>
        </member>
        <member name="M:KdCore.Reflection.IFastReflectionFactory`2.Create(`0)">
            <summary>
            创建对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.FastReflectionFactories">
            <summary>
            快速反射工厂缓存
            </summary>
        </member>
        <member name="P:KdCore.Reflection.FastReflectionFactories.MethodInvokerFactory">
            <summary>
            方法反射调用工厂实例
            </summary>
        </member>
        <member name="P:KdCore.Reflection.FastReflectionFactories.PropertyAccessorFactory">
            <summary>
            属性反射访问工厂实例
            </summary>
        </member>
        <member name="P:KdCore.Reflection.FastReflectionFactories.FieldAccessorFactory">
            <summary>
            字段反射访问工厂实例
            </summary>
        </member>
        <member name="P:KdCore.Reflection.FastReflectionFactories.ConstructorInvokerFactory">
            <summary>
            构造器反射调用工厂实例
            </summary>
        </member>
        <member name="T:KdCore.Reflection.ConstructorInvokerFactory">
            <summary>
            构造器反射调用工厂
            </summary>
        </member>
        <member name="M:KdCore.Reflection.ConstructorInvokerFactory.Create(System.Reflection.ConstructorInfo)">
            <summary>
            创建对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.FieldAccessorFactory">
            <summary>
            字段反射访问工厂
            </summary>
        </member>
        <member name="M:KdCore.Reflection.FieldAccessorFactory.Create(System.Reflection.FieldInfo)">
            <summary>
            创建对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.PropertyAccessorFactory">
            <summary>
            属性反射访问工厂
            </summary>
        </member>
        <member name="M:KdCore.Reflection.PropertyAccessorFactory.Create(System.Reflection.PropertyInfo)">
            <summary>
            创建对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.MethodInvokerFactory">
            <summary>
            方法反射调用工厂
            </summary>
        </member>
        <member name="M:KdCore.Reflection.MethodInvokerFactory.Create(System.Reflection.MethodInfo)">
            <summary>
            创建对成员属性调用的访问器
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.IMethodInvoker">
            <summary>
            方法属性访问器接口
            </summary>
        </member>
        <member name="T:KdCore.Reflection.MethodInvoker">
            <summary>
            方法属性访问器
            </summary>
        </member>
        <member name="P:KdCore.Reflection.MethodInvoker.MethodInfo">
            <summary>
            方法属性的信息封装
            </summary>
        </member>
        <member name="M:KdCore.Reflection.MethodInvoker.#ctor(System.Reflection.MethodInfo)">
            <summary>
            构造方法
            </summary>
            <param name="methodInfo"></param>
        </member>
        <member name="M:KdCore.Reflection.MethodInvoker.Invoke(System.Object,System.Object[])">
            <summary>
            方法属性调用
            </summary>
            <param name="instance"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Reflection.IPropertyAccessor">
            <summary>
            属性访问器访问接口
            </summary>
        </member>
        <member name="M:KdCore.Reflection.IPropertyAccessor.GetValue(System.Object)">
            <summary>
            获取属性的值
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Reflection.IPropertyAccessor.SetValue(System.Object,System.Object)">
            <summary>
            设置属性的值
            </summary>
            <param name="instance"></param>
            <param name="value"></param>
        </member>
        <member name="T:KdCore.Reflection.PropertyAccessor">
            <summary>
            属性访问器
            </summary>
        </member>
        <member name="P:KdCore.Reflection.PropertyAccessor.PropertyInfo">
            <summary>
            属性属性的信息封装
            </summary>
        </member>
        <member name="M:KdCore.Reflection.PropertyAccessor.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            构造函数
            </summary>
            <param name="propertyInfo"></param>
        </member>
        <member name="M:KdCore.Reflection.PropertyAccessor.GetValue(System.Object)">
            <summary>
            获取属性的值
            </summary>
            <param name="instance">从中获取值的对象</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Reflection.PropertyAccessor.SetValue(System.Object,System.Object)">
            <summary>
            设置属性的值
            </summary>
            <param name="instance">要设置值的对象</param>
            <param name="value"></param>
        </member>
        <member name="T:KdCore.Utils.KdUtilMachine">
            <summary>
            获取计算机硬件信息
            </summary>
        </member>
        <member name="M:KdCore.Utils.KdUtilMachine.GetCpuCode">
            <summary>
             获取CPU编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilMachine.GetMacCode">
            <summary>
             读取Mac地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilMachine.GetNetCardMacAddress">
            <summary>
             读取Mac地址1（已去掉：）
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilMachine.GetNetCardMacAddress2">
            <summary>
             读取Mac地址2（已去掉：）
            </summary>
        </member>
        <member name="M:KdCore.Utils.KdUtilMachine.GetNetCardMacAddress3">
            <summary>
            获取mac地址3（已去掉：）
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilMachine.GetHostName">
            <summary>
             取机器名
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilMachine.GetDiskVolumeSerialNumber">
            <summary>
             读取系统盘序列号
            </summary>
            <returns>系统盘序列号</returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilMachine.BuildNativeCodeXml(System.String,System.String)">
            <summary>
            生成本地机器码的XML
            </summary>
            <param name="cpu"></param>
            <param name="mac"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilMachine.BuildNativeCodeString(System.String,System.String)">
            <summary>
            生成本地机器码的XML的字符串
            </summary>
            <param name="cpu"></param>
            <param name="mac"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Utils.KdUtilRsa">
            <summary>
            RSA加密
            使用Key(公私钥匙对)进行加密解密
            支持还原
            </summary>
        </member>
        <member name="M:KdCore.Utils.KdUtilRsa.Decrypt(System.Security.Cryptography.RSACryptoServiceProvider,System.String)">
            <summary>
            将已加密数据从 Base64 转换后进行解密
            </summary>
            <param name="provider"></param>
            <param name="encryptedBase64"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilRsa.DecryptToString(System.Security.Cryptography.RSACryptoServiceProvider,System.String)">
            <summary>
            将已加密字符串从 Base64 转换后进行解密还原
            </summary>
            <param name="provider"></param>
            <param name="encryptedBase64"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilRsa.Encrypt(System.String,System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="source">未加密字符串</param>
            <param name="publicKey">公钥Key</param>
            <returns>加密结果</returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilRsa.VerifyHash(System.Byte[],System.Byte[],System.String)">
            <summary>
            验证签名的RSA哈希值
            </summary>
            <param name="publicKey">公钥</param>
            <param name="signedData">需要验证的哈希值</param>
            <param name="signature">经过签名的哈希值</param>
            <returns>哈希值是否被修改过</returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilRsa.VerifyHash(System.Byte[],System.String,System.String)">
            <summary>
            验证签名的RSA哈希值
            </summary>
            <param name="publicKey">公钥</param>
            <param name="signature">需要验证的哈希值</param>
            <param name="signedData">经过签名的哈希值字符串</param>
            <returns>哈希值是否被修改过</returns>
        </member>
        <member name="M:KdCore.Utils.KdUtilRsa.VerifySource(System.String,System.String@,System.String)">
            <summary>
            验证原数据正确性
            </summary>
            <param name="encrypted"></param>
            <param name="source"></param>
            <param name="publicKey"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.KdAzdgHelper">
            <summary>
            AZDG加密算法类
            </summary>
        </member>
        <member name="P:KdCore.KdAzdgHelper.EncryptKey">
            <summary>
            加解密使用的密钥
            </summary>
        </member>
        <member name="P:KdCore.KdAzdgHelper.EncryptKeyMd5Bytes">
            <summary>
            加解密使用的密钥(MD5 Hash后)
            </summary>
        </member>
        <member name="P:KdCore.KdAzdgHelper.Encode">
            <summary>
            字符串默认采用编码
            </summary>
        </member>
        <member name="M:KdCore.KdAzdgHelper.#ctor(System.String,System.Text.Encoding)">
            <summary>
            实例化一个加解密工具实例
            </summary>
            <param name="encryptKey">加解密使用的密钥</param>
            <param name="encoding">加解密时采用的编码格式</param>
        </member>
        <member name="M:KdCore.KdAzdgHelper.ComputeWithKey(System.Byte[])">
            <summary>
            Passport 密匙处理函数：按字节数组处理
            </summary>
            <param name="source">待加密或待解密的字串</param> 
            <returns>处理后的密匙</returns>
        </member>
        <member name="M:KdCore.KdAzdgHelper.Encrypt(System.Byte[])">
            <summary> 
            使用AZDG加密数据
            </summary>
            <param name="source">待加密的数据字节数组</param> 
            <returns>经过私有密匙加密后的字符串</returns>
        </member>
        <member name="M:KdCore.KdAzdgHelper.Decrypt(System.Byte[])">
            <summary>
            使用AZDG解密数据
            </summary>
            <param name="source">已加密后的数据字节数组</param>
            <returns>经过私有密匙解密后的字符串</returns>
        </member>
        <member name="M:KdCore.KdAzdgHelper.Encrypt(System.String)">
            <summary> 
            使用AZDG加密字符串
            </summary>
            <param name="source">待加密字符串</param> 
            <returns>经过私有密匙加密后的字符串</returns>
        </member>
        <member name="M:KdCore.KdAzdgHelper.Decrypt(System.String)">
            <summary>
            使用AZDG解密字符串
            </summary>
            <param name="source">已加密后的字串</param>  
            <returns>经过私有密匙解密后的字符串</returns>
        </member>
        <member name="M:KdCore.KdAzdgHelper.EncryptFileToBase64(System.String)">
            <summary>
            通过AZDG加密文件内容
            </summary>
            <param name="filePath"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAzdgHelper.DecryptFileFromBase64(System.String,System.String,System.String)">
            <summary>
            接收通过AZDG加密传送的文件，并解密后保存（不能是空文件）
            </summary>
            <param name="encryptFileContent">通过AZDG加密的文件内容</param>
            <param name="encryptFileName">通过AZDG加密的文件名称</param>
            <param name="saveFolder">解密后文件保存路径</param> 
            <returns></returns>
        </member>
        <member name="T:KdCore.KdTestDataHelper">
            <summary>
            测试数据生成工具
            </summary>
        </member>
        <member name="P:KdCore.KdTestDataHelper.FirstNames">
            <summary>
            百家姓设置集合
            </summary>
        </member>
        <member name="P:KdCore.KdTestDataHelper.CommonNames">
            <summary>
            通用名字可用字设置集合
            </summary>
        </member>
        <member name="P:KdCore.KdTestDataHelper.MaleNames">
            <summary>
            男性名字可用字设置集合
            </summary>
        </member>
        <member name="P:KdCore.KdTestDataHelper.FemaleNames">
            <summary>
            女性名字可用字设置集合
            </summary>
        </member>
        <member name="P:KdCore.KdTestDataHelper.SecondNames">
            <summary>
            名字可用字设置集合
            </summary>
        </member>
        <member name="P:KdCore.KdTestDataHelper.ThreeNames">
            <summary>
            名字可用字设置集合
            </summary>
        </member>
        <member name="M:KdCore.KdTestDataHelper.GetPersonName(System.String,System.String,System.String)">
            <summary>
            随机生成姓名
            </summary>
            <param name="firstName"></param>
            <param name="secondName"></param>
            <param name="endName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdTestDataHelper.GetMaleName(System.String,System.String,System.String)">
            <summary>
            随机生成男性姓名
            </summary>
            <param name="firstName"></param>
            <param name="secondName"></param>
            <param name="endName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdTestDataHelper.GetFemaleName(System.String,System.String,System.String)">
            <summary>
            随机生成女性姓名
            </summary>
            <param name="firstName"></param>
            <param name="secondName"></param>
            <param name="endName"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdTestDataHelper.DictFuncPropertySetValue">
            <summary>
            属性生成测试数据的方法缓存
            </summary>
        </member>
        <member name="M:KdCore.KdTestDataHelper.GetFuncSetValue(System.Reflection.PropertyInfo)">
            <summary>
            获取指定属性的随机赋值处理方法
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdTestDataHelper.CreateFuncRandomString(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <summary>
            生成指定字符串属性的随机赋值处理方法
            </summary>
            <param name="property"></param>
            <param name="valueType"></param>
            <param name="isNullable"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdTestDataHelper.CreateFuncRandomBoolean(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <summary>
            生成指定布尔类型属性的随机赋值处理方法
            </summary>
            <param name="property"></param>
            <param name="valueType"></param>
            <param name="isNullable"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdTestDataHelper.CreateFuncRandomEnum(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <summary>
            生成指定字符串属性的随机赋值处理方法
            </summary>
            <param name="property"></param>
            <param name="valueType"></param>
            <param name="isNullable"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdTestDataHelper.CreateFuncRandomInteger(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <summary>
            生成指定整数类型属性的随机赋值处理方法
            </summary>
            <param name="property"></param>
            <param name="valueType"></param>
            <param name="isNullable"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdTestDataHelper.CreateFuncRandomFloat(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <summary>
            生成指定浮点数字类型属性的随机赋值处理方法
            </summary>
            <param name="property"></param>
            <param name="valueType"></param>
            <param name="isNullable"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdTestDataHelper.CreateFuncRandomDateTime(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <summary>
            生成指定日期时间属性的随机赋值处理方法
            </summary>
            <param name="property"></param>
            <param name="valueType"></param>
            <param name="isNullable"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdTestDataHelper.CreateFuncRandomTimeSpan(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <summary>
            生成指定 TimeSpan 类型属性的随机赋值处理方法
            </summary>
            <param name="property"></param>
            <param name="valueType"></param>
            <param name="isNullable"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdTestDataHelper.RandomEntity``1(System.Int32)">
            <summary>
            生成一个实体类型的测试样例
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdTestDataHelper.RandomEntityKd``1(System.Int32)">
            <summary>
            生成一个实体类型的测试样例
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.BbCaptchaCode">
            <summary>
            验证码操作工具类
            </summary>
        </member>
        <member name="P:KdCore.BbCaptchaCode.InnerVerifyCode.CodeChars">
            <summary>
            验证码可以显示的字符集合
            </summary>
        </member>
        <member name="P:KdCore.BbCaptchaCode.InnerVerifyCode.CodeFonts">
            <summary>
            获取或设置验证码使用字体范围
            </summary>
        </member>
        <member name="P:KdCore.BbCaptchaCode.InnerVerifyCode.ForeColors">
            <summary>
            获取或设置验证码前景颜色范围
            </summary>
        </member>
        <member name="P:KdCore.BbCaptchaCode.InnerVerifyCode.BackColors">
            <summary>
            获取或设置验证码背景颜色范围
            </summary>
        </member>
        <member name="P:KdCore.BbCaptchaCode.InnerVerifyCode.DisturbColors">
            <summary>
            获取或设置验证码干扰颜色范围
            </summary>
        </member>
        <member name="P:KdCore.BbCaptchaCode.InnerVerifyCode.DisturbLines">
            <summary>
            获取或设置验证码干扰线的绘制数量
            </summary>
        </member>
        <member name="P:KdCore.BbCaptchaCode.InnerVerifyCode.DisturbDots">
            <summary>
            获取或设置验证码干扰点的绘制数量
            </summary>
        </member>
        <member name="M:KdCore.BbCaptchaCode.InnerVerifyCode.CodeRandom(System.Int32,System.Char[])">
            <summary>
            该方法用于生成指定位数的随机数
            </summary>
            <param name="codeLength">参数是随机数的位数</param>
            <param name="codeChars">随机字符串的取值范围，可重复字符以增加出现几率</param>
            <returns>返回一个随机数字符串</returns>
        </member>
        <member name="M:KdCore.BbCaptchaCode.SetCodeChars(System.Char[])">
            <summary>
            设置图片验证码使用的字符取值范围
            </summary>
            <param name="codeChars"></param>
        </member>
        <member name="M:KdCore.BbCaptchaCode.SetCodeFonts(System.String[])">
            <summary>
            设置图片验证码使用的字体取值范围
            </summary>
            <param name="codeFonts"></param>
        </member>
        <member name="M:KdCore.BbCaptchaCode.SetForeColors(System.Drawing.Color[])">
            <summary>
            设置图片验证码使用的文字颜色取值范围
            </summary>
            <param name="foreColors"></param>
        </member>
        <member name="M:KdCore.BbCaptchaCode.SetBackColors(System.Drawing.Color[])">
            <summary>
            设置图片验证码使用的背景颜色取值范围
            </summary>
            <param name="backColors"></param>
        </member>
        <member name="M:KdCore.BbCaptchaCode.SetDisturbColors(System.Drawing.Color[])">
            <summary>
            设置图片验证码使用的干扰颜色取值范围，如未设置则使用文字颜色取值范围
            </summary>
            <param name="disturbColors"></param>
        </member>
        <member name="M:KdCore.BbCaptchaCode.SetDisturbLines(System.Int32)">
            <summary>
            设置图片验证码使用的干扰线条绘制数量
            </summary>
            <param name="disturbLines"></param>
        </member>
        <member name="M:KdCore.BbCaptchaCode.SetDisturbDots(System.Int32)">
            <summary>
            设置图片验证码使用的干扰点绘制数量
            </summary>
            <param name="disturbDots"></param>
        </member>
        <member name="M:KdCore.BbCaptchaCode.SetImageBorder(System.Int32)">
            <summary>
            设置图片验证码使用的边框宽度
            </summary>
            <param name="disturbDots"></param>
        </member>
        <member name="M:KdCore.BbCaptchaCode.SetImagePadding(System.Int32)">
            <summary>
            设置图片验证码使用的四周留白宽度
            </summary>
            <param name="disturbDots"></param>
        </member>
        <member name="M:KdCore.BbCaptchaCode.CodeRandomChars(System.Int32,System.Char[])">
            <summary>
            获取一个随机生成的验证码字符数组
            </summary>
            <param name="codeLength"></param>
            <param name="codeChars"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbCaptchaCode.CodeRandom(System.Int32,System.Char[])">
            <summary>
            获取一个随机生成的验证码字符串
            </summary>
            <param name="codeLength"></param>
            <param name="codeChars"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbCaptchaCode.CreateImage(System.Char[],System.Int32,System.Int32)">
            <summary>
            获取一个绘制了验证码的图形对象
            </summary>
            <param name="code"></param>
            <param name="imgWidth"></param>
            <param name="imgHeight"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.BbCaptchaCode.CreateImage(System.String,System.Int32,System.Int32)">
            <summary>
            获取一个绘制了验证码的图形对象
            </summary>
            <param name="code"></param>
            <param name="imgWidth"></param>
            <param name="imgHeight"></param>
            <returns></returns>
        </member>
        <member name="T:System.Data.BbDatabase">
            <summary>
            DataBase内置通用操作类扩展
            </summary>
        </member>
        <member name="P:System.Data.BbDatabase.DbDefault">
            <summary>
            当前系统的默认数据库的连接字符串配置
            </summary>
        </member>
        <member name="P:System.Data.BbDatabase.DbLogs">
            <summary>
            当前系统的日志数据库的连接字符串配置
            </summary>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbConnectionSettings(System.Boolean,System.String)">
            <summary>
            获取当前配置的数据库连接配置
            </summary>
            <returns>当前的数据库连接配置</returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbLogsSettings(System.String)">
            <summary>
            获取当前配置的数据库连接配置
            </summary>
            <returns>当前的数据库连接配置</returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbDefaultName">
            <summary>
            获取默认数据库配置的名称
            </summary>
            <returns>数据库配置的名称</returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbLogsName">
            <summary>
            获取日志数据库配置的名称
            </summary>
            <returns>数据库配置的名称</returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbDefaultSettings``1">
            <summary>
            获取默认数据库连接字符串配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbDefaultName``1">
            <summary>
            获取默认数据库连接配置名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.EnsureDbName(System.String,System.Boolean)">
            <summary>
            获取数据库连接配置名称
            </summary>
            <returns>当前配置的数据库连接字符串</returns>
        </member>
        <member name="P:System.Data.BbDatabase.DbContexts">
            <summary>
            DbContext 与 DbNameOrConnectionString 对应关系的缓存字典
            </summary>
        </member>
        <member name="M:System.Data.BbDatabase.SetDbNameOrConnectionString``1(System.Func{System.String})">
            <summary>
            设置数据模型的数据库连接获取方法
            </summary>
            <typeparam name="TDbContext">数据模型的类型参数</typeparam>
            <param name="funcGetDbNameOrConnectionString">获取数据库连接名称或连接字符串的方法</param>  
        </member>
        <member name="M:System.Data.BbDatabase.SetDbNameOrConnectionString``1(System.String)">
            <summary>
            设置数据模型的数据库连接获取方法
            </summary>
            <typeparam name="TDbContext">数据模型的类型参数</typeparam>
            <param name="dbNameOrConnectionString">获取数据库连接名称或连接字符串的方法</param>  
        </member>
        <member name="M:System.Data.BbDatabase.GetDbNameOrConnectionString``1(System.String,System.Boolean)">
            <summary>
            获取数据模型的数据库连接获取方法
            </summary>
            <typeparam name="TDbContext">数据模型的类型参数</typeparam>
            <param name="dbNameOrConnectionString">获取数据库连接名称或连接字符串的方法</param>  
            <param name="isNullUseDbDefault">是否自动根据 DbContext 的类名进行计算</param>
            <returns>获取数据库连接名称或连接字符串的方法</returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbNameOrConnectionString``1(System.Boolean)">
            <summary>
            获取数据模型的数据库连接获取方法
            </summary>
            <typeparam name="TDbContext">数据模型的类型参数</typeparam>
            <param name="isNullUseDbDefault">是否自动根据 DbContext 的类名进行计算</param>
            <returns>获取数据库连接名称或连接字符串的方法</returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetProviderNamesInConfig(System.Boolean)">
            <summary>
            获取当前数据库连接配置中的提供程序名称
            </summary>
            <param name="onlyPresent">是否仅获取当前配置文件中配置的数据库连接设置，因 .Net 根配置文件中会初始化一些默认连接，如 LocalDB</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbProviderInvariantName(System.Data.Common.DbConnection)">
            <summary>
            检索基于指定 DbConnection 的 DbProviderFactory 的 InvariantName (可以以编程方式用于引用数据提供程序的名称)
            注意：通过遍历获取，但遍历的范围较小，速度稍慢一点点
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbProviderInvariantName(System.Data.Common.DbProviderFactory)">
            <summary>
            获取 DbProviderFactory 的 InvariantName (可以以编程方式用于引用数据提供程序的名称)。
            注意：通过遍历获取，但遍历的范围较小，速度稍慢一点点
            </summary>
            <param name="factory"></param>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbProviderFactory(System.Data.Common.DbConnection)">
            <summary>
            检索基于指定 DbConnection 的 DbProviderFactory。
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbProviderServices(System.Data.Common.DbConnection)">
            <summary>
            检索基于指定 DbConnection 的 DbProviderServices。
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbVersionToken(System.Data.Common.DbConnection)">
            <summary>
            检索基于指定 DbConnection 的数据库版本信息。
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbManifest(System.Data.Common.DbConnection)">
            <summary>
            检索基于指定 DbConnection 的数据库提供程序清单。
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.GetDbManifestName(System.Data.Common.DbConnection)">
            <summary>
            检索基于指定 DbConnection 的数据库标识名称。
            </summary>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.CreateConnection(System.String,System.String,System.Boolean)">
            <summary>
            创建一个 DbConnection
            </summary>
            <param name="providerInvariantName">提供程序的固定名称</param>
            <param name="connectionString">用来建立初始连接的连接字符串</param>
            <param name="openConnection">是否直接打开数据库连接</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.CreateConnection(System.Configuration.ConnectionStringSettings,System.Boolean)">
            <summary>
            创建一个 DbConnection
            </summary>
            <param name="settings">配置文件节中连接字符串配置</param>
            <param name="openConnection">是否直接打开数据库连接</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.CreateConnection(System.String,System.Boolean)">
            <summary>
            创建一个 DbConnection
            </summary>
            <param name="connectionConfigName">配置文件节中连接字符串配置的连接字符串名称</param>
            <param name="openConnection">是否直接打开数据库连接</param>
            <returns></returns>
        </member>
        <member name="M:System.Data.BbDatabase.SplitSQL(System.String,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            分离查询语句成select、where、group by、order by四部分
            </summary>
            <param name="queryLanguage">查询语句</param>
            <param name="selectQL">获取分离之后的select子句</param>
            <param name="whereQL">获取分离之后的where子句</param>
            <param name="groupByQL">获取分离之后的group by子句</param>
            <param name="orderByQL">获取分离之后的order by子句</param>
        </member>
        <member name="M:System.Data.BbDatabase.CombineSQL(System.String,System.Object,System.Object[])">
            <summary>
            合并查询语句
            </summary>
            <param name="queryLanguage">原有的查询语句</param>
            <param name="newWhereQl">新的where子句</param>
            <param name="otherWhereQls">新的where子句</param>
        </member>
        <member name="M:System.Data.BbDatabase.ToSqlValue(System.Object)">
            <summary>
            根据值类型获取sql语句关于该值处理后的值，如整型、数字型直接返回该值，字符串、日期型等返回单引号包裹的值
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:System.Linq.IQueryableExtensions">
            <summary>
            数据查询比较常用处理工具
            </summary>
        </member>
        <member name="M:System.Linq.IQueryableExtensions.ToExpression``1(KdCore.Data.KdQueryField[])">
            <summary>
            将指定的查询参数转换为 Linq 表达式
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam> 
            <param name="queryFields">字段查询设置</param> 
            <returns>经过筛选后的数据源</returns> 
        </member>
        <member name="M:System.Linq.IQueryableExtensions.Where``1(System.Linq.IQueryable{``0},KdCore.Data.KdQueryField)">
            <summary>
            按指定的字段筛选条件进行查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="queryField">字段查询设置</param> 
            <returns>经过筛选后的数据源</returns> 
        </member>
        <member name="M:System.Linq.IQueryableExtensions.Where``1(System.Linq.IQueryable{``0},KdCore.Data.KdQueryField[])">
            <summary>
            按指定的字段筛选条件进行查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="queryFields">字段查询设置</param> 
            <returns>经过筛选后的数据源</returns> 
        </member>
        <member name="M:System.Linq.IQueryableExtensions.OrderBy``1(System.Linq.IQueryable{``0},KdCore.Data.KdSortField)">
            <summary>
            根据参数字段对数据源进行排序
            </summary>
            <typeparam name="T">数据源中数据的类型</typeparam>
            <param name="source">数据源，如果是已排序的数据源，原有排序将被覆盖</param>
            <param name="sortField">排序的设置</param> 
            <returns>排序后的有序数据源</returns>
        </member>
        <member name="M:System.Linq.IQueryableExtensions.ThenBy``1(System.Linq.IOrderedQueryable{``0},KdCore.Data.KdSortField)">
            <summary>
            根据参数字段对已排序的数据源进行后续排序
            </summary>
            <typeparam name="T">数据源中数据的类型</typeparam>
            <param name="source">已排序的数据源，在原有排序基础上继续排序</param>
            <param name="sortField">排序的设置</param> 
            <returns>排序后的有序数据源</returns>
        </member>
        <member name="M:System.Linq.IQueryableExtensions.OrderBy``1(System.Linq.IQueryable{``0},KdCore.Data.KdSortField[])">
            <summary>
            根据参数字段对数据源进行多重排序
            </summary>
            <typeparam name="T">数据源中数据的类型</typeparam>
            <param name="source">数据源，如果是已排序的数据源，原有排序将被覆盖</param>
            <param name="sortFields">排序的设置</param> 
            <returns>排序后的有序数据源</returns>
        </member>
        <member name="M:System.Linq.IQueryableExtensions.ThenBy``1(System.Linq.IOrderedQueryable{``0},KdCore.Data.KdSortField[])">
            <summary>
            根据参数字段对数据源进行多重排序
            </summary>
            <typeparam name="T">数据源中数据的类型</typeparam>
            <param name="source">数据源，如果是已排序的数据源，原有排序将被覆盖</param>
            <param name="sortFields">排序的设置</param> 
            <returns>排序后的有序数据源</returns>
        </member>
        <member name="M:System.Linq.IQueryableExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},KdCore.Data.KdSortField[])">
            <summary>
            根据参数字段对数据源进行多重排序
            </summary>
            <typeparam name="T">数据源中数据的类型</typeparam>
            <param name="source">数据源，如果是已排序的数据源，原有排序将被覆盖</param>
            <param name="sortFields">排序的设置</param> 
            <returns>排序后的有序数据源</returns>
        </member>
        <member name="T:System.Linq.KdUtilLinq">
            <summary>
            IQueryable等扩展
            </summary>
        </member>
        <member name="M:System.Linq.KdUtilLinq.GetMember``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            从实体的字段或属性表达式中获取成员元数据访问
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.GetMemberName``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            从实体的字段或属性表达式中获取成员名称
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.GetCompareMode(System.String)">
            <summary>
            从字符串转换到比较方式枚举
            </summary>
            <param name="mode">字符串格式的比较方式</param>
            <returns>枚举格式的比较方式</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Constant(System.Object,System.Type)">
            <summary>
            生成常量表达式
            </summary>
            <param name="value">常量的值</param>
            <param name="type">常量的类型</param>
            <returns>常量表达式</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Constant``1(``0)">
            <summary>
            生成常量表达式
            </summary>
            <typeparam name="T">常量的类型参数</typeparam>
            <param name="value">常量的值</param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.DynamicToList(System.Type,System.Object,System.Object[])">
            <summary>
            动态构建泛型集合
            </summary>
            <param name="tEntity">泛型集合的类型参数</param>
            <param name="item">添加到泛型集合的对象</param>
            <param name="items">添加到泛型集合的更多对象</param>
            <returns>List&lt;TEntity&gt;实例</returns>
            <example>
            <code>
            object objList=LinqQueryable.DynamicToList(typeof(string),(object)"a",(object)"b",(object)"c");
            List&lt;string&gt; list=objList as List&lt;string&gt;;
            </code>
            </example>
        </member>
        <member name="M:System.Linq.KdUtilLinq.ContainsOrEqual``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1[])">
            <summary>
            根据指定比较参数的个数来自动选择使用 Equal 或 In 的比较表达式
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="propertyExpression"></param>
            <param name="values"></param>
            <returns></returns> 
        </member>
        <member name="M:System.Linq.KdUtilLinq.ContainsOrEqual``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},``1[])">
            <summary>
            根据指定比较参数的个数来自动选择使用 Equal 或 In 的方式进行字段筛选条件查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyExpression">要查询的字段表达式</param>
            <param name="values">Equal、In等方式查询比较的值</param>
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Where``1(System.Linq.IQueryable{``0},System.String,System.Object,System.BbCompareMode,System.Object[])">
            <summary>
            按指定的字段筛选条件进行查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyName">要查询的字段名称</param>
            <param name="mode">数据查询比较方式</param>
            <param name="value">查询比较的值</param>
            <param name="values">Between、In等方式查询比较的其他值</param>
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Where``1(System.Linq.IQueryable{``0},System.String,System.Object,System.String,System.Object[])">
            <summary>
            按指定的字段筛选条件进行查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyName">要查询的字段名称</param>
            <param name="compareMode">数据查询比较方式</param>
            <param name="value">查询比较的值</param>
            <param name="values">Between、In等方式查询比较的其他值</param>
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Like``1(System.Linq.IQueryable{``0},System.String,System.String,System.Boolean)">
            <summary>
            按指定的字段进行 Like、NotLike 查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyName">要查询的字段名称</param>
            <param name="value">查询比较的值</param> 
            <param name="isNot">是否是 NotLike 查询</param>
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Equal``1(System.Linq.IQueryable{``0},System.String,System.Object,System.Boolean)">
            <summary>
            按指定的字段进行 Equal、NotEqual 查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyName">要查询的字段名称</param>
            <param name="value">查询比较的值</param> 
            <param name="isNot">是否是 NotEqual 查询</param>
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.LessThan``1(System.Linq.IQueryable{``0},System.String,System.Object,System.Boolean)">
            <summary>
            按指定的字段进行 LessThan、NotLessThan 查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyName">要查询的字段名称</param>
            <param name="value">查询比较的值</param>  
            <param name="isNot">是否是 NotLessThan 查询</param>
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.GreaterThan``1(System.Linq.IQueryable{``0},System.String,System.Object,System.Boolean)">
            <summary>
            按指定的字段进行 GreaterThan、NotGreaterThan 查询
            </summary>
            <typeparam name="T">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyName">要查询的字段名称</param>
            <param name="value">查询比较的值</param>  
            <param name="isNot">是否是 NotGreaterThan 查询</param>
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.StartsWith``1(System.Linq.IQueryable{``0},System.String,System.String)">
            <summary>
            按指定的字段进行 StartsWith 查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyName">要查询的字段名称</param>
            <param name="value">查询比较的值</param>   
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.EndsWith``1(System.Linq.IQueryable{``0},System.String,System.String)">
            <summary>
            按指定的字段进行 EndsWith 查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyName">要查询的字段名称</param>
            <param name="value">查询比较的值</param>   
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Between``1(System.Linq.IQueryable{``0},System.String,System.Object,System.Object,System.Boolean)">
            <summary>
            按指定的字段进行 Between、NotBetween 查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyName">要查询的字段名称</param>
            <param name="start">查询比较范围的开始值</param>  
            <param name="end">查询比较范围的结束值</param>  
            <param name="isNot">是否是 NotBetween 查询</param>
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.In``1(System.Linq.IQueryable{``0},System.String,System.Object,System.Object[])">
            <summary>
            按指定的字段进行 In 查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyName">要查询的字段名称</param>
            <param name="value">查询比较的一个值</param>  
            <param name="values">查询比较的其他值</param>  
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.NotIn``1(System.Linq.IQueryable{``0},System.String,System.Object,System.Object[])">
            <summary>
            按指定的字段进行 NotIn 查询
            </summary>
            <typeparam name="TEntity">数据源中包含的类型</typeparam>
            <param name="queryable">待筛选的数据源</param>
            <param name="propertyName">要查询的字段名称</param>
            <param name="value">查询比较的一个值</param>  
            <param name="values">查询比较的其他值</param>  
            <returns>经过筛选后的数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.OrderBy``1(System.Linq.IQueryable{``0},System.String,System.Boolean,System.Boolean)">
            <summary>
            字符串参数排序的统一封装 
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="source"></param>
            <param name="field"></param>
            <param name="ascending"></param>
            <param name="thenBy"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.OrderBy``1(System.Linq.IQueryable{``0},System.String,System.Boolean)">
            <summary>
            根据参数字段对数据源进行排序
            </summary>
            <typeparam name="T">数据源中数据的类型</typeparam>
            <param name="source">数据源，如果是已排序的数据源，原有排序将被覆盖</param>
            <param name="field">排序的字段</param>
            <param name="ascending">是否升序，默认降序</param>
            <returns>排序后的有序数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.ThenBy``1(System.Linq.IOrderedQueryable{``0},System.String,System.Boolean)">
            <summary>
            根据参数字段对已排序的数据源进行后续排序
            </summary>
            <typeparam name="T">数据源中数据的类型</typeparam>
            <param name="source">已排序的数据源，在原有排序基础上继续排序</param>
            <param name="field">排序的字段</param>
            <param name="ascending">是否升序，默认降序</param>
            <returns>排序后的有序数据源</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.AnyOne``1(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>
            扩展多条件组合查询
            </summary>
            <typeparam name="TEntity"></typeparam> 
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.EveryOne``1(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}})">
            <summary>
            扩展多条件组合查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.AnyOne``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            扩展多条件组合查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.EveryOne``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            扩展多条件组合查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            扩展多条件组合查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            扩展多条件组合查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="predicate"></param>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            扩展多条件组合查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="predicate"></param>
            <param name="predicate2"></param>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.First``1(System.Collections.Generic.IEnumerable{``0},System.Boolean,System.Func{``0,System.Boolean})">
            <summary>
            返回序列中满足指定条件的第一个元素，或者不存在时创建一个新实例。
            </summary>
            <typeparam name="TSource">source 中的元素的类型。</typeparam>
            <param name="source">要从中返回元素的 <see cref="T:System.Collections.Generic.IEnumerable`1"/>。</param>
            <param name="createNew">在序列中不符合条件的元素时，是否创建一个新实例返回</param>
            <param name="predicate">用于测试每个元素是否满足条件的函数。</param>
            <returns>序列中通过指定谓词函数中的测试的第一个元素，或者不存在时创建的一个新实例。</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.First``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            返回序列中的第一个元素，或者不存在时创建一个新实例。
            </summary>
            <typeparam name="TSource"> source 中的元素的类型。</typeparam>
            <param name="source">要从中返回元素的 <see cref="T:System.Collections.Generic.IEnumerable`1"/>。</param>
            <param name="createNew">在序列中没有任何元素时，是否创建一个新实例返回</param>
            <returns>序列中的第一个元素，或者不存在时创建的一个新实例。</returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Exists``1(System.Linq.IQueryable{``0},System.Func{``0,System.Int32})">
            <summary>
            查看序列中的第一个元素的指定 int 类型字段，如果返回值等于0，则视为不存在。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Exists``1(System.Linq.IQueryable{``0},System.Func{``0,System.Nullable{System.Int32}})">
            <summary>
            查看序列中的第一个元素的指定 int? 类型字段，如果返回值为 null，则视为不存在。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Exists``1(System.Linq.IQueryable{``0},System.Func{``0,System.String})">
            <summary>
            查看序列中的第一个元素的指定 string 类型字段，如果返回值为 null，则视为不存在。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="selector"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.KdUtilLinq.Exists``1(System.Linq.IQueryable{``0})">
            <summary>
            查看序列中的第一个元素的主键Id，如果返回值为 null，则视为不存在。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <returns></returns>
        </member>
        <member name="T:System.Linq.Expressions.ParameterExpressionVisitor">
            <summary>
            参数表达式访问者
            </summary>
        </member>
        <member name="M:System.Linq.Expressions.ParameterExpressionVisitor.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:System.Linq.Expressions.ParameterExpressionVisitor.#ctor(System.Linq.Expressions.ParameterExpression)">
            <summary>
            构造方法
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="P:System.Linq.Expressions.ParameterExpressionVisitor.Parameter">
            <summary>
            修改后的参数表达式
            </summary>
        </member>
        <member name="M:System.Linq.Expressions.ParameterExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            访问参数表达式
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:System.Linq.Expressions.BbLinqProperty">
            <summary>
            Linq表达式扩展
            </summary>
        </member>
        <member name="F:System.Linq.Expressions.BbLinqProperty.thisLock">
            <summary>
            锁定对象
            </summary>
        </member>
        <member name="F:System.Linq.Expressions.BbLinqProperty._cacheLambdas">
            <summary>
            Lambda表达式缓存管理实例
            </summary>
        </member>
        <member name="P:System.Linq.Expressions.BbLinqProperty.CacheLambdas">
            <summary>
            Lambda表达式缓存管理
            </summary>
        </member>
        <member name="F:System.Linq.Expressions.BbLinqProperty._cacheDelegates">
            <summary>
            Delegate缓存管理实例
            </summary>
        </member>
        <member name="P:System.Linq.Expressions.BbLinqProperty.CacheDelegates">
            <summary>
            Delegate缓存管理
            </summary>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.GetLinqCacheKey(System.Type,System.String)">
            <summary>
            生成缓存的键
            </summary>
            <param name="entityType">缓存Linq相关的实体类型</param>
            <param name="propertyName">缓存Linq相关的属性名称</param>
            <returns>缓存的键</returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.GetLinqCacheKey``1(System.String)">
            <summary>
            生成缓存的键
            </summary>
            <typeparam name="TEntity">缓存Linq相关的实体类型</typeparam>
            <param name="propertyName">缓存Linq相关的属性名称</param>
            <returns>缓存的键</returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.CacheLambdaProperty(System.Type,System.String)">
            <summary>
            创建一个表示访问属性的 LambdaExpression。
            如果是引用类型则递归查找最终的属性
            </summary>
            <param name="entityType">声明了要访问属性的对象的类型</param>
            <param name="propertyName">要访问的属性的名称。 </param> 
            <returns>LambdaExpression</returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.CacheLambdaProperty``1(System.String)">
            <summary>
            创建一个表示访问属性的 LambdaExpression。
            如果是引用类型则递归查找最终的属性
            </summary>
            <typeparam name="TEntity">声明了要访问属性的对象的类型</typeparam>
            <param name="propertyName">要访问的属性的名称。 </param> 
            <returns>LambdaExpression</returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.CacheFuncProperty(System.Type,System.String)">
            <summary>
            创建一个访问属性的方法
            如果是引用类型则递归查找最终的属性
            </summary>
            <param name="entityType">声明了要访问属性的对象的类型</param>
            <param name="propertyName">要访问的属性的名称。 </param> 
            <returns>Func&lt;TEntity,TProperty&gt;</returns> 
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.CacheFuncProperty``1(System.String)">
            <summary>
            创建一个访问属性的方法
            如果是引用类型则递归查找最终的属性
            </summary>
            <typeparam name="TEntity">声明了要访问属性的对象的类型</typeparam>
            <param name="propertyName">要访问的属性的名称。 </param> 
            <returns>Func&lt;TEntity,TProperty&gt;</returns> 
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.GetLambdaProperty(System.Type,System.String)">
            <summary>
            创建一个表示访问属性的 LambdaExpression。
            如果是引用类型则递归查找最终的属性
            </summary>
            <param name="entityType">声明了要访问属性的对象的类型</param>
            <param name="propertyName">要访问的属性的名称。 </param> 
            <returns>LambdaExpression</returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.GetLambdaProperty``1(System.String)">
            <summary>
            创建一个表示访问属性的 LambdaExpression。
            如果是引用类型则递归查找最终的属性
            </summary>
            <typeparam name="TEntity">声明了要访问属性的对象的类型</typeparam>
            <param name="propertyName">要访问的属性的名称。 </param> 
            <returns>LambdaExpression</returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.GetPropertyAccessor(System.Type,System.String)">
            <summary>
            创建一个访问属性的 Expression。
            如果是引用类型则递归查找最终的属性
            </summary>
            <param name="entityType">声明了要访问属性的对象的类型</param>
            <param name="propertyName">要访问的属性的名称。 </param> 
            <returns>Expression</returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.GetPropertyAccessor``1(System.String)">
            <summary>
            创建一个访问属性的 Expression。
            如果是引用类型则递归查找最终的属性
            </summary>
            <typeparam name="TEntity">声明了要访问属性的对象的类型</typeparam>
            <param name="propertyName">要访问的属性的名称。 </param> 
            <returns>Expression</returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.GetFuncProperty(System.Type,System.String)">
            <summary>
            创建一个访问属性的方法
            如果是引用类型则递归查找最终的属性
            </summary>
            <param name="entityType">声明了要访问属性的对象的类型</param>
            <param name="propertyName">要访问的属性的名称。 </param> 
            <returns>Func&lt;TEntity,TProperty&gt;</returns>
            <example>
            <code>
            Delegate del = GetFuncProperty(typeEntity,"Name");
            string name=del.DynamicInvoke(entity) as string;
            </code>
            </example>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.GetFuncProperty``1(System.String)">
            <summary>
            创建一个访问属性的方法
            如果是引用类型则递归查找最终的属性
            </summary>
            <typeparam name="TEntity">声明了要访问属性的对象的类型</typeparam>
            <param name="propertyName">要访问的属性的名称。 </param> 
            <returns>Func&lt;TEntity,TProperty&gt;</returns>
            <example>
            <code>
            Delegate del = GetFuncProperty&lt;TEntity&gt;("Name");
            string name=del.DynamicInvoke(entity) as string;
            </code>
            </example>
        </member>
        <member name="F:System.Linq.Expressions.BbLinqProperty._dictDynamicToList">
            <summary>
            存储构建动态集合的委托方法缓存
            </summary>
        </member>
        <member name="P:System.Linq.Expressions.BbLinqProperty.DictDynamicToList">
            <summary>
            构建动态集合的委托方法缓存
            </summary>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.Compare``1(System.String,System.Object,System.BbCompareMode,System.Object[])">
            <summary>
            获取指定比较方式的Lambda表达式
            </summary>
            <param name="propertyName">需要比较属性的名称</param>
            <param name="value">与其比较的值</param>
            <param name="mode">比较方式</param>
            <param name="values">与其比较的其他值</param>
            <returns>Lambda表达式</returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.Compare``1(System.String,System.Object,System.String,System.Object[])">
            <summary>
            获取指定比较方式的Lambda表达式
            </summary>
            <param name="propertyName">需要比较属性的名称</param>
            <param name="value">与其比较的值</param>
            <param name="mode">比较方式</param>
            <param name="values">与其比较的其他值</param>
            <returns>Lambda表达式</returns>
        </member>
        <member name="T:System.Linq.Expressions.BbLinqProperty.ParameterRebinder">
            <summary>
            重新绑定参数表达式？？
            </summary>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.ParameterRebinder.#ctor(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression})">
            <summary>
            构造方法
            </summary>
            <param name="map"></param>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.ParameterRebinder.ReplaceParameters(System.Collections.Generic.Dictionary{System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression)">
            <summary>
            替换参数表达式？？
            </summary>
            <param name="map"></param>
            <param name="exp"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.ParameterRebinder.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            访问参数表达式？？
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.Compose``1(System.Linq.Expressions.Expression{``0},System.Linq.Expressions.Expression{``0},System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
            对两个表达式进行组合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="first">表达式一</param>
            <param name="second">表达式二</param>
            <param name="merge">组合方法</param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            对两个表达式进行 AND 组合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="first">表达式一</param>
            <param name="second">表达式二</param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Expressions.BbLinqProperty.Or``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            对两个表达式进行 OR 组合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="first">表达式一</param>
            <param name="second">表达式二</param>
            <returns></returns>
        </member>
        <member name="T:System.Web.BbHttpContextExtensions">
            <summary>
             提供HTTP 请求相关信息的扩展方法
            </summary>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetUnvalidated(System.Web.HttpRequest,System.String)">
            <summary>
            在不触发请求验证的情况下获取当前的请求参数
            </summary>
            <param name="request"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetUnvalidated(System.Web.HttpRequestBase,System.String)">
            <summary>
            在不触发请求验证的情况下获取当前的请求参数
            </summary>
            <param name="request"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetHttpGetOrHttpPost(System.Web.HttpRequest,System.String)">
            <summary>
            在不触发请求验证的情况下获取当前的请求参数
            </summary>
            <param name="request"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetHttpGetOrHttpPost(System.Web.HttpRequestBase,System.String)">
            <summary>
            在不触发请求验证的情况下获取当前的请求参数
            </summary>
            <param name="request"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetSessionData``1(System.Web.SessionState.HttpSessionState,System.String,System.Func{System.Web.SessionState.HttpSessionState,``0})">
            <summary>
            获取当前 HTTP 请求的 HttpSessionState 中存储的变量数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="key"></param>
            <param name="initFunc"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetSessionData``1(System.Web.SessionState.HttpSessionState,System.Func{System.Web.SessionState.HttpSessionState,``0})">
            <summary>
            获取当前 HTTP 请求的 HttpSessionState 中存储的变量数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="initFunc"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetSessionData``1(System.Web.HttpSessionStateBase,System.String,System.Func{System.Web.HttpSessionStateBase,``0})">
            <summary>
            获取当前 HTTP 请求的 HttpSessionStateBase 中存储的变量数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="key"></param>
            <param name="initFunc"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetSessionData``1(System.Web.HttpSessionStateBase,System.Func{System.Web.HttpSessionStateBase,``0})">
            <summary>
            获取当前 HTTP 请求的 HttpSessionStateBase 中存储的变量数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="session"></param>
            <param name="initFunc"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.SetCookieValue(System.Web.HttpContext,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            设置CookieValue中的值
            </summary>
            <param name="context">当前上下文</param>
            <param name="key">Cookie 保存的键</param>
            <param name="value">Cookie 保存的值</param> 
            <param name="expires">Cookie 过期时间</param>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetCookieValue(System.Web.HttpContext,System.String)">
            <summary>
            获取CookieValue中的值
            </summary>
            <param name="context">当前上下文</param>
            <param name="key"> Cookie 保存的键</param>
            <returns>Cookie 保存的值</returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.RemoveCookieValue(System.Web.HttpContext,System.String)">
            <summary>
            移除Cookie中的值
            </summary>
            <param name="context">当前上下文</param>
            <param name="key"> Cookie 保存的键</param>
            <returns>Cookie 保存的值</returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.HasParam(System.Web.HttpRequest,System.String)">
            <summary>
            获取当前请求是否包含参数
            </summary>
            <param name="request">当前 HttpRequest 请求</param>
            <param name="param">参数</param>
            <returns>提交的参数值</returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetParam(System.Web.HttpRequest,System.String,System.String)">
            <summary>
            根据参数查询字符串变量集合
            </summary>
            <param name="request">当前 HttpRequest 请求</param>
            <param name="param">参数</param>
            <param name="defaultValue">参数的默认值</param>
            <returns>提交的参数值</returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.HasParam(System.Web.HttpRequestBase,System.String)">
            <summary>
            获取当前请求是否包含参数
            </summary>
            <param name="request">当前 HttpRequest 请求</param>
            <param name="param">参数</param>
            <returns>提交的参数值</returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetParam(System.Web.HttpRequestBase,System.String,System.String)">
            <summary>
            根据参数查询字符串变量集合
            </summary>
            <param name="request">当前 HttpRequest 请求</param>
            <param name="param">参数</param>
            <param name="defaultValue">参数的默认值</param>
            <returns>提交的参数值</returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetWorkerRequest(System.Web.HttpContext)">
            <summary>
            获取用于处理请求的基本辅助方法和枚举的抽象类实例
            </summary>
            <param name="context">当前请求上下文</param>
            <returns>抽象类实例</returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.CheckHttpContextError(System.Web.HttpContext)">
            <summary>
            检查当前上下文及Session获取时是否存在异常
            </summary>
            <param name="context">当前的Http请求上下文</param>
            <returns>是否存在异常</returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.SaveHttpFile(System.Web.HttpContextBase,System.Web.HttpPostedFileBase,System.String,System.String)">
            <summary>
            保存上传文件到指定的虚拟路径
            </summary>
            <param name="context"></param>
            <param name="httpFile"></param>
            <param name="folderPath"></param>
            <param name="saveFileName"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.SaveHttpFile(System.Web.HttpContext,System.Web.HttpPostedFileBase,System.String,System.String)">
            <summary>
            保存上传文件到指定的虚拟路径
            </summary>
            <param name="httpContext"></param>
            <param name="httpFile"></param>
            <param name="folderPath"></param>
            <param name="saveFileName"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.DownloadFile(System.Web.HttpContextBase,System.String,System.String,System.Int64)">
            <summary>
            下载文件，支持大文件、续传、速度限制。支持续传的响应头Accept-Ranges、ETag，请求头Range
            </summary>
            <param name="httpContext">当前请求的HttpContext</param>
            <param name="fileVirtualPath">文件路径，包括文件名</param>
            <param name="downloadName">下载到客户端的默认文件名</param>
            <param name="speed">下载速度：每秒允许下载的字节数；默认8MB</param>
            <returns>true下载成功，false下载失败</returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.DownloadFile(System.Web.HttpContext,System.String,System.String,System.Int64)">
            <summary>
            下载文件，支持大文件、续传、速度限制。支持续传的响应头Accept-Ranges、ETag，请求头Range
            </summary>
            <param name="httpContext">当前请求的HttpContext</param>
            <param name="fileVirtualPath">文件路径，包括文件名</param>
            <param name="downloadName">下载到客户端的默认文件名</param>
            <param name="speed">下载速度：每秒允许下载的字节数；默认8MB</param>
            <returns>true下载成功，false下载失败</returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.DeleteFile(System.Web.HttpContext,System.String)">
            <summary>
            删除文件
            </summary>
            <param name="httpContext">当前请求的HttpContext</param>
            <param name="fileSavePath">文件路径，包括文件名</param> 
            <returns>true 删除成功，false 删除失败</returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.ClearFiles(System.Web.HttpContext,System.String,System.Int32,System.String)">
            <summary>
            清理过期的历史文件
            </summary>
            <param name="context">当前的客户端请求上下文</param>
            <param name="historyPath">历史目录路径</param>
            <param name="saveDays">保留多少天数之内的文件</param>
            <param name="searchPattern">需要清理文件的扩展名，如 txt 或 xls </param>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.GetCurrIpAddress(System.Web.HttpContext)">
            <summary>
            获取当前请求的IP地址
            </summary>
            <param name="context">当前的客户端请求上下文</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.Reload(System.Web.HttpRequest,System.Boolean)">
            <summary>
            重新加载当前页面，防止用户刷新当前页面重复提交
            可在按钮提交保存等操作之后调用执行
            endResponse设置为true时会引发 ThreadAbortException 异常。
            </summary>
            <param name="request">当前请求</param>
            <param name="endResponse">指定是否应终止当前进程的执行</param>
        </member>
        <member name="M:System.Web.BbHttpContextExtensions.Reload(System.Web.HttpRequest,System.String,System.Boolean)">
            <summary>
            重新加载当前页面，防止用户刷新当前页面重复提交
            可在按钮提交保存等操作之后调用执行
            endResponse设置为true时会引发 ThreadAbortException 异常。
            </summary>
            <param name="request">当前请求</param>
            <param name="alertMessage">跳转后弹出的提示信息</param>
            <param name="endResponse">指定是否应终止当前进程的执行</param>
        </member>
        <member name="T:System.BbCompareMode">
            <summary>
            查询比较模式枚举
            </summary>
        </member>
        <member name="F:System.BbCompareMode.None">
            <summary>
            未设置，默认字符串类型视为Like，数值日期类型视为Equal
            </summary>
        </member>
        <member name="F:System.BbCompareMode.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:System.BbCompareMode.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:System.BbCompareMode.LessThan">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:System.BbCompareMode.NotLessThan">
            <summary>
            不小于，即大于或等于
            </summary>
        </member>
        <member name="F:System.BbCompareMode.GreaterThan">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:System.BbCompareMode.NotGreaterThan">
            <summary>
            不大于，即小于或等于
            </summary>
        </member>
        <member name="F:System.BbCompareMode.Between">
            <summary>
            在…与…之间
            </summary>
        </member>
        <member name="F:System.BbCompareMode.NotBetween">
            <summary>
            不在…与…之间
            </summary>
        </member>
        <member name="F:System.BbCompareMode.Like">
            <summary>
            包含
            </summary>
        </member>
        <member name="F:System.BbCompareMode.NotLike">
            <summary>
            不包含
            </summary>
        </member>
        <member name="F:System.BbCompareMode.StartsWith">
            <summary>
            以…开头
            </summary>
        </member>
        <member name="F:System.BbCompareMode.EndsWith">
            <summary>
            以…结尾
            </summary>
        </member>
        <member name="F:System.BbCompareMode.In">
            <summary>
            在……之中
            </summary>
        </member>
        <member name="F:System.BbCompareMode.NotIn">
            <summary>
            不在……之中
            </summary>
        </member>
        <member name="F:System.BbCompareMode.HasItem">
            <summary>
            包含了可多选项中的一项
            </summary>
        </member>
        <member name="T:System.KdReflectionExtensions">
            <summary>
            快速反射接口扩展方法
            </summary>
        </member>
        <member name="M:System.KdReflectionExtensions.FastInvoke(System.Reflection.ConstructorInfo,System.Object[])">
            <summary>
            快速调用构造函数
            </summary>
            <param name="constructorInfo"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:System.KdReflectionExtensions.FastInvoke(System.Reflection.MethodInfo,System.Object,System.Object[])">
            <summary>
            快速调用方法
            </summary>
            <param name="methodInfo"></param>
            <param name="instance"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:System.KdReflectionExtensions.FastSetValue(System.Reflection.PropertyInfo,System.Object,System.Object)">
            <summary>
            快速设置属性的值
            </summary>
            <param name="propertyInfo"></param>
            <param name="instance"></param>
            <param name="value"></param>
        </member>
        <member name="M:System.KdReflectionExtensions.FastGetValue(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            快速获取属性的值
            </summary>
            <param name="propertyInfo"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:System.KdReflectionExtensions.FastGetValue(System.Reflection.FieldInfo,System.Object)">
            <summary>
            快速获取字段的值
            </summary>
            <param name="fieldInfo"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
    </members>
</doc>
