<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KdCore.Data</name>
    </assembly>
    <members>
        <member name="T:KdCore.Data.BbDataLevel">
            <summary>
            系统数据生效范围级别
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataLevel.Default">
            <summary>
            默认设置，不限级别或默认级别
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataLevel.Global">
            <summary>
            全局级别
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataLevel.Corp">
            <summary>
            公司级别
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataLevel.Dept">
            <summary>
            部门级别
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataLevel.User">
            <summary>
            用户级别
            </summary>
        </member>
        <member name="T:KdCore.Data.BbDataScope">
            <summary>
            系统用户的数据授权范围
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataScope.None">
            <summary>
            未设置权限
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataScope.Forbidden">
            <summary>
            禁止访问
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataScope.Default">
            <summary>
            默认权限，通常只有未能找到权限标识对应的模块操作的情况下才设置为此值
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataScope.ViewUser">
            <summary>
            查看授权用户范围数据的权限
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataScope.ViewDept">
            <summary>
            查看授权部门范围数据的权限
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataScope.ViewCorp">
            <summary>
            查看授权单位范围数据的权限
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataScope.ViewFull">
            <summary>
            查看所有数据的权限
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataScope.HandleUser">
            <summary>
            操作授权用户范围数据的权限
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataScope.HandleDept">
            <summary>
            操作授权部门范围数据的权限
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataScope.HandleCorp">
            <summary>
            操作授权单位范围数据的权限
            </summary>
        </member>
        <member name="F:KdCore.Data.BbDataScope.HandleFull">
            <summary>
            操作所有数据的权限
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.KdPickAcceptAttribute">
            <summary>
            选择数据后进行绑定赋值时，用来标识接受赋值的属性的标识特性
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickAcceptAttribute.PickType">
            <summary>
            获取或设置被选择的数据筛选类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickAcceptAttribute.PickSource">
            <summary>
            获取或设置被选择的数据来源类型。不需要输出到前端页面，仅用作生成界面时的数据识别
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdPickAcceptAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            构造方法
            </summary>
            <param name="pickType"></param>
            <param name="pickSource"></param>
            <param name="aliasName"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdPickAcceptAttribute.#ctor(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            构造方法
            </summary>
            <param name="pickType"></param>
            <param name="pickSource"></param>
            <param name="aliasName"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdPickAcceptAttribute.#ctor(System.String,System.Object,System.Object)">
            <summary>
            构造方法
            </summary>
            <param name="pickType"></param>
            <param name="pickSource"></param>
            <param name="aliasName"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdPickAcceptAttribute.AcceptDataPick(System.String,System.String)">
            <summary>
            标识的属性是否支持指定的选择类型
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.KdPickConfig">
            <summary>
            选择数据后进行绑定赋值时，用来标识接受赋值的属性的标识特性
            </summary> 
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.IsPause">
            <summary>
            是否暂停设置
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.SourceType">
            <summary>
            被选择的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.ModelType">
            <summary>
            选择编辑的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.PickSource">
            <summary>
            获取或设置被选择的数据来源类型。不需要输出到前端页面，仅用作生成界面时的数据识别
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.PickType">
            <summary>
            获取或设置被选择的数据筛选类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.PickField">
            <summary>
            获取或设置当前选择的标识字段
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.PickRange">
            <summary>
            获取或设置被选择的数据筛选范围
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.IsRequired">
            <summary>
            是否必须选择，设置为null时自动根据实体类型中的设置处理
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.BindValueName">
            <summary>
            获取或设置被选择的数据用于取值的字段名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.BindTextName">
            <summary>
            获取或设置被选择的数据用于显示的字段名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.MaxPickCount">
            <summary>
            最多选取项数，未设置时根据值字段长度自动计算，长度每满足 50 允许选择 1 项
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.UseAddMode">
            <summary>
            是否使用添加模式，未设置时按最多选取项数自动判断，只允许选择一项时禁用添加模式
            添加模式时，在每次选择时保留原有的选择结果，继续添加新选择的数据
            非添加模式时，每次选择确定后将清除原有已选择数据，只保留最后一次的选择结果
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.PickQueryId">
            <summary>
            获取或设置提交选择数据查询时的 QueryId 
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.QueryActionName">
            <summary>
            提交选择数据查询时弹出页面对应的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.QueryControllerName">
            <summary>
            提交选择数据查询时弹出页面对应的 ControllerName
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.QueryAreaName">
            <summary>
            提交选择数据查询时弹出页面对应的 AreaName
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.QueryRouteValues">
            <summary>
            提交选择数据查询时弹出页面其他的路由参数
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.ClientOnPickGetLoadUrl">
            <summary>
            提交选择数据查询时在客户端获取弹出页面 URL 链接时的处理方法（JavaScript）
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickConfig.ClientOnPickSelected">
            <summary>
            选择数据后在客户端额外的处理方法（JavaScript）
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.KdPickSupplyAttribute">
            <summary>
            作为在被选择数据时，用来标识提供选择的属性的标识特性
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickSupplyAttribute.PickTypes">
            <summary>
            获取或设置被选择的数据筛选类型
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdPickSupplyAttribute.#ctor(System.String[])">
            <summary>
            构造方法
            </summary>
            <param name="pickTypes"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdPickSupplyAttribute.#ctor(System.Int32,System.Int32[])">
            <summary>
            构造方法
            </summary>
            <param name="typeValue"></param>
            <param name="typeValues"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdPickSupplyAttribute.#ctor(System.Object,System.Object[])">
            <summary>
            构造方法
            </summary>
            <param name="typeValue"></param>
            <param name="typeValues"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdPickSupplyAttribute.SupplyDataPick(System.String)">
            <summary>
            标识的属性是否支持指定的选择类型
            </summary>
            <param name="pickType"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Entity.KdPickDataAttribute">
            <summary>
            类型属性的标识特性基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickDataAttribute.AliasName">
            <summary>
            获取或设置属性映射的字段别名
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickDataAttribute.Disable">
            <summary>
            获取或设置是否禁用，通常用于覆盖基类的设置
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdPickDataAttribute.Description">
            <summary>
            获取或设置该特性标注的备注说明
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.IKdEntityOwner">
            <summary>
            标识有归属单位、归属部门、归属用户属性的数据类型
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.IKdEntityOwnerDept">
            <summary>
            标识有归属部门属性的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityOwnerDept.OwnerDeptId">
            <summary>
            获取或设置所属部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityOwnerDept.OwnerDeptName">
            <summary>
            获取或设置所属部门名称
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.IKdEntityOwnerCorp">
            <summary>
            标识有归属单位属性的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityOwnerCorp.OwnerCorpCode">
            <summary>
            获取或设置所属单位编码标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityOwnerCorp.OwnerCorpName">
            <summary>
            获取或设置所属单位名称，通常保存的可能是简称，仅用来在数据库查询时方便识别是哪家单位的数据
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.IKdEntityTimeLamp">
            <summary>
            标识有单位、部门标识属性的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityTimeLamp.HandleStatus">
            <summary>
            获取或设置事项的当前办理状态
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityTimeLamp.TimeLamp">
            <summary>
            获取或设置事项的办理是否逾期
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityTimeLamp.LimitedTime">
            <summary>
            获取或设置事项的办理时限
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityTimeLamp.HandleTime">
            <summary>
            获取或设置事项的实际办理时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityTimeLamp.HandleContent">
            <summary>
            获取或设置事项的办理内容或办理结果
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.IKdEntityOwnerUser">
            <summary>
            标识有单位、部门标识属性的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityOwnerUser.OwnerUserId">
            <summary>
            获取或设置所属用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityOwnerUser.OwnerUserName">
            <summary>
            获取或设置所属用户名称
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.IKdEntityFollow">
            <summary>
            数据实体基本接口
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityFollow.IsFollowed">
            <summary>
            获取或设置当前用户是否已收藏当前数据的快捷方式
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityFollow.FollowedId">
            <summary>
            获取或设置当前用户收藏当前数据的快捷方式的主键ID
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.KdIndexAttribute">
            <summary>
            属性映射的字段上创建索引的标识属性
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdIndexAttribute.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdIndexAttribute.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdIndexAttribute.#ctor(System.String,System.Int32)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdIndexAttribute.Name">
            <summary>
            创建索引的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdIndexAttribute.Order">
            <summary>
            多个列创建组合索引时当前属性的排序顺序
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdIndexAttribute.IsClustered">
            <summary>
            是否聚焦索引
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdIndexAttribute.IsUnique">
            <summary>
            是否唯一索引
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdIndexAttribute.TypeId">
            <summary>
            获取该属性的唯一标识符。
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdIndexAttribute.ToString">
            <summary>
            重写 ToString() 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdIndexAttribute.DetailsToString">
            <summary>
            生成 JSON 格式的字符串描述。
            For example: "{ Name: 'Foo', Order: 1, IsClustered: True, IsUnique: False }"
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdIndexAttribute.Equals(KdCore.Data.Entity.KdIndexAttribute)">
            <summary>
            Returns true if this attribute specifies the same name and configuration as the given attribute.
            </summary>
            <param name="other">The attribute to compare.</param>
            <returns>True if the other object is equal to this object; otherwise false.</returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdIndexAttribute.Equals(System.Object)">
            <summary>
            Returns true if this attribute specifies the same name and configuration as the given attribute.
            </summary>
            <param name="obj">The attribute to compare.</param>
            <returns>True if the other object is equal to this object; otherwise false.</returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdIndexAttribute.GetHashCode">
            <summary>
            返回此实例的哈希代码。
            </summary>
            <returns>32 位有符号整数哈希代码。</returns>
        </member>
        <member name="T:KdCore.Data.Entity.KdEntityOwner">
            <summary>
            带有单位归属标识的数据对象基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityOwner.OwnerUserId">
            <summary>
            获取或设置所属用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityOwner.OwnerUserName">
            <summary>
            获取或设置所属用户名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityOwner.OwnerDeptId">
            <summary>
            获取或设置所属部门主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityOwner.OwnerDeptName">
            <summary>
            获取或设置所属部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityOwner.OwnerCorpCode">
            <summary>
            获取或设置所属单位代码
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityOwner.OwnerCorpName">
            <summary>
            获取或设置所属单位名称，通常保存的可能是简称，仅用来在数据库查询时方便识别是哪家单位的数据
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.KdEntityTree`1">
            <summary>
            节点较少可直接全部缓存的树型结构数据定义基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.Action_InitTreeNodesDefault">
            <summary>
            获取或设置树结构默认的获取所有树节点的方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.ST_CacheInitActions">
            <summary>
            获取所有树节点的方法的缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.SetInitAction(System.String,System.Action{KdCore.Data.Entity.KdEntityTree{`0}})">
            <summary>
            设置特定识别编码的树结构的获取所有树节点的方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetInitAction(System.String)">
            <summary>
            获取已设置树结构的获取所有树节点的方法；
            如果未设置，则使用该类型树结构的默认获取方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.KdLogger">
            <summary>
            获取日志输出接口实例
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetClrTypeShowName">
            <summary>
            获取树结构类型名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.TreeName">
            <summary>
            获取或设置树结构名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.TreeCode">
            <summary>
            获取或设置树结构编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.GroupName">
            <summary>
            获取或设置树结构分组名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.GroupCode">
            <summary>
            获取或设置树结构分组编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.GroupSort">
            <summary>
            获取或设置树结构分组编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.IsDefault">
            <summary>
            获取或设置当前树结构在同一分组中是否为默认树
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.LockedTree">
            <summary>
            获取或设置树是否锁定，禁止编辑修改；整个树结构完全不可编辑
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.LockedNodes">
            <summary>
            获取或设置树是否锁定节点，禁止增删节点；但可修改节点的内容设置
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.LockedNodeValue">
            <summary>
            获取或设置树节点是否锁定节点值编辑，仅在锁定节点编辑时生效，如果可以增删节点，必须可以编辑节点值才能新增
            包括节点值(<see cref="P:KdCore.Data.Entity.KdEntityTreeNode`1.NodeCode"/>) 及节点所属上级节点(<see cref="P:KdCore.Data.Entity.KdEntityTreeNode`1.ParentId"/>，对其修改会造成节点值路径的变化<see cref="P:KdCore.Data.Entity.KdEntityTreeNode`1.CodePath"/>)，禁止编辑修改；
            </summary>
        </member>
        <member name="F:KdCore.Data.Entity.KdEntityTree`1._cacheInitTime">
            <summary>
            节点缓存初始化时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.CacheNodesById">
            <summary>
            树结构所有的节点项的主键字典缓存，注意请不要随意修改节点内容，避免影响全局的使用
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.AllNodes">
            <summary>
            树结构所有的节点项，注意请不要随意修改节点内容，避免影响全局的使用
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.Items">
            <summary>
            树结构的一级节点项，注意请不要随意修改节点内容，避免影响全局的使用
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.ExpireCheck(System.Int32)">
            <summary>
            缓存数据是否超过了有效期时间
            </summary>
            <param name="expiredMinutes">有效期时间：以分钟位单位</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.ResetCacheNodes">
            <summary>
            重置当前树结构缓存的字典项数据
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.InitTreeNodes">
            <summary>
            初始化树结构数据缓存
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.JsonFileFolder">
            <summary>
            获取或设置当前树结构的节点数据保存文件夹路径
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTree`1.JsonFileName">
            <summary>
            获取或设置当前树结构的节点数据保存文件名称
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetJsonSaveFileFolder">
            <summary>
            获取当前树结构的节点数据保存文件夹路径，如果未设置则自动根据树结构类型进行获取
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetJsonSaveFileName">
            <summary>
            获取当前树结构的节点数据保存文件名称，如果未设置则自动根据树结构类型和编码标识进行获取
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetJsonSaveFilePath(System.String)">
            <summary>
            获取当前树结构的节点数据保存文件路径
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.LoadJsonNodes(System.String)">
            <summary>
            JSON序列化文件加载指定识别编码的树结构的节点数据
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.SaveJsonNodes(System.String)">
            <summary>
            将指定识别编码的树结构的节点数据进行JSON序列化并保存到文件
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.SetAllNodes(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            设置树结构的树节点（全部节点）
            </summary>
            <returns>在初始化过程中是否发生了数据调整</returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.UpdateTreeRelation">
            <summary>
            更新现有节点的树结构关系及其缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.Add(`0)">
            <summary>
            添加树节点
            </summary>
            <param name="node"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.Remove(System.String[])">
            <summary>
            删除树节点，如果指定的节点存在子节点，则保留，不进行删除
            </summary>
            <param name="nodeIds"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.Active(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            激活指定节点为当前节点
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetDataTitle">
            <summary>
            获取当前数据的标题名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.ToString">
            <summary>
            重写 ToString() 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.FindNode(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查找第一个符合条件的节点
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.FindNode(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            查找第一个符合条件的节点
            </summary>
            <param name="findPredicate">查找条件</param>
            <param name="skipPredicate">跳过条件，一旦符合跳过，则其所有子节点均不再进行查找</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetTreeNodes">
            <summary>
            获取当前树结构中所有的树节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetTreeNodes(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取当前树结构中所有符合条件的树节点，【不会包括上级节点不符合条件的下级节点】
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetTreeNodes(System.String[])">
            <summary>
            获取指定主键中包含的当前树结构中的树节点，【不会包括上级节点不符合条件的下级节点】
            </summary>
            <param name="nodeIds">树节点主键</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetNodeById(System.String)">
            <summary>
            获取当前树结构中指定主键 Id 的树节点
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetNodeByCodePath(System.String)">
            <summary>
            获取当前树结构中指定 CodePath 的树节点
            </summary>
            <param name="codePath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.QueryNodes(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取当前树结构中所有的树节点；
            注意：上级节点不符合条件，但下级节点符合条件也会包括在内
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.QueryNodes(System.Nullable{System.Boolean},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取当前树结构中所有的树节点；
            注意：上级节点不符合条件，但下级节点符合条件也会包括在内
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetAllNodes(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取当前树结构中所有符合条件的树节点；
            注意：上级节点不符合条件，但下级节点符合条件也会包括在内
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetAllNodes(System.Nullable{System.Boolean},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取当前树结构中所有符合条件的树节点；
            注意：上级节点不符合条件，但下级节点符合条件也会包括在内
            </summary>
            <param name="tagDisabled"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetAllValidNodes(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取当前树结构中所有的有效树节点；
            注意：上级节点不符合条件，但下级节点符合条件也会包括在内
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.FirstNode(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取当前树结构中第一个符合条件的树节点
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.FirstNode(System.Nullable{System.Boolean},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取当前树结构中第一个符合条件的树节点
            </summary>
            <param name="tagDisabled"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetNodesByParent(System.String,System.Boolean)">
            <summary>
            根据父节点主键查询树节点
            </summary>
            <param name="parentId"></param> 
            <param name="withParent"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.GetNodesByParentCodePath(System.String,System.Boolean)">
            <summary>
            根据父节点识别路径查询树节点
            </summary>
            <param name="parentCodePath"></param> 
            <param name="withParent"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTree`1.ToListValid(System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            按有效性获取树节点的集合，注意请不要随意修改节点内容，避免影响全局的使用
            </summary>
            <param name="allLevels">是否包含所有层级的节点，默认为false，即只返回当前一级的树节点</param>
            <param name="tagDisabled">是否已禁用，参数值为null时查询所有</param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Entity.Annotations.KdPropertyListAttribute">
            <summary>
            作为在转换为列表时显示在列表中的数据的属性字段标识特性
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.Annotations.KdEditAttribute">
            <summary>
            数据实体对象指定字段输入输出组件的设置参数
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdEditAttribute.GroupAttributes">
            <summary>
            获取或设置输入输出组件整体的 HTML 特性
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdEditAttribute.LabelAttributes">
            <summary>
            获取或设置输入输出组件中名称标题 LABEL 部分的 HTML 特性
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdEditAttribute.InputAttributes">
            <summary>
            获取或设置输入输出组件中名称标题 INPUT 部分的 HTML 特性
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdEditAttribute.EditTitle">
            <summary>
            获取或设置被标注的属性在编辑时显示的标题文字
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdEditAttribute.TitleColumns">
            <summary>
            获取或设置被标注的属性在编辑时显示的标题文字占据几栏栅格
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdEditAttribute.InputColumns">
            <summary>
            获取或设置被标注的属性在编辑时显示的表单控件占据几栏栅格，默认4栏
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.Annotations.KdEditAttribute.#ctor(System.String,System.UInt32,System.UInt32)">
            <summary>
            初始化 KdCore.KdFiledAttribute 类的新实例。
            </summary>
            <param name="editTitle">被标注的属性在编辑时显示的标题文字</param>
            <param name="colInput">编辑表单所占栏列数</param>
            <param name="colLabel">编辑标题所占栏列数</param>
        </member>
        <member name="M:KdCore.Data.Entity.Annotations.KdEditAttribute.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            构造函数
            </summary>
            <param name="editTitle">被标注的属性在编辑时显示的标题文字</param>
            <param name="inputHtmlAttributes"></param>
            <param name="labelHtmlAttributes"></param>
            <param name="groupHtmlAttributes"></param>
        </member>
        <member name="M:KdCore.Data.Entity.Annotations.KdEditAttribute.#ctor(System.String,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            构造函数
            </summary>
            <param name="labelText">文字标签显示文本</param>
            <param name="colInput">表单控件占据几栏栅格，默认4栏</param>
            <param name="colLabel">文字标签占据几栏栅格，默认2栏</param>
            <param name="inputHtmlAttributes"></param>
            <param name="labelHtmlAttributes"></param>
            <param name="groupHtmlAttributes"></param>
        </member>
        <member name="T:KdCore.Data.Entity.Annotations.KdFieldAttribute">
            <summary>
            数据实体属性的类型标识，可定义属性的一些特殊设置，在处理自动显示或赋值时使用
            </summary> 
        </member>
        <member name="M:KdCore.Data.Entity.Annotations.KdFieldAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            初始化 KdCore.KdFiledAttribute 类的新实例。
            </summary>
            <param name="dictCode"></param>
            <param name="name"></param> 
            <param name="dictValueProperty">从数据字典项往当前属性赋值时取用的数据字典项属性名称；默认 NodeCode，也就是数据字典项的“数据项值”</param> 
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdFieldAttribute.DictCode">
            <summary>
            获取或设置当前标识的属性采用数据字典的编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdFieldAttribute.IsSelect">
            <summary>
            获取或设置当前标识的属性是否使用多选模式
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdFieldAttribute.MultiSelect">
            <summary>
            获取或设置当前标识的属性是否使用多选模式
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdFieldAttribute.Name">
            <summary>
            获取或设置当前标识的属性的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdFieldAttribute.IsRequired">
            <summary>
            获取或设置当前标识的属性是否显示为必填属性，与数据库的必填无关
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdFieldAttribute.DictValueProperty">
            <summary>
            获取或设置从数据字典项往当前属性赋值时取用的数据字典项属性名称；默认 NodeCode，也就是数据字典项的“数据项值”
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.Annotations.KdPropertyAttribute">
            <summary>
            数据实体属性的类型标识，可定义被标注的属性的一些特殊设置，在处理自动显示或赋值时使用
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdPropertyAttribute.ViewConfig">
            <summary>
            获取或设置被标注的属性在显示的配置
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.Annotations.KdPropertyViewConfig">
            <summary>
            数据实体属性的类型标识，可定义被标注的属性的一些特殊设置，在处理自动显示或赋值时使用
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.IsRequired">
            <summary>
            获取或设置被标注的属性是否显示为必填字段
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.IsReadOnly">
            <summary>
            获取或设置被标注的属性是否只读字段
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.EditTitle">
            <summary>
            获取或设置被标注的属性在编辑时显示的标题文字
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.EditTitleColumns">
            <summary>
            获取或设置被标注的属性在编辑时显示的标题文字占据几栏栅格
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.EditInputColumns">
            <summary>
            获取或设置被标注的属性在编辑时显示的表单控件占据几栏栅格，默认4栏
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.IsSelect">
            <summary>
            获取或设置被标注的属性在编辑时使用选择操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.MultiSelect">
            <summary>
            获取或设置被标注的属性在编辑选择时是否可以多选
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.DictCode">
            <summary>
            获取或设置被标注的属性存在对应的数据字典时数据字典的标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.IsDictItemKey">
            <summary>
            获取或设置被标注的属性存在对应的数据字典时数据字典的标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.DictItemProperty">
            <summary>
            获取或设置被标注的属性在从对应的数据字典项时采用的属性字段
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.#ctor">
            <summary>
            初始化新实例。
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.#ctor(System.Boolean)">
            <summary>
            初始化新实例。
            </summary>
            <param name="isRequired">被标注的属性是否显示为必填字段</param>
        </member>
        <member name="M:KdCore.Data.Entity.Annotations.KdPropertyViewConfig.#ctor(System.String,System.UInt32,System.UInt32)">
            <summary>
            初始化新实例。
            </summary>
            <param name="editTitle">被标注的属性在编辑时显示的标题文字</param>
            <param name="colInput">编辑表单所占栏列数</param>
            <param name="colLabel">编辑标题所占栏列数</param>
        </member>
        <member name="T:KdCore.Data.Entity.Annotations.KdReadOnlyAttribute">
            <summary>
            数据实体属性的类型标识，可定义被标注的属性是否显示为必填字段
            </summary> 
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdReadOnlyAttribute.IsReadOnly">
            <summary>
            获取或设置被标注的属性是否只读字段
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.Annotations.KdReadOnlyAttribute.#ctor(System.Boolean)">
            <summary>
            初始化 KdCore.KdFiledAttribute 类的新实例。
            </summary>
            <param name="isReadOnly">被标注的属性是否显示为必填字段</param>
        </member>
        <member name="T:KdCore.Data.Entity.Annotations.KdRequiredAttribute">
            <summary>
            数据实体属性的类型标识，可定义被标注的属性是否显示为必填字段
            </summary> 
        </member>
        <member name="P:KdCore.Data.Entity.Annotations.KdRequiredAttribute.IsRequired">
            <summary>
            获取或设置被标注的属性是否显示为必填字段
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.Annotations.KdRequiredAttribute.#ctor(System.Boolean)">
            <summary>
            初始化 KdCore.KdFiledAttribute 类的新实例。
            </summary>
            <param name="isRequired">被标注的属性是否显示为必填字段</param>
        </member>
        <member name="T:KdCore.Data.Entity.KdUtilDataPicks">
            <summary>
            数据弹出选择扩展处理方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdUtilDataPicks.CacheSlidingExpiration">
            <summary>
            缓存相对有效时间，默认值 30 分钟
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdUtilDataPicks.ResetCaches">
            <summary>
            重置缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdUtilDataPicks.GetSupplyAliasNames(System.Type,System.String)">
            <summary>
            获取数据类型中添加了特性标注的属性及其别名的键值字典
            </summary>
            <param name="type"></param>
            <param name="pickType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdUtilDataPicks.GetPickSupplies(KdCore.Data.IKdDataEntity,System.String)">
            <summary>
            获取实体对于指定的选择类型，所提供的键值字典
            </summary>
            <param name="entity"></param>
            <param name="pickType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdUtilDataPicks.GetAcceptAliasName(System.Type,System.String,System.String,System.String)">
            <summary>
            获取适合该属性在指定弹出选择设置时接收数据使用的别名。
            如果返回null，则表示指定的属性不接受此弹出选择的数据绑定
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.IKdEntityHandler">
            <summary>
            可记录事项办理人及办理情况的实体数据类型的规范定义接口
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityHandler.HandleTime">
            <summary>
            获取或设置事项办理时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityHandler.HandleContent">
            <summary>
            获取或设置事项办理内容或办理结果
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityHandler.HandlerId">
            <summary>
            获取或设置事项办理人主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityHandler.HandlerName">
            <summary>
            获取或设置事项办理人的姓名或用户名
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityHandler.HandlerDeptId">
            <summary>
            获取或设置事项办理人的部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityHandler.HandlerDeptName">
            <summary>
            获取或设置事项办理人的部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityHandler.HandlerDutyId">
            <summary>
            获取或设置事项办理人的职务主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityHandler.HandlerDutyName">
            <summary>
            获取或设置事项办理人的职务名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityHandler.HandlerMobile">
            <summary>
            获取或设置事项办理人的手机号码
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.IKdEntityReceiver">
            <summary>
            可记录事项接收人的实体数据类型的规范定义接口
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityReceiver.ReceiverId">
            <summary>
            获取或设置事项待办人的主键 ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityReceiver.ReceiverName">
            <summary>
            获取或设置事项待办人的姓名或用户名
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityReceiver.ReceiverDeptId">
            <summary>
            获取或设置事项待办人的部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityReceiver.ReceiverDeptName">
            <summary>
            获取或设置事项待办人的部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityReceiver.ReceiverDutyId">
            <summary>
            获取或设置事项待办人的职务主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityReceiver.ReceiverDutyName">
            <summary>
            获取或设置事项待办人的职务名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.IKdEntityReceiver.ReceiverMobile">
            <summary>
            获取或设置事项待办人的手机号码
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.ITextFieldName">
            <summary>
            文本字段
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.ITextFieldName.TextFieldName">
            <summary>
            文本字段名称
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.KdEntityBase">
            <summary>
            实体对象数据基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.Id">
            <summary>
            获取或设置数据实体主键
            构成方式：日期时间+GUID
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.IsChanged">
            <summary>
            获取或设置数据是否有改动，不在数据库保存且需要在改动时自行设置该属性值
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.AuthView">
            <summary>
            获取或设置数据的权限验证是否允许查看
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.AuthWork">
            <summary>
            获取或设置数据的权限验证是否允许操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.AllowedView">
            <summary>
            获取或设置数据是否允许查看
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.DisabledView">
            <summary>
            获取或设置数据是否禁止查看
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.AllowedEdit">
            <summary>
            获取或设置数据是否允许编辑
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.DisabledEdit">
            <summary>
            获取或设置数据是否禁止编辑
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.AllowedDelete">
            <summary>
            获取或设置数据是否允许删除
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.DisabledDelete">
            <summary>
            获取或设置是否有禁止删除
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.TempSort0">
            <summary>
            获取或设置临时排序序号0
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.TempSort1">
            <summary>
            获取或设置临时排序序号1
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.TempSort2">
            <summary>
            获取或设置临时排序序号2
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.TempSort3">
            <summary>
            获取或设置临时排序序号3
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.TempSort4">
            <summary>
            获取或设置临时排序序号4
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.TempSort5">
            <summary>
            获取或设置临时排序序号5
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.SaveMode">
            <summary>
            获取或设置数据保存时需要使用保存方式，不在数据库保存；
            注意使用时需要手动设置该属性值
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.EntityFlag">
            <summary>
            获取或设置实体临时标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.DataFlag">
            <summary>
            获取或设置数据临时标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.IsFollowed">
            <summary>
            获取或设置当前用户是否已收藏当前数据的快捷方式
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.FollowedId">
            <summary>
            获取或设置当前用户收藏当前数据的快捷方式的主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityBase.AnnexFiles">
            <summary>
            获取或设置相关附件记录数据
            </summary>
        </member>
        <member name="F:KdCore.Data.Entity.KdEntityBase._annexRequestCache">
            <summary>
            附件上传上下文缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityBase.GetAnnexRequest(System.String)">
            <summary>
            获取文件查询参数
            </summary>
            <param name="annexType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityBase.CreateAnnexRequest(System.String)">
            <summary>
            创建文件查询参数
            </summary>
            <param name="annexType"></param>
            <returns></returns>
        </member>
        <member name="F:KdCore.Data.Entity.KdEntityBase._annexContextCache">
            <summary>
            附件上传上下文缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityBase.GetAnnexContext(System.String)">
            <summary>
            获取附件上传的设置上下文
            </summary>
            <param name="annexType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityBase.CreateAnnexContext(System.String)">
            <summary>
            创建附件上传的设置上下文
            </summary>
            <param name="annexType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityBase.CopyEditValuesFrom(KdCore.Data.EditModels.KdBaseEdit)">
            <summary>
            将用户编辑的数据复制到当前对象。
            </summary>
            <param name="editModel"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityBase.OnCopyValues(KdCore.Data.EditModels.KdBaseEdit)">
            <summary>
            从用户编辑的数据复制数据时，执行的处理操作
            </summary>
            <param name="editModel"></param>
        </member>
        <member name="T:KdCore.Data.Entity.KdEntityCommon">
            <summary>
            用户数据对象基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCommon.SortNum">
            <summary>
            获取或设置显示顺序
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCommon.Notes">
            <summary>
            获取或设置备注，通常用于保存用户主动输入的一些备注说明
            </summary> 
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCommon.Remarks">
            <summary>
            获取或设置说明，通常用于保存系统程序运行过程中产生的一些说明注释
            </summary> 
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCommon.Other1">
            <summary>
            获取或设置其他或备注 1
            </summary> 
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCommon.Other2">
            <summary>
            获取或设置其他或备注 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCommon.Other3">
            <summary>
            获取或设置其他或备注 3
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCommon.Other4">
            <summary>
            获取或设置其他或备注 4
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCommon.Other5">
            <summary>
            获取或设置其他或备注 5
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCommon.Other6">
            <summary>
            获取或设置其他或备注 6
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCommon.Other7">
            <summary>
            获取或设置其他或备注 7
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCommon.Other8">
            <summary>
            获取或设置其他或备注 8
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.KdEntityCreate">
            <summary>
            用户数据对象基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreate.CreatorDeptId">
            <summary>
            获取或设置数据记录创建用户所在的部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreate.CreatorDeptName">
            <summary>
            获取或设置数据记录创建用户所在的部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreate.CreatorDutyId">
            <summary>
            获取或设置数据记录创建用户所在的职务主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreate.CreatorDutyName">
            <summary>
            获取或设置数据记录创建用户所在的职务名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreate.CreatorCorpCode">
            <summary>
            获取或设置数据记录创建用户所在的单位标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreate.CreatorCorpName">
            <summary>
            获取或设置数据记录创建用户所在的单位名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreate.CreateName">
            <summary>
            获取或设置用于显示的创建用户名称，不带创建时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreate.CreateDesc">
            <summary>
            获取或设置用于显示的创建用户名称，带创建时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreate.CreateDescPrecise">
            <summary>
            获取或设置用于显示的创建用户名称，带创建时间
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.KdEntityModify">
            <summary>
            用户数据对象基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.IsValid">
            <summary>
            获取数据有效标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.IsInvalid">
            <summary>
            获取数据无效标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.CreatorDeptId">
            <summary>
            获取或设置数据记录创建用户所在的部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.CreatorDeptName">
            <summary>
            获取或设置数据记录创建用户所在的部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.CreatorDutyId">
            <summary>
            获取或设置数据记录创建用户所在的职务主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.CreatorDutyName">
            <summary>
            获取或设置数据记录创建用户所在的职务名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.CreatorCorpCode">
            <summary>
            获取或设置数据记录创建用户所在的单位标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.CreatorCorpName">
            <summary>
            获取或设置数据记录创建用户所在的单位名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.ModifierDeptId">
            <summary>
            获取或设置数据记录最后修改用户所在的部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.ModifierDeptName">
            <summary>
            获取或设置数据记录最后修改用户所在的部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.ModifierCorpCode">
            <summary>
            获取或设置数据记录最后修改用户所在的单位标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.ModifierCorpName">
            <summary>
            获取或设置数据记录最后修改用户所在的单位名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.CreateName">
            <summary>
            获取或设置用于显示的创建用户名称，不带创建时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.CreateDesc">
            <summary>
            获取或设置用于显示的创建用户名称，带创建时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.CreateDescPrecise">
            <summary>
            获取或设置用于显示的创建用户名称，带创建时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.ModifyName">
            <summary>
            获取或设置用于显示的最后修改用户名称，不带修改时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.ModifyDesc">
            <summary>
            获取或设置用于显示的最后修改用户名称，带修改时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModify.ModifyDescPrecise">
            <summary>
            获取或设置用于显示的最后修改用户名称，带修改时间
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.KdEntityCreateBase">
            <summary>
            用户数据对象基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreateBase.IsValid">
            <summary>
            获取数据有效标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreateBase.IsInvalid">
            <summary>
            获取数据无效标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreateBase.TagDisabled">
            <summary>
            获取或设置禁用状态标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreateBase.VerNum">
            <summary>
            获取或设置数据版本号标识；
            用于并发处理，通常应该由ORM自行维护，无需人工赋值修改
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreateBase.CreateTime">
            <summary>
            获取或设置数据记录创建时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreateBase.CreatorUserId">
            <summary>
            获取或设置数据记录创建用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityCreateBase.CreatorUserName">
            <summary>
            获取或设置数据记录创建用户姓名
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityCreateBase.CopyEditValuesFrom(KdCore.Data.EditModels.KdBaseEdit)">
            <summary>
            复制用户编辑的数据到当前对象。
            </summary>
            <param name="editModel"></param>
        </member>
        <member name="T:KdCore.Data.Entity.KdEntityModifyBase">
            <summary>
            用户数据对象基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModifyBase.IsValid">
            <summary>
            获取数据有效标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModifyBase.IsInvalid">
            <summary>
            获取数据无效标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModifyBase.TagDeleted">
            <summary>
            获取或设置删除状态标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModifyBase.ModifyTime">
            <summary>
            获取或设置数据记录最后修改时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModifyBase.ModifierUserId">
            <summary>
            获取或设置数据记录最后修改用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityModifyBase.ModifierUserName">
            <summary>
            获取或设置数据记录最后修改用户账户
            </summary>
        </member>
        <member name="T:KdCore.Data.Entity.KdEntityTreeNode`1">
            <summary>
            系统树型节点定义
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.TreeCode">
            <summary>
            获取或设置节点所在树的识别编码
            </summary>
        </member>
        <member name="F:KdCore.Data.Entity.KdEntityTreeNode`1._parentId">
            <summary>
            上级节点的ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.ParentId">
            <summary>
            获取上级节点的ID
            </summary>
        </member>
        <member name="F:KdCore.Data.Entity.KdEntityTreeNode`1._tree">
            <summary>
            该节点所在的树结构
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.Tree">
            <summary>
            获取或设置该节点所在的树结构
            </summary>
        </member>
        <member name="F:KdCore.Data.Entity.KdEntityTreeNode`1._parent">
            <summary>
            上级节点
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.Parent">
            <summary>
            获取或设置上级节点
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.NodeName">
            <summary>
            获取或设置节点名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.NodeCode">
            <summary>
            获取或设置节点编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.NameAndSortNum">
            <summary>
            获取带有排序号的节点名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.NamePath">
            <summary>
            获取完整的节点名称路径
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.CodePath">
            <summary>
            获取完整的节点编码路径
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.MarkCode">
            <summary>
            获取或设置数据的唯一标识特征码，应由系统随机生成且不可编辑，相对于第二个主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.ItemValue1">
            <summary>
            设置 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.ItemValue2">
            <summary>
            设置 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.ItemValue3">
            <summary>
            设置 3
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.ItemValue4">
            <summary>
            设置 4
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.ItemDesc">
            <summary>
            描述说明
            </summary>
        </member>
        <member name="F:KdCore.Data.Entity.KdEntityTreeNode`1._items">
            <summary>
            子节点集合
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.InnerItems">
            <summary>
            获取或设置子节点集合（避免外部意外修改，该集合仅限框架内部使用）
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.HasValidItems">
            <summary>
            获取节点是否拥有有效的子节点
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.HasItems">
            <summary>
            获取节点是否拥有子节点
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.Items">
            <summary>
            获取子节点集合 
            </summary>
        </member>
        <member name="F:KdCore.Data.Entity.KdEntityTreeNode`1._isSelected">
            <summary>
            该节点是否被选中
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.IsSelected">
            <summary>
            获取或设置该节点是否被选中
            </summary>
        </member>
        <member name="F:KdCore.Data.Entity.KdEntityTreeNode`1._isExtended">
            <summary>
            该节点是否被展开
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.IsExtended">
            <summary>
            获取或设置该节点是否被展开
            </summary>
        </member>
        <member name="P:KdCore.Data.Entity.KdEntityTreeNode`1.IsActived">
            <summary>
            获取或设置该节点是否被激活，通常与选中应设置相同的值
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.GetDataTitle">
            <summary>
            获取当前数据的标题名称，用于生成待办事项等关联数据时使用，或数据删除时提示显示等
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.CloneNode(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}[])">
            <summary>
            递归克隆树节点（同时克隆全部层级的子节点）
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.CloneNode(System.Func{`0,System.Boolean})">
            <summary>
            递归克隆树节点（同时克隆全部层级的子节点）
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.Merge(`0)">
            <summary>
            合并节点及子节点数据
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.MergeValues(`0)">
            <summary>
            合并节点数据属性
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.MergeChilds(`0,System.Func{`0,System.Boolean})">
            <summary>
            合并子节点
            </summary>
            <param name="source"></param>
            <param name="predicate"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.CreateId(System.Boolean)">
            <summary>
            生成节点ID
            </summary>
            <param name="replaceExist"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.Get(System.String)">
            <summary>
            在当前节点及子节点集合中查找指点ID主键的节点
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.ClearTreeRelation">
            <summary>
            清空子节点集合
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.AutoCreateSomeProperty(KdCore.Data.Users.IKdUser)">
            <summary>
            生成部分需要必须设置的属性
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.Add(`0)">
            <summary>
            添加子节点
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.Add(`0,KdCore.Data.Users.IKdUser)">
            <summary>
            添加子节点
            </summary>
            <param name="item">要添加的子节点数据</param>
            <param name="user">进行添加操作的用户</param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.OnAddNode(`0,KdCore.Data.Users.IKdUser)">
            <summary>
            添加节点时的额外处理
            </summary>
            <param name="item"></param>
            <param name="user"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.Add(System.String,System.String,KdCore.Data.Users.IKdUser)">
            <summary>
            添加字典数据子项
            </summary>
            <param name="itemName"></param>
            <param name="itemCode"></param>
            <param name="user"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.Remove(System.String,System.Boolean)">
            <summary>
            从当前节点的所有子节点中查找指定主键的节点并移除
            </summary>
            <param name="nodeId">要删除的节点主键</param>
            <param name="moveChildToParent">是否将要删除节点的子节点上移到删除节点的父节点中去</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.Quit(System.Boolean)">
            <summary>
            从原来的树和父节点中移除当前节点
            </summary>
            <param name="moveChildToParent">是否将要删除节点的子节点上移到删除节点的父节点中去</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.Active(System.Boolean)">
            <summary>
            设置节点为激活状态
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.Deactivate">
            <summary>
            重置节点及子节点为未激活状态
            </summary>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.ToList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String[])">
            <summary>
            将符合条件的当前节点及子节点转换为List集合
            </summary>
            <param name="predicate"></param>
            <param name="excludeIds"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.ToChildList(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String[])">
            <summary>
            将符合条件的子节点转换为List集合
            </summary>
            <param name="predicate"></param>
            <param name="excludeIds"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.FetchChildToList(System.Collections.Generic.List{`0},System.Func{`0,System.Boolean},System.String[])">
            <summary>
            填充符合条件的子节点到参数集合
            </summary>
            <param name="list"></param>
            <param name="predicate"></param>
            <param name="excludeIds"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.FetchToList(System.Collections.Generic.List{`0},System.Func{`0,System.Boolean},System.String[])">
            <summary>
            填充符合条件的节点及子节点到参数集合
            </summary>
            <param name="list"></param>
            <param name="where"></param>
            <param name="excludeIds"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.ToListValid(System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            按有效性获取当前节点的子节点的集合
            </summary>
            <param name="allLevels">是否包含所有层级的节点，默认为false，即只返回当前一级的数据项</param>
            <param name="tagDisabled">是否已禁用，参数值为null时查询所有</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.FindNode(System.Func{`0,System.Boolean})">
            <summary>
            在当前节点及子节点中查找第一个符合条件的节点
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.FindNode(System.Func{`0,System.Boolean},System.Func{`0,System.Boolean})">
            <summary>
            在当前节点及子节点中查找第一个符合条件的节点
            </summary>
            <param name="findPredicate"></param>
            <param name="skipPredicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.FindNodeByNamePath(System.String)">
            <summary>
            在当前节点及子节点中查找第一个 NamePath 等于参数值的节点
            </summary>
            <param name="namePath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.FindNodeByCodePath(System.String)">
            <summary>
            在当前节点及子节点中查找第一个 CodePath 等于参数值的节点
            </summary>
            <param name="codePath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.JsonSave(System.String)">
            <summary>
            将当前节点及子节点转换成List集合，并序列化为Json文件保存
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.EachAction(System.Action{`0})">
            <summary>
            对当前节点及子节点递归遍历执行操作方法
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.CreateNewTree``1(System.String,System.String)">
            <summary>
            获取当前菜单项所在的子菜单树
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.ToListItem(System.Boolean)">
            <summary>
            转换为列表项
            </summary>
            <param name="moreDataMode">是否使用包含较多数据的模式进行转换</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Entity.KdEntityTreeNode`1.OnToListItem(KdCore.Data.KdListItem,System.Boolean)">
            <summary>
            转换为列表项时的额外处理
            </summary>
            <param name="item">已生成的列表项</param>
            <param name="moreDataMode">是否使用包含较多数据的模式进行转换</param>
        </member>
        <member name="T:KdCore.Data.BbDataService">
            <summary>
            数据管理服务程序的基类
            </summary>
            <summary>
            数据管理服务程序的基类
            </summary>
            <summary>
            数据管理服务程序的基类
            </summary>
            <summary>
            数据管理服务程序的基类
            </summary>
            <summary>
            数据管理服务程序的基类
            </summary>
            <summary>
            数据管理服务程序的基类
            </summary>
            <summary>
            数据管理服务程序的基类
            </summary>
            <summary>
            数据管理服务程序的基类
            </summary>
            <summary>
            数据管理服务程序的基类
            </summary>
            <summary>
            数据管理服务程序的基类
            </summary>
            <summary>
            数据管理服务程序的基类
            </summary>
            <summary>
            数据管理服务程序的基类
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.DbName">
            <summary>
            获取或设置当前操作数据库的配置名称或连接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.Logger">
            <summary>
            日志记录接口
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.DataLogWrite">
            <summary>
            获取或设置SQL日志输出方法
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.DataLogsDetails">
            <summary>
            获取或设置是否启用用户操作自动日志（保存到数据库的日志）（每次CURD操作的详细日志）
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.DataLogsSerialBase">
            <summary>
            获取或设置用户操作自动日志（保存到数据库的日志）的批次序号基数
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.DataLogsUnify">
            <summary>
            获取或设置用户操作自动日志的统一格式化设置
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.FormatLogContent(System.String)">
            <summary>
            日志输出前的格式化处理
            </summary>
            <param name="logContent"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.LogSqlSetence(System.String)">
            <summary>
            输出带有请求识别ID的 SQL 执行语句到日志文件
            </summary>
            <param name="sql"></param>
        </member>
        <member name="M:KdCore.Data.BbDataService.LogWrite(System.String,System.Object[])">
            <summary>
            运行日志输出
            </summary>
            <param name="message">错误消息或错误消息格式化模板</param>
            <param name="messageParams">错误消息格式化参数</param>
        </member>
        <member name="M:KdCore.Data.BbDataService.LogError(System.Exception,System.String,System.Object[])">
            <summary>
            输出带有请求识别ID的日志记录到日志文件
            </summary>
            <param name="exception"></param>
            <param name="msg"></param>
            <param name="msgParams"></param>
        </member>
        <member name="M:KdCore.Data.BbDataService.DebugMethodStack(System.String,System.Type)">
            <summary>
            输出方法调用堆栈的日志信息，仅<see cref="P:KdCore.Data.BbDataService.DebugMode"/> 设置为 true 时才输出
            </summary>
            <param name="method"></param>
            <param name="dbEntityType"></param>
        </member>
        <member name="P:KdCore.Data.BbDataService.SessionKey">
            <summary>
            识别标识
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.DataSession">
            <summary>
            获取或设置当前服务程序所在的数据会话
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.DebugMode">
            <summary>
            获取或设置是否调试模式，调式模式下会输出更多的日志信息等
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.HasDataChanged">
            <summary>
            获取或设置是否存在数据变化（显式调用了添加删除或更新方法）
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.CurrUser">
            <summary>
            获取或设置当前操作数据的用户
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.UserProvider">
            <summary>
            用户及授权数据操作提供程序
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.TaskProvider">
            <summary>
            待办事项数据操作提供程序
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.AnnexProvider">
            <summary>
            附件数据操作提供程序
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService.SmsProvider">
            <summary>
            短信数据操作提供程序
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.TestDataContext">
            <summary>
            测试数据库连接是否正常
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.GetService``1(KdCore.Data.Users.IKdUser)">
            <summary>
            获取其他类型的数据服务程序，并使其操作用户、事务范围与当前数据服务程序保持一致
            </summary>
            <typeparam name="TDataService"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.GetEntityService``1(KdCore.Data.Users.IKdUser)">
            <summary>
            获取一个用于指定数据类型的数据服务程序，并使其操作用户、事务范围与当前数据服务程序保持一致
            </summary>
            <typeparam name="TDataEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Dispose">
            <summary>
            释放占用资源
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.Dispose(System.Boolean)">
            <summary>
            释放占用资源
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.ResetDataContext">
            <summary>
            重置当前的数据上下文，以便在数据状态错误时重新加载数据
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.OnDataContextReset">
            <summary>
            重置当前的数据上下文时调用的处理方法
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.ResetDataContextImpl">
            <summary>
            重置当前的数据上下文的方法实现
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.OnDataContextReseted">
            <summary>
            重置当前的数据上下文之后调用的处理方法
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.EnsureDataEntityType(System.Type,System.Object)">
            <summary>
            确认最终的实体类型
            </summary>
            <param name="entityType"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.OnGetDataTagCodeExpression``1(System.String)">
            <summary>
            获取指定类型数据在进行类别标识筛选时的查询表达式。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tagCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbAddImpl(System.Object,System.Type)">
            <summary>
            添加实体数据
            </summary>
            <param name="entity">添加的实体</param> 
            <param name="entityType">添加的实体类型</param>
            <returns>添加的实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbUpdateImpl(System.Object,System.Type)">
            <summary>
            更新实体数据
            </summary>
            <param name="entity">更新的实体</param> 
            <param name="entityType">更新的实体类型</param>
            <returns>更新的实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDeleteImpl(System.Object,System.Type)">
            <summary>
            将给定实体标记为“已删除”（数据库不再存在）
            这样一来，当调用 SaveChanges 时，将从数据库中删除该实体。
            </summary>
            <param name="entity">将被删除的实体</param>
            <param name="entityType">删除数据的类型</param>
            <returns>将被删除的实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.SaveChangesImpl">
            <summary>
            将在当前数据上下文中所做的所有更改保存到基础数据源。
            </summary>
            <returns>数据修改影响的条数</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbGetImpl(System.Type,System.Object[])">
            <summary>
            通过主键获取数据，只要数据库存在均返回数据
            </summary>
            <param name="entityType">获取数据的类型</param>
            <param name="keyValues"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbQueryImpl``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.GetJsonInitFolder">
            <summary>
            获取指定类型的 JSON 初始化数据文件的文件夹名称。
            </summary>
            <returns>JSON文件路径</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.GetJsonSaveFolder">
            <summary>
            获取指定类型的 JSON 初始化数据备份或加载文件的文件夹名称。
            </summary>
            <returns>JSON文件路径</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.GetJsonSavePath``1(System.String,System.String,System.String)">
            <summary>
            获取备份或加载指定类型的 JSON 数据文件的默认路径。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tagCode">数据类型标识</param>
            <param name="dbContextFolder">按 DbContext 分组的文件夹名称</param>
            <param name="jsonDataFolder">数据备份加载的总体文件夹名称</param>
            <returns>JSON文件路径</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.JsonBackup``1(System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            备份指定类型的数据到JSON文件（UTF8 编码格式）。
            【仅可用来作为调试、初始化系统数据使用，切不可作为用户系统的主要备份手段】
            通常情况下存在主从表结构映射时，备份主表时会包含包括子表数据，能自动备份和恢复子表数据，无需再单独进行备份
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="dataTagCode">分类标识，如单位编码，部门标识等</param>
            <param name="filePath">备份文件保存路径</param>
            <param name="predicate">导出数据筛选条件</param>
        </member>
        <member name="M:KdCore.Data.BbDataService.JsonLoad``1(System.Boolean,System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            加载指定类型的数据到JSON备份文件（UTF8 编码格式）。
            【仅可用来作为调试、初始化系统数据使用，切不可作为用户系统的主要恢复手段】
            需要删除数据时如果存在主从表会抛出异常
            添加数据时如果相同主键的数据已存在，会抛出异常
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tagCode">分类标识，如单位编码，部门标识等</param>
            <param name="deleteExists">是否删除原有数据</param>
            <param name="filePath">加载文件保存路径</param>
            <param name="predicate">删除数据筛选条件</param>
        </member>
        <member name="M:KdCore.Data.BbDataService.JsonInit``1(System.Boolean,System.Boolean,System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            加载指定类型的数据到 JSON 初始化文件。
            【仅可用来作为调试、初始化系统数据使用，切不可作为用户系统的主要恢复手段】
            需要删除数据时如果存在主从表会抛出异常
            添加数据时如果相同主键的数据已存在，会抛出异常
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="saveChanges">是否直接提交保存</param>
            <param name="tagCode">分类标识，如单位编码，部门标识等</param>
            <param name="deleteExists">是否删除原有数据</param>
            <param name="filePath">加载文件保存路径</param>
            <param name="predicate">删除数据筛选条件</param>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbGetByKey(System.Type,System.Object[])">
            <summary>
            通过主键获取数据，只要数据库存在均返回数据
            </summary>
            <param name="entityType">获取数据的类型</param>
            <param name="keyValues">要获取实体的主键，单个实体的主键，参数数组是为了满足联合主键的情况</param>
            <returns>主键对应的数据记录</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbGetByKey``1(System.Object[])">
            <summary>
            通过主键获取数据，只要数据库存在均返回数据
            </summary>
            <typeparam name="TEntity">获取数据的类型</typeparam>
            <param name="keyValues">要获取实体的主键，单个实体的主键，参数数组是为了满足联合主键的情况</param>
            <returns>主键对应的数据记录</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbGet``1(System.String)">
            <summary>
            通过主键获取数据记录，只要数据库存在均返回数据
            如果数据库不存在记录，则返回 null
            </summary>
            <typeparam name="TEntity">获取数据的类型</typeparam>
            <param name="id">要获取实体的主键</param>
            <returns>主键对应的数据记录</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Get``1(System.String)">
            <summary>
            通过主键获取有效数据记录，如果主键对应数据的 TagDeleted 值为 true 则返回 null
            </summary>
            <typeparam name="TEntity">获取数据的类型</typeparam>
            <param name="id">要获取实体的主键</param>
            <returns>主键对应的数据记录</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.ValidGet``1(System.String)">
            <summary>
            通过主键获取有效数据记录，如果主键对应数据的 TagDeleted、TagDisabled 值任一为 true 则返回 null
            </summary>
            <typeparam name="TEntity">获取数据的类型</typeparam>
            <param name="id">要获取实体的主键</param>
            <returns>主键对应的数据记录</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbSingle``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询唯一符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbSingle``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询唯一符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbSingle``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询唯一符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicate2">数据查询优先筛选条件2</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Single``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询唯一符合条件的数据（符合直接指定查询条件的数据，并且TagDeleted 值为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Single``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询唯一符合条件的数据（符合直接指定查询条件的数据，并且TagDeleted 值为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Single``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询唯一符合条件的数据（符合直接指定查询条件的数据，并且TagDeleted 值为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicate2">数据查询优先筛选条件2</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.ValidSingle``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询唯一符合条件的有效数据（符合直接指定查询条件的数据，并且TagDeleted、TagDisabled 值均为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.ValidSingle``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询唯一符合条件的有效数据（符合直接指定查询条件的数据，并且TagDeleted、TagDisabled 值均为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.ValidSingle``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询唯一符合条件的有效数据（符合直接指定查询条件的数据，并且TagDeleted、TagDisabled 值均为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicate2">数据查询优先筛选条件2</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.SaveChangesResult(System.Object,System.Object,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            提交数据修改到数据源，并返回数据处理结果。
            注意，如果用户没有修改数据的情况下进行保存，可能不会进行更新数据
            </summary>
            <param name="changesResult">数据修改的处理结果</param>
            <param name="changesSource">触发数据修改的原始数据</param>
            <param name="minChangesCount">修改应该影响的数据条数，如果提交结果计算的条数小于指定值，则操作结果设置为失败</param>
            <param name="failure">是否强制设置操作结果为失败，设置为 null 时根据数据条数自动判断</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.SaveResult``2(``1)">
            <summary>
            对提交的编辑视图数据进行保存，并返回处理结果。
            注意：为了避免主键重复冲突，已被标识删除的数据也会被修改更新。
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <typeparam name="TEditModel">与被保存数据类型对应的数据编辑类型</typeparam> 
            <param name="editModel">被编辑的数据修改结果</param>
            <returns>数据保存的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.SaveResult``1(``0,System.Object)">
            <summary>
            保存数据，提交到数据库并返回数据处理结果
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <param name="saveEntity">被编辑后的数据修改结果</param>
            <param name="saveSource">触发此次保存操作的来源</param>
            <returns>数据保存的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDeleteResult``1(System.String[])">
            <summary>
            删除数据，并返回数据处理结果
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDeleteResult``1(System.Predicate{``0},System.String[])">
            <summary>
            删除数据，并返回数据处理结果
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDeleteResult``1(System.Predicate{``0},System.Action{``0},System.String[])">
            <summary>
            删除数据，并返回数据处理结果
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DeleteResult``1(System.String[])">
            <summary>
            删除数据，并返回数据处理结果
            通常处理为假删除，仅修改删除标识字段
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DeleteResult``1(System.Predicate{``0},System.String[])">
            <summary>
            删除数据，提交到数据库并返回数据处理结果
            通常处理为假删除，仅修改删除标识字段
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DeleteResult``1(System.Predicate{``0},System.Action{``0},System.String[])">
            <summary>
            删除数据，提交到数据库并返回数据处理结果
            通常处理为假删除，仅修改删除标识字段
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDelete(System.Object,System.Type)">
            <summary>
            将给定实体标记为“已删除”（数据库不再存在）
            注意：此时仅做标记，当调用 SaveChanges 时，才从数据库中删除该实体。
            </summary>
            <param name="entity">将被删除的数据实体</param>
            <param name="entityType">删除数据的类型</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDelete``1(``0)">
            <summary>
            从数据库中删除数据记录，直接移除无法恢复
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="entity">将被删除的数据实体</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDelete``1(System.String)">
            <summary>
            通过主键来真实删除数据记录（数据库不再存在）
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="id">删除实体的主键</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDeleteByKey(System.Type,System.Object[])">
            <summary>
            通过主键来真实删除单个实体（数据库不再存在）
            </summary>
            <param name="deleteType">删除数据的类型</param>
            <param name="keyValues">删除实体的主键，单个实体的主键，参数数组是为了满足联合主键的情况</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDeleteByKey``1(System.Object[])">
            <summary>
            通过主键来真实删除单个实体（数据库不再存在）
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="keyValues">删除实体的主键，单个实体的主键，参数数组是为了满足联合主键的情况</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Delete``1(``0)">
            <summary>
            为现有数据添加删除标识，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="entity">将被删除的数据实体</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Delete``1(System.String)">
            <summary>
            通过主键来删除数据，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="id">删除实体的主键</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDeleteRange``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量从数据库中删除数据记录，直接移除无法恢复
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="collection">将被删除的数据实体集合</param>
            <returns>将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDeleteRange``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Action{``0})">
            <summary>
            批量从数据库中删除数据记录，直接移除无法恢复
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="collection">将被删除的数据实体集合</param>
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <returns>通过删除条件后，将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDeleteRange``1(System.String[])">
            <summary>
            通过主键来真实删除多个实体（数据库不再存在）
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="ids">删除多个实体的主键</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbDeleteRange``1(System.Predicate{``0},System.Action{``0},System.String[])">
            <summary>
            通过主键来真实删除多个实体（数据库不再存在）
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DeleteRange``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量删除数据，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="collection">将被删除的数据实体集合</param>
            <returns>将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DeleteRange``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Action{``0})">
            <summary>
            批量删除数据，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="collection">将被删除的数据实体集合</param>
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <returns>通过删除条件后，将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DeleteRange``1(System.String[])">
            <summary>
            通过主键来删除数据，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="ids">删除多个实体的主键</param>
            <returns>将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DeleteRange``1(System.Predicate{``0},System.Action{``0},System.String[])">
            <summary>
            通过主键来删除数据，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.SaveChanges">
            <summary>
             将在此次数据操作上下文及本次 <see cref="P:KdCore.Data.BbDataService.DataSession"/> 中所做的所有更改保存到基础数据库。
            </summary>
            <returns>已写入基础数据库的对象的数目。</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.SaveChanges(System.Boolean)">
            <summary>
             将在此上下文中所做的所有更改保存到基础数据存储。
            </summary>
            <param name="submitAllServicesInSameSession">是否提交整个 <see cref="P:KdCore.Data.BbDataService.DataSession"/> 中所有的数据修改，值为false时仅提交当前数据上下文</param>
            <returns>已写入基础数据存储的对象的数目。</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.OnSaveChangesResultException(KdCore.Data.KdDataResult,System.Exception)">
            <summary>
            保存数据出现错误时的处理
            </summary>
            <param name="result">当前的数据处理结果</param>
            <param name="ex">发生的错误异常</param>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicate2">数据查询优先筛选条件2</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（符合直接指定查询条件的数据，并且TagDeleted 值为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（符合直接指定查询条件的数据，并且TagDeleted 值为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（符合直接指定查询条件的数据，并且TagDeleted 值为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicate2">数据查询优先筛选条件2</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.ValidQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的有效数据（符合直接指定查询条件的数据，并且TagDeleted、TagDisabled 值均为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.ValidQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的有效数据（符合直接指定查询条件的数据，并且TagDeleted、TagDisabled 值均为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.ValidQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的有效数据（符合直接指定查询条件的数据，并且TagDeleted、TagDisabled 值均为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicate2">数据查询优先筛选条件2</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbUpdate(System.Object,System.Type)">
            <summary>
            更新实体数据
            </summary>
            <param name="entity">更新的实体</param> 
            <param name="entityType">更新的实体类型</param>
            <returns>更新的实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbUpdate``1(``0)">
            <summary>
            直接更新对象数据，不再对更新的数据做修改时间等处理
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Update``1(``0)">
            <summary>
            更新数据
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbUpdateRange``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            批量直接更新对象数据，不再对更新的数据做修改时间等处理
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.UpdateRange``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            批量更新数据
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="collection"></param>
            <param name="onUpdate"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.BbDataService.TypeEntityDataServices">
            <summary>
            存储数据实体类型与数据管理服务程序类型的对应关系
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.SetServiceType(System.Type,System.Type)">
            <summary>
            设置用于管理数据实体类型的数据管理服务程序类型
            </summary>
            <param name="entityType">数据实体类型</param>
            <param name="serviceType">数据管理服务程序类型</param>
        </member>
        <member name="M:KdCore.Data.BbDataService.GetServiceType(System.Type)">
            <summary>
            获取用于管理数据实体类型的数据管理服务程序类型
            </summary>
            <param name="entityType">数据实体类型</param>
            <returns>数据管理服务程序类型</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.SetServiceType``1(System.Type)">
            <summary>
            设置用于管理数据实体类型的数据管理服务程序类型
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
            <param name="serviceType">数据管理服务程序类型</param>
        </member>
        <member name="M:KdCore.Data.BbDataService.GetServiceType``1">
            <summary>
            获取用于管理数据实体类型的数据管理服务程序类型
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
            <returns>数据管理服务程序类型</returns>
        </member>
        <member name="P:KdCore.Data.BbDataService.LogStackTypes">
            <summary>
            获取要输出日志信息的数据操作方法调用堆栈的数据类型
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.GetLogStackTypes(System.Type)">
            <summary>
            获取要输出日志信息的数据操作方法调用堆栈的数据类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.TypeIsDisableLogStatck(System.Type)">
            <summary>
            获取指定类型是否禁用了输出数据操作方法调用堆栈的日志信息
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.ClearLogStackTypes">
            <summary>
            清除所有要输出日志信息的数据操作方法调用堆栈的数据类型
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService.RemoveLogStackType(System.Type)">
            <summary>
            移除要输出日志信息的数据操作方法调用堆栈的数据类型
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:KdCore.Data.BbDataService.AddLogStackTypes(System.Type[])">
            <summary>
            添加要输出日志信息的数据操作方法调用堆栈的数据类型
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:KdCore.Data.BbDataService.AddLogStackType(System.Type)">
            <summary>
            添加要输出日志信息的数据操作方法调用堆栈的数据类型
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:KdCore.Data.BbDataService.AddLogStackType``1">
            <summary>
            添加要输出日志信息的数据操作方法调用堆栈的数据类型
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbAdd(System.Object,System.Type)">
            <summary>
            添加实体数据
            </summary>
            <param name="entity">添加的实体</param> 
            <param name="entityType">添加的实体类型</param>
            <returns>添加的实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbAdd``1(``0)">
            <summary>
            直接添加对象数据，不对添加的数据做添加时间等处理
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Add``1(``0)">
            <summary>
            添加数据
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbAddRange``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            批量直接添加对象数据，不对添加的数据做添加时间等处理
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="collection"></param>
            <param name="onAdd"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.AddRange``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量添加数据
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbSave``1(``0)">
            <summary>
            根据 SaveMode 属性的设置判断更新原始数据，不再对更新的数据做修改时间等处理。
            已被标识为删除的数据，不允许再继续操作，直接返回 null。如需修改请在数据库中直接操作处理
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <param name="entity">将被保存的数据实体</param>
            <returns>将被保存的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.Save``1(``0)">
            <summary>
            根据 SaveMode 属性的设置判断添加或更新数据，并自动处理创建人、创建时间、修改人、修改时间等属性。
            已被标识为删除的数据，不允许再继续操作，直接返回 null。如需修改请在数据库中直接操作处理
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <param name="entity">将被保存的数据实体</param>
            <returns>将被保存的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbSaveRange``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            根据 SaveMode 属性的设置判断批量直接更新对象数据，不再对更新的数据做修改时间等处理
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <param name="collection">将被保存的数据实体集合</param>
            <param name="onSave">保存数据前要执行的操作</param>
            <returns>将被保存的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.SaveRange``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            根据 SaveMode 属性的设置批量更新数据
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <param name="collection">将被保存的数据实体集合</param>
            <param name="onSave">保存数据前要执行的操作</param>
            <returns>将被保存的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbView``1(System.String)">
            <summary>
            获取用于查看的实体数据，已初始化了 SaveMode 属性；
            若给定的主键为空值：将视为新增模式，初始化一个默认实例，并设置 SaveMode 为 Insert 状态
            如果给定的主键值不为空值：如对应的数据为 null，则直接返回 null;
            如果数据库存在记录，则初始化 SaveMode 为 Update 状态。
            注意：为了避免主键重复冲突，已被标识删除的数据也会被返回，并用于修改更新。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.DbGetForSave``2(``1)">
            <summary>
            从数据库中获取用于保存的实体数据，并使用提交的编辑结果对数据字段内容赋值。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TEditModel"></typeparam>
            <param name="editModel"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService.GetForSave``2(``1)">
            <summary>
            从数据库中获取用于保存的实体数据，并使用提交的编辑结果对数据字段内容赋值。
            注意：如果修改的数据是已被标识为删除的数据时，将会返回 null。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TEditModel"></typeparam>
            <param name="editModel"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.BbDataService`1">
            <summary>
            数据管理服务程序的基类
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService`1.DataLogsDetails">
            <summary>
            获取或设置是否启用用户操作自动日志（保存到数据库的日志）（每次CURD操作的详细日志）
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService`1.DataLogsSerialBase">
            <summary>
            获取或设置用户操作自动日志（保存到数据库的日志）的批次序号基数
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService`1.DataLogsUnify">
            <summary>
            获取或设置用户操作自动日志的统一格式化设置
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataService`1.DataContext">
            <summary>
            获取或设置当前的数据库上下文
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.TestDataContext">
            <summary>
            测试数据库连接是否正常
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.GetDataContext">
            <summary>
            获取当前的数据上下文
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.CreateDataContext">
            <summary>
            创建当前数据库上下文类型的一个实例对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.OnDataContextCreating">
            <summary>
            创建数据库上下文前的准备处理
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.OnDataContextVerify(`0)">
            <summary>
            创建数据库上下文后的验证处理，验证不通过可返回 null
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.OnDataContextCreated(`0)">
            <summary>
            创建数据库上下文后的后续处理
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.ResetDataContextImpl">
            <summary>
            重置当前的数据上下文的方法实现
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.SaveChangesImpl">
            <summary>
            将在当前数据上下文中所做的所有更改保存到基础数据源。
            </summary>
            <returns>数据修改影响的条数</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.DbAddImpl(System.Object,System.Type)">
            <summary>
            添加实体数据
            </summary>
            <param name="entity">添加的实体</param> 
            <param name="entityType">添加的实体类型</param>
            <returns>添加的实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.DbUpdateImpl(System.Object,System.Type)">
            <summary>
            更新实体数据
            </summary>
            <param name="entity">更新的实体</param> 
            <param name="entityType">更新的实体类型</param>
            <returns>更新的实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.DbDeleteImpl(System.Object,System.Type)">
            <summary>
            将给定实体标记为“已删除”（数据库不再存在）
            这样一来，当调用 SaveChanges 时，将从数据库中删除该实体。
            </summary>
            <param name="entity">将被删除的实体</param>
            <param name="entityType">删除数据的类型</param>
            <returns>将被删除的实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.DbGetImpl(System.Type,System.Object[])">
            <summary>
            通过主键获取数据，只要数据库存在均返回数据
            </summary>
            <param name="entityType">获取数据的类型</param>
            <param name="keyValues"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataService`1.DbQueryImpl``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.BbDataContext">
            <summary>
            数据操作模型上下文的基本扩展基类；因不做过多的表结构处理，可使用于现有的旧数据库上
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.TypeDataDbContexts">
            <summary>
            存储数据实体类型与数据操作模型上下文类型的对应关系
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataContext.SetContextType(System.Type,System.Type)">
            <summary>
            设置用于管理数据实体类型的数据操作模型上下文类型
            </summary>
            <param name="entityType">数据实体类型</param>
            <param name="contextType">数据操作模型上下文类型</param>
        </member>
        <member name="M:KdCore.Data.BbDataContext.GetContextType(System.Type)">
            <summary>
            获取用于管理数据实体类型的数据操作模型上下文类型
            </summary>
            <param name="entityType">数据实体类型</param>
            <returns>数据操作模型上下文类型</returns>
        </member>
        <member name="M:KdCore.Data.BbDataContext.SetContextType``1(System.Type)">
            <summary>
            设置用于管理数据实体类型的数据操作模型上下文类型
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
            <param name="contextType">数据操作模型上下文类型</param>
        </member>
        <member name="M:KdCore.Data.BbDataContext.GetContextType``1">
            <summary>
            获取用于管理数据实体类型的数据操作模型上下文类型
            </summary>
            <typeparam name="TEntity">数据实体类型</typeparam>
            <returns>数据操作模型上下文类型</returns>
        </member>
        <member name="P:KdCore.Data.BbDataContext.UseDatabaseNullSemantics">
            <summary>
            获取或设置一个值，该值指示当比较两个操作数，而它们都可能为 null 时，是否展示数据库 null 语义。默认值为 false。
            例如：如果 UseDatabaseNullSemantics 为 true，则 (operand1 == operand2) 将转换为 (operand1 = operand2)；
            如果 UseDatabaseNullSemantics 为 false，则将转换为 (((operand1 = operand2) AND (NOT (operand1 IS NULL OR operand2 IS NULL))) OR ((operand1 IS NULL) AND (operand2 IS NULL)))。
            </summary>
            <remarks>如果启用数据库 null 比较行为，则为 true；否则为 false。</remarks>
        </member>
        <member name="M:KdCore.Data.BbDataContext.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.Logger">
            <summary>
            日志记录类
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.Id">
            <summary>
            获取或设置当前数据操作模型中的识别标识
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.CurrUser">
            <summary>
            获取或设置当前操作数据的用户
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.BatchTag">
            <summary>
            获取或设置当前操作数据的批次标识（或可视为事务标识）
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.TimeStamp">
            <summary>
            初始化时间戳
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.DebugMode">
            <summary>
            获取或设置是否调试模式，调式模式下会输出更多的日志信息等
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataContext.CheckIntact">
            <summary>
            初始化唯一标识
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.DataSourceName">
            <summary>
            获取或设置输出日志时用来标识数据源的字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.DataSourcePath">
            <summary>
            获取当前数据源的访问途径，如文件路径，数据库连接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.DataSourceObject">
            <summary>
            获取当前的数据源
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.DataLogsDetails">
            <summary>
            获取或设置是否启用用户操作自动日志（保存到数据库的日志）（每次CURD操作的详细日志）
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.DataLogsBaseSerial">
            <summary>
            获取或设置用户操作自动日志（保存到数据库的日志）的批次序号基数
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.DataLogsUnify">
            <summary>
            获取或设置用户操作自动日志的统一格式化设置
            </summary>
        </member>
        <member name="P:KdCore.Data.BbDataContext.DataLogWrite">
            <summary>
            获取或设置数据库操作日志输出方法
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataContext.SaveUserActionLogs(System.Collections.Generic.List{KdCore.Data.Users.KdUserAction})">
            <summary>
            保存用户操作日志
            </summary>
            <param name="logActions"></param>
        </member>
        <member name="M:KdCore.Data.BbDataContext.FormatLogContent(System.String)">
            <summary>
            日志输出前的格式化处理
            </summary>
            <param name="logContent"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataContext.LogWrite(System.String,System.Object[])">
            <summary>
            运行日志输出
            </summary>
            <param name="message">错误消息或错误消息格式化模板</param>
            <param name="messageParams">错误消息格式化参数</param>
        </member>
        <member name="M:KdCore.Data.BbDataContext.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:KdCore.Data.BbDataContext.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:KdCore.Data.BbDataContext.TestContext(System.Boolean)">
            <summary>
            数据库连接测试
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbDataContext.DbAdd(System.Object,System.Type)">
            <summary>
            添加实体数据
            </summary>
            <param name="entity">添加的实体</param> 
            <param name="dataEntityType">保存的实体类型</param>
            <returns>添加的实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataContext.DbUpdate(System.Object,System.Type)">
            <summary>
            更新实体数据
            </summary>
            <param name="entity">更新的实体</param>
            <param name="dataEntityType">更新的实体类型</param>
            <returns>更新的实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataContext.DbDelete(System.Object,System.Type)">
            <summary>
            将给定实体标记为“已删除”（数据库不再存在）；
            这样一来，当调用 SaveChanges 时，将从数据库中删除该实体。
            </summary>
            <param name="entity">将被删除的实体</param>
            <param name="dataEntityType">要删除的数据类型</param>
            <returns>将被删除的实体</returns>
        </member>
        <member name="M:KdCore.Data.BbDataContext.DbGet(System.Type,System.Object[])">
            <summary>
            通过主键方式获取数据
            </summary>
            <param name="dataEntityType">查询数据返回实体类型</param> 
            <param name="keyValues">主键</param>
            <returns>查询结果实体，没有符合条件的结果时返回null</returns>
        </member>
        <member name="M:KdCore.Data.BbDataContext.DbQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询满足条件的数据
            </summary>
            <typeparam name="TEntity">查询数据返回实体类型</typeparam> 
            <param name="predicates">筛选条件</param>
            <returns>查询结果</returns>
        </member>
        <member name="M:KdCore.Data.BbDataContext.SaveChanges">
            <summary>
            提交此上下文中所做的所有更改保存到基础数据源。
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.BbUtilData">
            <summary>
            
            </summary>
        </member>
        <member name="M:KdCore.Data.BbUtilData.IsDataEntity(System.Type)">
            <summary>
            判断一个类型是否数据实体类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilData.IsDataContext(System.Type)">
            <summary>
            判断一个类型是否数据操作模型上下文类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilData.IsDataService(System.Type)">
            <summary>
            判断一个类型是否数据管理服务程序类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilData.GetEntityServiceType(System.Type)">
            <summary>
            获取用于管理数据实体类型的数据管理服务程序类型
            </summary>
            <param name="dataEntityType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbUtilData.GetContextServiceType(System.Type)">
            <summary>
            获取用于管理数据模型上下文的数据管理服务程序类型
            </summary>
            <param name="dataContextType"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.IBbDataContext">
            <summary>
            数据操作模型上下文规范接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.Id">
            <summary>
            获取或设置识别标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.CurrUser">
            <summary>
            获取或设置当前操作数据的用户
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.BatchTag">
            <summary>
            获取或设置当前操作数据的批次标识（或可视为事务标识）
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.DebugMode">
            <summary>
            获取或设置是否调试模式，调式模式下会输出更多的日志信息等
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.TimeStamp">
            <summary>
            初始化时间戳
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.DataSourceName">
            <summary>
            获取或设置数据源的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.DataSourcePath">
            <summary>
            获取当前数据源的访问途径，如文件路径，数据库连接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.DataSourceObject">
            <summary>
            获取当前的数据源
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.DataLogWrite">
            <summary>
            获取或设置数据库操作日志输出方法
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.DataLogsDetails">
            <summary>
            获取或设置是否启用用户操作自动日志（保存到数据库的日志）（EntityFramework 每次CURD操作的详细日志）
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.DataLogsBaseSerial">
            <summary>
            获取或设置用户操作自动日志（保存到数据库的日志）的批次序号基数
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataContext.DataLogsUnify">
            <summary>
            获取或设置用户操作自动日志的统一格式化设置
            </summary>
        </member>
        <member name="M:KdCore.Data.IBbDataContext.TestContext(System.Boolean)">
            <summary>
            测试数据库连接是否正常
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataContext.SaveChanges">
            <summary>
            提交此上下文中所做的所有更改保存到基础数据库。
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataContext.DbAdd(System.Object,System.Type)">
            <summary>
            添加实体数据
            </summary>
            <param name="entity">添加的实体</param> 
            <param name="entityType">添加的实体类型</param>
            <returns>添加的实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataContext.DbUpdate(System.Object,System.Type)">
            <summary>
            更新实体数据
            </summary>
            <param name="entity">更新的实体</param> 
            <param name="entityType">更新的实体类型</param>
            <returns>更新的实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataContext.DbDelete(System.Object,System.Type)">
            <summary>
            将给定实体标记为“已删除”（数据库不再存在）
            这样一来，当调用 SaveChanges 时，将从数据库中删除该实体。
            </summary>
            <param name="entity">将被删除的实体</param>
            <param name="entityType">删除数据的类型</param>
            <returns>将被删除的实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataContext.DbGet(System.Type,System.Object[])">
            <summary>
            通过主键获取数据，只要数据库存在均返回数据
            </summary>
            <param name="entityType">获取数据的类型</param>
            <param name="keyValues"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataContext.DbQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.IBbDataService">
            <summary>
            数据管理服务程序规范接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataService.UserProvider">
            <summary>
            用户及授权数据操作提供程序
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataService.TaskProvider">
            <summary>
            待办事项数据操作提供程序
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataService.AnnexProvider">
            <summary>
            附件数据操作提供程序
            </summary>
        </member>
        <member name="P:KdCore.Data.IBbDataService.SmsProvider">
            <summary>
            短信数据操作提供程序
            </summary>
        </member>
        <member name="M:KdCore.Data.IBbDataService.TestDataContext">
            <summary>
            测试数据库连接是否正常
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.GetService``1(KdCore.Data.Users.IKdUser)">
            <summary>
            获取其他类型的数据服务程序，并使其操作用户、事务范围与当前数据服务程序保持一致
            </summary>
            <typeparam name="TDataService"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.GetEntityService``1(KdCore.Data.Users.IKdUser)">
            <summary>
            获取一个用于指定数据类型的数据服务程序，并使其操作用户、事务范围与当前数据服务程序保持一致
            </summary>
            <typeparam name="TDataEntity"></typeparam>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.ResetDataContext">
            <summary>
            重置当前的数据上下文，以便在数据状态错误时重新加载数据
            </summary>
        </member>
        <member name="M:KdCore.Data.IBbDataService.OnGetDataTagCodeExpression``1(System.String)">
            <summary>
            获取指定类型数据在进行类别标识筛选时的查询表达式。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tagCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.GetJsonSavePath``1(System.String,System.String,System.String)">
            <summary>
            获取备份或加载指定类型的 JSON 数据文件的默认路径。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tagCode">数据类型标识</param>
            <param name="dbContextFolder">按 DbContext 分组的文件夹名称</param>
            <param name="jsonDataFolder">数据备份加载的总体文件夹名称</param>
            <returns>JSON文件路径</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.JsonBackup``1(System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            备份指定类型的数据到JSON文件（UTF8 编码格式）。
            【仅可用来作为调试、初始化系统数据使用，切不可作为用户系统的主要备份手段】
            通常情况下存在主从表结构映射时，备份主表时会包含包括子表数据，能自动备份和恢复子表数据，无需再单独进行备份
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="dataTagCode">分类标识，如单位编码，部门标识等</param>
            <param name="filePath">备份文件保存路径</param>
            <param name="predicate">导出数据筛选条件</param>
        </member>
        <member name="M:KdCore.Data.IBbDataService.JsonLoad``1(System.Boolean,System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            加载指定类型的数据到JSON备份文件（UTF8 编码格式）。
            【仅可用来作为调试、初始化系统数据使用，切不可作为用户系统的主要恢复手段】
            需要删除数据时如果存在主从表会抛出异常
            添加数据时如果相同主键的数据已存在，会抛出异常
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="tagCode">分类标识，如单位编码，部门标识等</param>
            <param name="deleteExists">是否删除原有数据</param>
            <param name="filePath">加载文件保存路径</param>
            <param name="predicate">删除数据筛选条件</param>
        </member>
        <member name="M:KdCore.Data.IBbDataService.JsonInit``1(System.Boolean,System.Boolean,System.String,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            加载指定类型的数据到 JSON 初始化文件。
            【仅可用来作为调试、初始化系统数据使用，切不可作为用户系统的主要恢复手段】
            需要删除数据时如果存在主从表会抛出异常
            添加数据时如果相同主键的数据已存在，会抛出异常
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="saveChanges">是否直接提交保存</param>
            <param name="tagCode">分类标识，如单位编码，部门标识等</param>
            <param name="deleteExists">是否删除原有数据</param>
            <param name="filePath">加载文件保存路径</param>
            <param name="predicate">删除数据筛选条件</param>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbAdd(System.Object,System.Type)">
            <summary>
            添加实体数据。
            注意：此时仅做标记，当调用 <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges"/> 或者 <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges(System.Boolean)"/> 时，才提交到数据源中执行操作。
            </summary>
            <param name="entity">添加的实体</param> 
            <param name="entityType">添加的实体类型</param>
            <returns>添加的实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbAdd``1(``0)">
            <summary>
            直接添加对象数据，不对添加的数据做添加时间等处理
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.Add``1(``0)">
            <summary>
            添加数据
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbAddRange``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            批量直接添加对象数据，不对添加的数据做添加时间等处理
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="collection"></param>
            <param name="onAdd"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.AddRange``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量添加数据
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbUpdate(System.Object,System.Type)">
            <summary>
            更新实体数据。
            注意：此时仅做标记，当调用 <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges"/> 或者 <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges(System.Boolean)"/> 时，才提交到数据源中执行操作。
            </summary>
            <param name="entity">更新的实体</param> 
            <param name="entityType">更新的实体类型</param>
            <returns>更新的实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbUpdate``1(``0)">
            <summary>
            直接更新对象数据，不再对更新的数据做修改时间等处理
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.Update``1(``0)">
            <summary>
            更新数据
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbUpdateRange``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            批量直接更新对象数据，不再对更新的数据做修改时间等处理
            </summary>
        </member>
        <member name="M:KdCore.Data.IBbDataService.UpdateRange``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            批量更新数据
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="collection"></param>
            <param name="onUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDelete(System.Object,System.Type)">
            <summary>
            将给定实体标记为“已删除”（数据库不再存在）。
            注意：此时仅做标记，当调用 <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges"/> 或者 <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges(System.Boolean)"/> 时，才提交到数据源中执行操作。
            </summary>
            <param name="entity">将被删除的数据实体</param>
            <param name="entityType">删除数据的类型</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDelete``1(``0)">
            <summary>
            从数据库中删除数据记录，直接移除无法恢复
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="entity">将被删除的数据实体</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDelete``1(System.String)">
            <summary>
            通过主键来真实删除数据记录（数据库不再存在）
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="id">删除实体的主键</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDeleteByKey(System.Type,System.Object[])">
            <summary>
            通过主键来真实删除单个实体（数据库不再存在）
            </summary>
            <param name="deleteType">删除数据的类型</param>
            <param name="keyValues">删除实体的主键，单个实体的主键，参数数组是为了满足联合主键的情况</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDeleteByKey``1(System.Object[])">
            <summary>
            通过主键来真实删除单个实体（数据库不再存在）
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="keyValues">删除实体的主键，单个实体的主键，参数数组是为了满足联合主键的情况</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.Delete``1(``0)">
            <summary>
            为现有数据添加删除标识，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="entity">将被删除的数据实体</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.Delete``1(System.String)">
            <summary>
            通过主键来删除数据，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="id">删除实体的主键</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDeleteRange``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量从数据库中删除数据记录，直接移除无法恢复
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="collection">将被删除的数据实体集合</param>
            <returns>将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDeleteRange``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Action{``0})">
            <summary>
            批量从数据库中删除数据记录，直接移除无法恢复
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="collection">将被删除的数据实体集合</param>
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <returns>通过删除条件后，将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDeleteRange``1(System.String[])">
            <summary>
            通过主键来真实删除多个实体（数据库不再存在）
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="ids">删除多个实体的主键</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDeleteRange``1(System.Predicate{``0},System.Action{``0},System.String[])">
            <summary>
            通过主键来真实删除多个实体（数据库不再存在）
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>将被删除的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DeleteRange``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            批量删除数据，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="collection">将被删除的数据实体集合</param>
            <returns>将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DeleteRange``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Action{``0})">
            <summary>
            批量删除数据，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="collection">将被删除的数据实体集合</param>
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <returns>通过删除条件后，将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DeleteRange``1(System.String[])">
            <summary>
            通过主键来删除数据，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="ids">删除多个实体的主键</param>
            <returns>将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DeleteRange``1(System.Predicate{``0},System.Action{``0},System.String[])">
            <summary>
            通过主键来删除数据，处理为假删除，仅修改删除标识字段；假删除后最后修改时间通常即为删除时间
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>将被删除的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbSave``1(``0)">
            <summary>
            根据 SaveMode 属性的设置判断更新原始数据，不再对更新的数据做修改时间等处理。
            注意：此时仅做标记，当调用 <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges"/> 或者 <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges(System.Boolean)"/> 时，才提交到数据源中执行操作。
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <param name="entity">将被保存的数据实体</param>
            <returns>将被保存的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.Save``1(``0)">
            <summary>
            根据 SaveMode 属性的设置判断添加或更新数据，并自动处理创建人、创建时间、修改人、修改时间等属性
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <param name="entity">将被保存的数据实体</param>
            <returns>将被保存的数据实体</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbSaveRange``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            根据 SaveMode 属性的设置判断批量直接更新对象数据，不再对更新的数据做修改时间等处理
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <param name="collection">将被保存的数据实体集合</param>
            <param name="onSave">保存数据前要执行的操作</param>
            <returns>将被保存的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.SaveRange``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            根据 SaveMode 属性的设置批量更新数据
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <param name="collection">将被保存的数据实体集合</param>
            <param name="onSave">保存数据前要执行的操作</param>
            <returns>将被保存的数据实体集合</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.SaveChangesResult(System.Object,System.Object,System.Int32,System.Nullable{System.Boolean})">
            <summary>
            提交数据修改到数据源，并返回数据处理结果，注意，如果用户没有修改数据的情况下进行保存，可能不会进行更新数据
            </summary>
            <param name="changesResult">数据修改的处理结果</param>
            <param name="changesSource">触发数据修改的原始数据</param>
            <param name="minChangesCount">修改应该影响的数据条数，如果提交结果计算的条数小于指定值，则操作结果设置为失败</param>
            <param name="failure">是否强制设置操作结果为失败，设置为 null 时根据数据条数自动判断</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.SaveResult``2(``1)">
            <summary>
            对提交的编辑视图数据进行保存，并返回处理结果。
            注意：为了避免主键重复冲突，已被标识删除的数据也会被修改更新。
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <typeparam name="TEditModel">与被保存数据类型对应的数据编辑类型</typeparam> 
            <param name="editModel">被编辑的数据修改结果</param>
            <returns>数据保存的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.SaveResult``1(``0,System.Object)">
            <summary>
            保存数据，提交到数据库并返回数据处理结果
            </summary>
            <typeparam name="TEntity">保存数据实体类型</typeparam>
            <param name="saveEntity">被编辑后的数据修改结果</param>
            <param name="saveSource">触发此次保存操作的来源</param>
            <returns>数据保存的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDeleteResult``1(System.String[])">
            <summary>
            删除数据，并返回数据处理结果
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDeleteResult``1(System.Predicate{``0},System.String[])">
            <summary>
            删除数据，并返回数据处理结果
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbDeleteResult``1(System.Predicate{``0},System.Action{``0},System.String[])">
            <summary>
            删除数据，并返回数据处理结果
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DeleteResult``1(System.String[])">
            <summary>
            删除数据，并返回数据处理结果
            通常处理为假删除，仅修改删除标识字段
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DeleteResult``1(System.Predicate{``0},System.String[])">
            <summary>
            删除数据，提交到数据库并返回数据处理结果
            通常处理为假删除，仅修改删除标识字段
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DeleteResult``1(System.Predicate{``0},System.Action{``0},System.String[])">
            <summary>
            删除数据，提交到数据库并返回数据处理结果
            通常处理为假删除，仅修改删除标识字段
            </summary>
            <typeparam name="TEntity">删除数据实体类型</typeparam> 
            <param name="predicate">无法在通过 Linq 查询数据时直接进行筛选的删除先决条件</param>
            <param name="onDelete">删除数据时将要执行的操作，未通过删除条件的数据不执行</param>
            <param name="ids">删除多个实体的主键</param>
            <returns>数据删除的操作结果</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbGetByKey(System.Type,System.Object[])">
            <summary>
            通过主键获取数据，只要数据库存在均返回数据
            </summary>
            <param name="entityType">获取数据的类型</param>
            <param name="keyValues">要获取实体的主键，单个实体的主键，参数数组是为了满足联合主键的情况</param>
            <returns>主键对应的数据记录</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbGetByKey``1(System.Object[])">
            <summary>
            通过主键获取数据，只要数据库存在均返回数据
            </summary>
            <typeparam name="TEntity">获取数据的类型</typeparam>
            <param name="keyValues">要获取实体的主键，单个实体的主键，参数数组是为了满足联合主键的情况</param>
            <returns>主键对应的数据记录</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbGet``1(System.String)">
            <summary>
            通过主键获取数据记录，只要数据库存在均返回数据
            如果数据库不存在记录，则返回 null
            </summary>
            <typeparam name="TEntity">获取数据的类型</typeparam>
            <param name="id">要获取实体的主键</param>
            <returns>主键对应的数据记录</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.Get``1(System.String)">
            <summary>
            通过主键获取有效数据记录，如果主键对应数据的 TagDeleted 值为 true 则返回 null
            </summary>
            <typeparam name="TEntity">获取数据的类型</typeparam>
            <param name="id">要获取实体的主键</param>
            <returns>主键对应的数据记录</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.ValidGet``1(System.String)">
            <summary>
            通过主键获取有效数据记录，如果主键对应数据的 TagDeleted、TagDisabled 值任一为 true 则返回 null
            </summary>
            <typeparam name="TEntity">获取数据的类型</typeparam>
            <param name="id">要获取实体的主键</param>
            <returns>主键对应的数据记录</returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（只要符合直接指定查询条件的数据均视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicate2">数据查询优先筛选条件2</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（符合直接指定查询条件的数据，并且TagDeleted 值为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（符合直接指定查询条件的数据，并且TagDeleted 值为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的数据（符合直接指定查询条件的数据，并且TagDeleted 值为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicate2">数据查询优先筛选条件2</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.ValidQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的有效数据（符合直接指定查询条件的数据，并且TagDeleted、TagDisabled 值均为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.ValidQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的有效数据（符合直接指定查询条件的数据，并且TagDeleted、TagDisabled 值均为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.ValidQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            查询符合条件的有效数据（符合直接指定查询条件的数据，并且TagDeleted、TagDisabled 值均为 false 的数据视为符合条件）
            </summary>
            <typeparam name="TEntity">要查询的数据类型</typeparam>
            <param name="predicate">数据查询优先筛选条件</param>
            <param name="predicate2">数据查询优先筛选条件2</param>
            <param name="predicates">数据查询筛选条件</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbView``1(System.String)">
            <summary>
            获取用于查看的实体数据，已初始化了 SaveMode 属性；
            若给定的主键为空值：将视为新增模式，初始化一个默认实例，并设置 SaveMode 为 Insert 状态
            如果给定的主键值不为空值：如对应的数据为 null，则直接返回 null;
            如果数据库存在记录，则初始化 SaveMode 为 Update 状态。
            注意：为了避免主键重复冲突，已被标识删除的数据也会被返回，并用于修改更新。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.DbGetForSave``2(``1)">
            <summary>
            从数据库中获取用于保存的实体数据，并使用提交的编辑结果对数据字段内容赋值。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TEditModel"></typeparam>
            <param name="editModel"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IBbDataService.GetForSave``2(``1)">
            <summary>
            从数据库中获取用于保存的实体数据，并使用提交的编辑结果对数据字段内容赋值。
            注意：如果修改的数据是已被标识为删除的数据时，将会返回 null。
            </summary>
            <typeparam name="TEntity"></typeparam>
            <typeparam name="TEditModel"></typeparam>
            <param name="editModel"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.IKdDataSession">
            <summary>
            包含数据管理服务程序的数据会话接口
            </summary> 
        </member>
        <member name="P:KdCore.Data.IKdDataSession.SessionKey">
            <summary>
            数据会话标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataSession.DataLogsDetails">
            <summary>
            获取或设置是否启用用户操作自动日志（保存到数据库的日志）（EntityFramework 每次CURD操作的详细日志）
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataSession.DataLogsSerialBase">
            <summary>
            获取或设置用户操作自动日志（保存到数据库的日志）的批次序号基数
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataSession.CurrUser">
            <summary>
            当前数据操作用户
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataSession.DebugMode">
            <summary>
            获取或设置是否调试模式，调式模式下会输出更多的日志信息等
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataSession.DataLogsUnify">
            <summary>
            获取或设置用户操作自动日志的统一格式化设置
            </summary>
        </member>
        <member name="M:KdCore.Data.IKdDataSession.SaveChanges">
            <summary>
             将在此次数据操作上下文中所做的所有更改保存到基础数据库。
            </summary>
            <returns>已写入基础数据库的对象的数目。</returns>
        </member>
        <member name="M:KdCore.Data.IKdDataSession.Set(KdCore.Data.IBbDataService,System.Type,KdCore.Data.Users.IKdUser)">
            <summary>
            更新当前的会话中的数据服务程序
            </summary>
            <param name="service"></param>
            <param name="type"></param>
            <param name="user"></param>
        </member>
        <member name="M:KdCore.Data.IKdDataSession.Get``1(KdCore.Data.Users.IKdUser)">
            <summary>
            获取一个添加到当前数据会话的数据服务程序
            </summary>
            <typeparam name="TDataService"></typeparam> 
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IKdDataSession.Get(System.Type,KdCore.Data.Users.IKdUser)">
            <summary>
            获取一个添加到当前数据会话的数据服务程序
            </summary>
            <param name="dataServiceType"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IKdDataSession.Add(KdCore.Data.IBbDataService,System.Type)">
            <summary>
            将数据服务程序添加到当前的会话中
            </summary>
            <param name="service"></param>
            <param name="type"></param>
        </member>
        <member name="M:KdCore.Data.IKdDataSession.Remove(KdCore.Data.IBbDataService)">
            <summary>
            从会话中移除数据服务程序
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:KdCore.Data.IKdDataSession.Remove``1">
            <summary>
            从会话中移除数据服务程序
            </summary>
        </member>
        <member name="M:KdCore.Data.IKdDataSession.GetEntityService``1(KdCore.Data.Users.IKdUser)">
            <summary>
            获取一个用于指定数据类型的数据服务程序，并添加到当前数据会话
            </summary>
            <typeparam name="TEntityType"></typeparam>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.IKdDataSession.LogsProvider">
            <summary>
            系统日志的数据操作提供程序
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataSession.UserProvider">
            <summary>
            用户及授权的数据服务
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataSession.TaskProvider">
            <summary>
            待办事项的数据服务
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataSession.AnnexProvider">
            <summary>
            附件数据操作提供程序
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataSession.SmsProvider">
            <summary>
            短信数据操作提供程序
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataSession.NotifyProvider">
            <summary>
            系统提醒通知的数据服务
            </summary>
        </member>
        <member name="T:KdCore.Data.KdDataSession">
            <summary>
            包含数据管理服务程序的数据会话
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.Logger">
            <summary>
            日志记录类
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.SessionKey">
            <summary>
            数据会话标识
            </summary>
        </member>
        <member name="F:KdCore.Data.KdDataSession._currUser">
            <summary>
            当前数据操作用户
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.CurrUser">
            <summary>
            当前数据操作用户
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.DebugMode">
            <summary>
            获取或设置是否调试模式，调式模式下会输出更多的日志信息等
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.DataLogsDetails">
            <summary>
            获取或设置是否启用用户操作自动日志（保存到数据库的日志）（EntityFramework 每次CURD操作的详细日志）
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.DataLogsSerialBase">
            <summary>
            获取或设置用户操作自动日志（保存到数据库的日志）的批次序号基数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.DataLogsUnify">
            <summary>
            获取或设置用户操作自动日志的统一格式化设置
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.ServicePool">
            <summary>
            获取或设置存储数据服务程序的缓存池
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataSession.#ctor(System.String,KdCore.Data.Users.IKdUser)">
            <summary>
            构造方法
            </summary>
            <param name="sessionKey"></param>
            <param name="user"></param>
        </member>
        <member name="M:KdCore.Data.KdDataSession.SaveChanges">
            <summary>
             将在此次数据操作上下文中所做的所有更改保存到基础数据库。
            </summary>
            <returns>已写入基础数据库的对象的数目。</returns>
        </member>
        <member name="M:KdCore.Data.KdDataSession.ResetDataContext">
            <summary>
            重置当前的数据上下文，以便在数据状态错误时重新加载数据
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataSession.Set(KdCore.Data.IBbDataService,System.Type,KdCore.Data.Users.IKdUser)">
            <summary>
            更新当前的会话中的数据服务程序
            </summary>
            <param name="service"></param>
            <param name="type"></param>
            <param name="user"></param>
        </member>
        <member name="M:KdCore.Data.KdDataSession.Get(System.Type,KdCore.Data.Users.IKdUser)">
            <summary>
            获取一个添加到当前数据会话的数据服务程序
            </summary>
            <param name="serviceType"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataSession.Get``1(KdCore.Data.Users.IKdUser)">
            <summary>
            获取一个添加到当前数据会话的数据服务程序
            </summary>
            <typeparam name="TDbService"></typeparam>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataSession.GetEntityService``1(KdCore.Data.Users.IKdUser)">
            <summary>
            获取一个用于指定数据类型的数据服务程序，并添加到当前数据会话
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataSession.Add(KdCore.Data.IBbDataService,System.Type)">
            <summary>
            将数据服务程序添加到当前的会话中
            </summary>
            <param name="service"></param>
            <param name="serviceType"></param>
        </member>
        <member name="M:KdCore.Data.KdDataSession.Remove(KdCore.Data.IBbDataService)">
            <summary>
            从会话中移除数据服务程序
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:KdCore.Data.KdDataSession.Remove``1">
            <summary>
            从会话中移除数据服务程序
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataSession.Dispose">
            <summary>
            释放当前会话，并释放涉及到的所有数据服务程序
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.LogsProvider">
            <summary>
            系统日志的数据操作提供程序
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.UserProvider">
            <summary>
            用户及授权的数据服务
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.NotifyProvider">
            <summary>
            系统提醒通知的数据服务
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.TaskProvider">
            <summary>
            待办事项的数据服务
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.AnnexProvider">
            <summary>
            附件数据操作提供程序
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataSession.SmsProvider">
            <summary>
            短信数据操作提供程序
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataSession.GetService``1(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            获取数据服务程序
            </summary>
            <typeparam name="TDataService">数据服务程序类型参数</typeparam> 
            <param name="user">当前进行数据操作的用户</param>
            <param name="dataSessionKey">用来初始化的数据会话的键值</param> 
            <returns>获取到的数据服务程序</returns>
        </member>
        <member name="T:KdCore.Data.Dicts.KdDictAttribute">
            <summary>
            数据字典属性标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictAttribute.DictCode">
            <summary>
            标识属性使用的数据字典编码标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictAttribute.TextProperty">
            <summary>
            与被标注属性对应的、用来保存数据字典显示文本的属性名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictAttribute.ItemCode">
            <summary>
            标识属性使用的数据字典时，可选范围的根节点的字典值
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictAttribute.UseTreeMode">
            <summary>
            标识属性是否使用树型显示结构
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictAttribute.MultiSelect">
            <summary>
            标识属性是否使用多选模式
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictAttribute.DictDependOn">
            <summary>
            标识属性对应的文本字段名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictAttribute.ItemDependOn">
            <summary>
            标识属性对应的文本字段名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictAttribute.EditModelType">
            <summary>
            该数据字典绑定设置针对的编辑模型的数据类型
            </summary>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDictAttribute.#ctor(System.String,System.String)">
            <summary>
            构造方法
            </summary>
            <param name="textProperty">与被标注属性对应的、用来保存数据字典显示文本的属性名称</param>
            <param name="dictCode">被标注属性使用的数据字典标识编码，为空时直接读取被标注属性的名称</param>
        </member>
        <member name="T:KdCore.Data.Dicts.KdDictManager">
            <summary>
            数据字典管理程序
            </summary>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDictManager.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="T:KdCore.Data.Dicts.KdDict">
            <summary>
            数据字典目录
            </summary>
        </member>
        <member name="F:KdCore.Data.Dicts.KdDict.ASYNC_CODE">
            <summary>
            数据字典设置同步识别编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDict.ExpiredMinutes">
            <summary>
            数据缓存有效时间，超过时间后自动重置
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDict.Func_FilterDictCode">
            <summary>
            获取或设置数据字典标识字符串过滤处理方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDict.Func_FilterDictNodeName">
            <summary>
            获取或设置数据字典节点名称字符串过滤处理方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDict.Func_FilterDictNodeCode">
            <summary>
            获取或设置数据字典节点标识字符串过滤处理方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDict.FilterDictCode(System.String)">
            <summary>
            过滤数据字典标识，获取有效的标识字符串
            </summary>
            <param name="dictCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDict.FilterDictNodeName(System.String)">
            <summary>
            过滤数据字典节点名称，获取有效的节点名称
            </summary>
            <param name="dictCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDict.FilterDictNodeCode(System.String)">
            <summary>
            过滤数据字典节点标识，获取有效的节点标识
            </summary>
            <param name="dictCode"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDict.Manager">
            <summary>
            数据字典管理程序
            </summary>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDict.ResetCaches">
            <summary>
            重置缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDict.GetDict(System.String)">
            <summary>
            获取指定识别编码的数据字典
            </summary>
            <param name="dictCode">数据字典识别编码</param>
            <returns>数据字典项</returns>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDict.GetItem(System.String,System.String)">
            <summary>
            获取指定的数据字典项
            </summary>
            <param name="dictCode">数据字典识别编码</param>
            <param name="codePath">数据字典项的识别编码路径</param>  
            <returns>数据字典项</returns>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDict.GetItemByValue``1(System.String,``0)">
            <summary>
            获取指定的数据字典项
            </summary>
            <param name="dictCode">数据字典识别编码</param>
            <param name="itemValue">数据字典项的识别编码路径</param>  
            <returns>数据字典项</returns>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDict.GetItemNameByPath(System.String,System.String)">
            <summary>
            获取指定的数据字典项的名称
            </summary>
            <param name="dictCode">数据字典识别编码</param>
            <param name="codePath">数据字典项的识别编码路径</param>  
            <returns>数据字典项的名称</returns>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDict.GetItemNameByValue``1(System.String,``0)">
            <summary>
            获取指定的数据字典项的名称
            </summary>
            <param name="dictCode">数据字典识别编码</param>
            <param name="itemValue">数据字典项的识别编码路径</param>  
            <returns>数据字典项的名称</returns>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDict.GetItems(System.String,System.String[])">
            <summary>
            获取指定的数据字典项集合
            </summary>
            <param name="dictCode">数据字典识别编码</param>
            <param name="codePaths">数据字典项的识别编码路径</param>  
            <returns>数据字典项</returns>
        </member>
        <member name="M:KdCore.Data.Dicts.KdDict.GetItemNames(System.String,System.String[])">
            <summary>
            获取指定的数据字典项文本名称集合
            </summary>
            <param name="dictCode">数据字典识别编码</param>
            <param name="codePaths">数据字典项的识别编码路径</param>  
            <returns>数据字典项</returns>
        </member>
        <member name="T:KdCore.Data.Dicts.KdDictItem">
            <summary>
             数据库表：数据字典中的数据项（KdDictItem）
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictItem.TreeCode">
            <summary>
            获取或设置节点所在树的识别编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictItem.DictCode">
            <summary>
            获取或设置所在数据字典标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictItem.NodeName">
            <summary>
            获取或设置节点名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Dicts.KdDictItem.NodeCode">
            <summary>
            获取或设置节点编码
            </summary>
        </member>
        <member name="T:KdCore.Data.EditModels.KdUserGroupEdit">
            <summary>
             用户分组编辑数据实体
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserGroupEdit.SortNum">
            <summary>
            获取或设置显示顺序
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserGroupEdit.TagDisabled">
            <summary>
            获取或设置禁用状态标识
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserGroupEdit.GroupName">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserGroupEdit.GroupUserIds">
            <summary>
            分组用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserGroupEdit.GroupUserNames">
            <summary>
            分组用户姓名
            </summary>
        </member>
        <member name="T:KdCore.Data.EditModels.KdChgPwd">
            <summary>
            系统用户修改密码视图对象
            </summary> 
        </member>
        <member name="P:KdCore.Data.EditModels.KdChgPwd.IsForce">
            <summary>
            获取或设置本次修改是否是系统强制要求
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdChgPwd.NoNeedOldPwd">
            <summary>
            获取或设置是否需要验证原始密码
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdChgPwd.PwdIsClearText">
            <summary>
            获取或设置密码是否需要加密
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdChgPwd.UserOldPwd">
            <summary>
            获取或设置用户原始密码（MD5加密）
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdChgPwd.UserNewPwd">
            <summary>
            获取或设置用户登录密码（MD5加密）
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdChgPwd.UserCfmPwd">
            <summary>
            获取或设置用户登录密码（MD5加密）
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdChgPwd.UrlFrom">
            <summary>
            获取或设置用户进入修改密码界面之前的界面路径
            </summary>
        </member>
        <member name="M:KdCore.Data.EditModels.KdChgPwd.PwdDecryptRsa(System.Security.Cryptography.RSACryptoServiceProvider)">
            <summary>
            解密提交的 RSA 密码
            </summary>
            <param name="rsaProvider"></param>
        </member>
        <member name="T:KdCore.Data.EditModels.KdTreeNodeEdit">
            <summary>
            树结构数据项编辑视图模型基类
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdTreeNodeEdit.ParentId">
            <summary>
            获取或设置上级节点
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdTreeNodeEdit.NodeName">
            <summary>
            获取或设置数据项的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdTreeNodeEdit.NodeCode">
            <summary>
            获取或设置数据项的值
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdTreeNodeEdit.SortNum">
            <summary>
            获取或设置显示顺序
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdTreeNodeEdit.ItemValue1">
            <summary>
            获取或设置数据项值1
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdTreeNodeEdit.ItemValue2">
            <summary>
            获取或设置数据项值2
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdTreeNodeEdit.ItemValue3">
            <summary>
            获取或设置数据项值3
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdTreeNodeEdit.ItemValue4">
            <summary>
            获取或设置数据项值4
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdTreeNodeEdit.ItemDesc">
            <summary>
            获取或设置描述说明
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdTreeNodeEdit.Notes">
            <summary>
            获取或设置备注
            </summary>
        </member>
        <member name="T:KdCore.Data.EditModels.KdDictItemEdit">
            <summary>
            数据字典中数据项编辑视图模型
            </summary>
        </member>
        <member name="T:KdCore.Data.EditModels.KdUserEdit">
            <summary>
            系统用户编辑视图对象
            </summary> 
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.IsAdmin">
            <summary>
            获取或设置用户管理员账号，非管理员用户不能登录后台管理系统进行管理操作
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.UserSN">
            <summary>
            获取或设置用户编码/工号
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.UserName">
            <summary>
            获取或设置用户登录账号
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.RealName">
            <summary>
            获取或设置真实姓名
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.UserMobile">
            <summary>
            获取或设置用户手机号码
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.UserMail">
            <summary>
            获取或设置用户电子邮箱
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.UserPhone">
            <summary>
            获取或设置用户电话号码
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.OwnerCorpCode">
            <summary>
            获取或设置所属单位标识编码ID
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.OwnerCorpName">
            <summary>
            获取或设置所属单位名称，通常保存的可能是简称，仅用来在数据库查询时方便识别是哪家单位的数据
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.OwnerDeptId">
            <summary>
            获取或设置所属部门主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.OwnerDeptName">
            <summary>
            获取或设置所属部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.DutyId">
            <summary>
            获取或设置用户职务主键
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.RoleNames">
            <summary>
            获取或设置其成员资格的角色的名称的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.AllowCorpCodes">
            <summary>
            获取或设置数据授权范围的单位标识编码的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.AllowDeptIds">
            <summary>
            获取或设置数据授权范围的部门主键的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.SpellFull">
            <summary>
            获取或设置用户真实姓名的拼音，主要用于搜索
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.SpellAbbr">
            <summary>
            获取或设置用户真实姓名的拼音缩写，主要用于搜索（仅包含第一个字母，如zh、ch、sh时不包含h）
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.SortNum">
            <summary>
            获取或设置显示顺序
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.TagDisabled">
            <summary>
            获取或设置禁用状态标识
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdUserEdit.Notes">
            <summary>
            获取或设置备注，通常用于保存用户主动输入的一些备注说明
            </summary>
        </member>
        <member name="T:KdCore.Data.EditModels.KdRoleEdit">
            <summary>
            系统角色编辑视图对象
            </summary> 
        </member>
        <member name="P:KdCore.Data.EditModels.KdRoleEdit.RoleName">
            <summary>
            获取或设置角色名称
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdRoleEdit.SortNum">
            <summary>
            获取或设置显示顺序
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdRoleEdit.TagDisabled">
            <summary>
            获取或设置禁用状态标识
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdRoleEdit.Notes">
            <summary>
            获取或设置备注，通常用于保存用户主动输入的一些备注说明
            </summary>
        </member>
        <member name="T:KdCore.Data.EditModels.KdItemPickEdit">
            <summary>
            数据项选择视图模型
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdItemPickEdit.ItemValues">
            <summary>
            获取或设置数据项选择的值
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdItemPickEdit.ItemTexts">
            <summary>
            获取或设置数据项选择的文本
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdItemPickEdit.PickTitle">
            <summary>
            获取或设置当前选择操作的标题
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdItemPickEdit.Message">
            <summary>
            获取或设置用户选择操作提示
            </summary>
        </member>
        <member name="T:KdCore.Data.EditModels.KdMenuItemEdit">
            <summary>
            菜单项编辑视图模型
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.TreeCode">
            <summary>
            获取或设置菜单所在树的识别标识
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.NodeName">
            <summary>
            获取或设置菜单名称
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.NodeCode">
            <summary>
            获取或设置菜单名称
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.ParentId">
            <summary>
            获取或设置菜单的上级菜单
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.IconPath">
            <summary>
            获取或设置菜单图片路径
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.UrlPath">
            <summary>
            获取或设置菜单对应的普通功能页面路径
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.UnitSign">
            <summary>
            获取或设置关联的功能操作的标识
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.IsBindUnit">
            <summary>
            获取或设置是否与关联的功能单元进行绑定，绑定后该功能模块视其所在菜单为默认菜单
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.OpenTarget">
            <summary>
            获取或设置菜单打开的页面标签
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.IsHidden">
            <summary>
            获取或设置是否在主菜单显示
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.SortNum">
            <summary>
            获取或设置同级菜单的显示顺序号
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.TagDisabled">
            <summary>
            获取或设置菜单是否被禁用
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.MenuParam1">
            <summary>
            获取或设置菜单的附加参数1
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.MenuParam2">
            <summary>
            获取或设置菜单的附加参数2
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.MenuParam3">
            <summary>
            获取或设置菜单的附加参数3
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.MenuParam4">
            <summary>
            获取或设置菜单的附加参数4
            </summary>
        </member>
        <member name="P:KdCore.Data.EditModels.KdMenuItemEdit.Notes">
            <summary>
            获取或设置菜单的备注说明
            </summary>
        </member>
        <member name="T:KdCore.Data.Users.KdEntityTreeCorpNode`1">
            <summary>
            带有单位归属标识的树结构节点定义
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdEntityTreeCorpNode`1.OwnerCorpCode">
            <summary>
            所属单位编码标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdEntityTreeCorpNode`1.OwnerCorpName">
            <summary>
            所属单位名称，通常保存的是简称，仅用来在数据库查询时方便识别是哪家单位的数据
            </summary>
        </member>
        <member name="T:KdCore.Data.Users.KdEntityTreeCorpNode`1.KdTree">
            <summary>
            以当前类型为节点的树结构的简单定义
            </summary>
        </member>
        <member name="T:KdCore.Data.Users.KdEntityTreeCorpNode`1.KdManager">
            <summary>
            以当前类型为节点的树结构的管理器的简单定义
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.KdManager.InitTreeCatalog">
            <summary>
            初始化树结构目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.KdManager.SaveTreeCatalog">
            <summary>
            带有单位归属标识的树结构目录是自动从用户单位生成的，不能单独进行保存处理
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdEntityTreeCorpNode`1.Manager">
            <summary>
            树结构节点管理程序
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.ResetCaches">
            <summary>
            重置缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.ResetCaches(System.String)">
            <summary>
            重置缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.GetAllCorpTrees(System.Linq.Expressions.Expression{System.Func{KdCore.Data.Users.KdEntityTreeCorpNode{`0}.KdTree,System.Boolean}})">
            <summary>
            获取所有单位数据的树结构
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.GetCorpTree(System.String)">
            <summary>
            获取指定单位标识编码的树结构
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.GetCorpNodes(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取指定单位标识编码的节点集合
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.GetCorpTreeByCorpCode(System.String)">
            <summary>
            获取指定单位识别编码的树结构
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.GetCorpNodesByCorpCode(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取指定单位识别编码的节点集合
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.GetAllCorpNodes(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取所有单位的全部节点集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.GetCorpNodes(System.Boolean,System.String[])">
            <summary>
            获取所有单位的全部节点集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.GetCorpNodeById(System.String,System.String,System.Boolean)">
            <summary>
            获取指定主键的节点
            </summary>
            <param name="corpCode">节点归属单位的标识编码</param> 
            <param name="nodeId">节点主键</param> 
            <param name="onlyValid">仅查询有效数据</param> 
            <returns>节点</returns>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.GetCorpNodeById(System.String,System.Boolean)">
            <summary>
            获取指定主键的节点
            </summary>
            <param name="nodeId">节点主键</param> 
            <param name="onlyValid">仅查询有效数据</param> 
            <returns>节点</returns>
        </member>
        <member name="M:KdCore.Data.Users.KdEntityTreeCorpNode`1.GetCorpNode(System.String,System.String,System.Boolean)">
            <summary>
            获取指定节点识别编码路径的节点
            </summary>
            <param name="corpCode">节点归属单位的标识编码</param> 
            <param name="nodePath">节点识别编码路径</param> 
            <param name="onlyValid">仅查询有效数据</param> 
            <returns>数据字典项</returns>
        </member>
        <member name="T:KdCore.Data.Users.BbUserCachePool">
            <summary>
            与用户相关的缓存池
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.BbUserCachePool.Register">
            <summary>
            注册用户专用的缓存管理
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.BbUserCachePool.GetBoundCacheType(System.Type)">
            <summary>
            获取与指定数据类型关联绑定的缓存池的类型标识
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.Users.BbUserCachePool.UserCaches">
            <summary>
            用户数据缓存池
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.BbUserCachePool.GetBoundKey(System.Security.Principal.IPrincipal)">
            <summary>
            获取在缓存池中与指定用户关联绑定的缓存的键
            </summary>
            <param name="bound"></param>
        </member>
        <member name="M:KdCore.Data.Users.BbUserCachePool.GetBoundKey(System.Object)">
            <summary>
            获取在缓存池中与指定数据关联绑定的缓存的键
            </summary>
            <param name="bound"></param>
        </member>
        <member name="T:KdCore.Data.Users.KdUserGroup">
            <summary>
             数据库表：用户或系统中自定义的用户分组
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserGroup.GroupName">
            <summary>
            分组名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserGroup.GroupCode">
            <summary>
            分组识别标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserGroup.OwnerCode">
            <summary>
            所属数据的识别标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserGroup.GroupUserIds">
            <summary>
            分组用户主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserGroup.GroupUserNames">
            <summary>
            分组用户姓名
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserGroup.GetDataTitle">
            <summary>
            获取当前数据的标题名称，用于生成待办事项等关联数据时使用，或数据删除时提示显示等
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserGroup.ToListItem(System.Boolean)">
            <summary>
            转换为可选项
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Users.KdUserNotify">
            <summary>
            系统用户提醒消息
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.ShowPattern">
            <summary>
            提醒消息显示外观模式
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.CreateTime">
            <summary>
            消息提醒创建时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.ReadFlag">
            <summary>
            提醒消息是否已读标识，true为已读，false为未读
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.RankLevel">
            <summary>
            通知提醒优先级，数字越大越优先；
            最好在具体项目中制定一个级别的枚举，用来固定级别，避免不同代码之后造成优先级混乱
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.NotifyType">
            <summary>
            消息提醒类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.NotifyTypeName">
            <summary>
            消息提醒类型显示名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.SourceType">
            <summary>
            消息来源类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.SourceId">
            <summary>
            消息来源ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.ExpireTime">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.IsExpired">
            <summary>
            提醒消息是否已过期，通常已过期消息不再主动提醒用户
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.NotifyTitle">
            <summary>
            提醒消息标题
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.NotifyIsHtml">
            <summary>
            提醒消息是否 HTML 格式；如是 HTML 格式，则不进行处理，直接输出显示，否则可能会进行一些格式上的自动处理
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.NotifyUrl">
            <summary>
            提醒消息关联的 URL 地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.SourceUrl">
            <summary>
            消息来源关联的 URL 地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.NotifyContent">
            <summary>
            提醒消息内容
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.RecipientId">
            <summary>
            提醒消息接收用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.RecipientName">
            <summary>
            提醒消息接收用户姓名
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.ReadTime">
            <summary>
            用户阅读时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.SenderId">
            <summary>
            消息创建用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.SenderName">
            <summary>
            消息创建用户姓名
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.Remarks">
            <summary>
            获取或设置说明，通常用于保存系统程序运行过程中产生的一些说明注释
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.HasNextNotify">
            <summary>
            是否还有下一条提醒消息
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.NextNotifyId">
            <summary>
            下一条提醒消息主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserNotify.UrlShowNotify">
            <summary>
            系统中显示提醒消息时的加载地址（临时变量，不在数据库中保存）
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserNotify.GetNotifyTypeName">
            <summary>
            获取提醒类型显示文字，如果未对类型名称赋值，自动处理为“系统提醒”
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserNotify.GetNotifyShowTitle">
            <summary>
            获取提醒显示标题，如果未对类型名称赋值，自动处理为“系统提醒”
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Users.KdUserCorp">
            <summary>
            系统使用单位定义
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserCorp.UseMultiCorps">
            <summary>
            获取或设置是否多家单位同时使用该系统
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserCorp.OwnerCorpCode">
            <summary>
            获取或设置在多家单位同时使用系统时，主单位/总公司的识别标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserCorp.OwnerCorp">
            <summary>
            获取当前项目的主单位/公司
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserCorp.IsOwnerCorpCode(System.String)">
            <summary>
            判断指定的单位编码是否是主单位/总公司的识别标识
            </summary>
            <param name="corpCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserCorp.InitCorps">
            <summary>
            初始化用户单位定义
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserCorp.GetAllCorps">
            <summary>
            获取当前所有的单位定义
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserCorp.GetCorps(System.String[])">
            <summary>
            获取当前所有的单位定义
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserCorp.GetCorp(System.String)">
            <summary>
            获取指定识别编码的单位定义
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserCorp.SortNum">
            <summary>
            排序顺序号
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserCorp.CorpCode">
            <summary>
            使用单位编码标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserCorp.CorpName">
            <summary>
            使用单位名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserCorp.CorpShort">
            <summary>
            使用单位简称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserCorp.CorpTitle">
            <summary>
            获取单位的名称标题，有简称时返回简称，没有简称时返回全名
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserCorp.GetDataTitle">
            <summary>
            获取当前数据的标题名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserCorp.ToListItem(System.Boolean)">
            <summary>
            转换为可选数据项
            </summary>
            <param name="moreDataMode"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Users.IKdRole">
            <summary>
            系统角色规范接口
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdRole.RoleName">
            <summary>
            获取或设置角色名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdRole.AuthSigns">
            <summary>
            获取或设置角色拥有的权限标识（集合）
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdRole.IsValid">
            <summary>
            获取数据有效标识
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.IKdRole.HasAuthSign(System.String)">
            <summary>
            获取当前角色是否用于指定标识的操作权限
            </summary>
            <param name="authSignCode"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Users.KdUserDuty">
            <summary>
            用户职务设置定义
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserDuty.GetDuty(System.String)">
            <summary>
            获取指定主键的用户职务
            </summary>
            <param name="dutyId">用户职务主键</param>
            <returns>用户职务</returns>
        </member>
        <member name="T:KdCore.Data.Users.KdUserDept">
            <summary>
            用户部门设置定义
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserDept.GetDept(System.String)">
            <summary>
            获取指定主键的用户部门
            </summary>
            <param name="deptId">用户部门主键</param>
            <returns>用户部门</returns>
        </member>
        <member name="T:KdCore.Data.Users.KdUserDataType">
            <summary>
            用户相关数据类型
            </summary>
        </member>
        <member name="F:KdCore.Data.Users.KdUserDataType.None">
            <summary>
            未设置，默认
            </summary>
        </member>
        <member name="F:KdCore.Data.Users.KdUserDataType.Depts">
            <summary>
            部门数据
            </summary>
        </member>
        <member name="F:KdCore.Data.Users.KdUserDataType.Dutys">
            <summary>
            职务数据
            </summary>
        </member>
        <member name="F:KdCore.Data.Users.KdUserDataType.Roles">
            <summary>
            角色数据
            </summary>
        </member>
        <member name="F:KdCore.Data.Users.KdUserDataType.Users">
            <summary>
            用户数据
            </summary>
        </member>
        <member name="T:KdCore.Data.Users.IKdUser">
            <summary>
            系统用户规范接口
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.MarkCode">
            <summary>
            获取或设置数据的唯一标识特征码，应由系统随机生成且不可编辑，相对于第二个主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.UserType">
            <summary>
            获取或设置用户类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.SecurityStamp">
            <summary>
            获取或设置数据的唯一标识特征码。
            一个随机值，每当用户凭据变化时应更改 （如更改密码，登录删除）
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.IsAdmin">
            <summary>
            获取或设置用户管理员账号，非管理员用户不能登录后台管理系统进行管理操作
            </summary> 
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.UserSN">
            <summary>
            获取或设置用户唯一编码/工号
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.IsLocked">
            <summary>
            获取或设置用户锁定状态，锁定的用户不能登录系统进行操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.LockedTime">
            <summary>
            获取或设置用户锁定状态更改的时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.UserName">
            <summary>
            获取或设置用户登录账号
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.UserPwd">
            <summary>
            获取或设置用户登录密码（MD5加密）
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.RealName">
            <summary>
            获取或设置真实姓名
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.UserMail">
            <summary>
            获取或设置用户电子邮箱
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.UserMailVerify">
            <summary>
            获取或设置用户电子邮箱是否已验证核实
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.UserMobile">
            <summary>
            获取或设置用户手机号码
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.UserMobileVerify">
            <summary>
            获取或设置用户手机号码是否已验证核实
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.UserPhone">
            <summary>
            获取或设置用户电话号码
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.LoginLastRemarks">
            <summary>
            获取或设置用户最后一次登录的有关备注
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.LoginLastSuccess">
            <summary>
            获取或设置用户最后一次登录成功的时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.PwdWrongLockTime">
            <summary>
            获取或设置用户因密码错误而锁定的时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.PwdWrongFirst">
            <summary>
            获取或设置用户第一次密码错误的时间；正确登录后将会清除
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.PwdWrongLast">
            <summary>
            获取或设置用户最后一次密码错误的时间；正确登录后将会清除
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.PwdWrongLocked">
            <summary>
            获取或设置用户因密码错误的锁定状态，密码错误次数达到设定次数后将锁定该用户不允许再进行登录
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.PwdWrongCount">
            <summary>
            获取或设置用户因密码错误的锁定状态，密码错误次数达到设定次数后将锁定该用户不允许再进行登录；正确登录后将会清除
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.PwdWrongHistory">
            <summary>
            获取或设置用户登录密码错误的历史记录；正确登录后将会清除
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.RoleNames">
            <summary>
            获取或设置其成员资格的角色的名称的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.AllowCorpCodes">
            <summary>
            获取或设置数据授权范围的单位标识编码的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.AllowDeptIds">
            <summary>
            获取或设置数据授权范围的部门主键的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.AllowDeptPaths">
            <summary>
            获取或设置数据授权范围的部门路径的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.AllowUserIds">
            <summary>
            获取或设置数据授权范围的用户主键的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.IKdUser.UserTitle">
            <summary>
            获取当前用户的显示名称。
            </summary>
            <returns>返回用户真实姓名或用户名</returns> 
        </member>
        <member name="M:KdCore.Data.Users.IKdUser.PwdChange(System.String,System.Boolean)">
            <summary>
            更新用户密码
            </summary>
            <param name="pwd">要更新的用户密码</param>
            <param name="pwdNeedEncrypt">密码是否需要加密，未加密的密码会自动采用MD5加密</param> 
        </member>
        <member name="M:KdCore.Data.Users.IKdUser.PwdVerify(System.String)">
            <summary>
            验证用户密码是否正确
            </summary>
            <param name="pwd">要验证的用户密码</param>
        </member>
        <member name="M:KdCore.Data.Users.IKdUser.AddRoleNames(System.String[])">
            <summary>
            为当前用户添加指定的角色。在原有角色的基础添加，不删除原有角色
            </summary>
            <param name="roleNames">要指定其成员资格的角色的名称。注意：角色名称区分大小写</param>
        </member>
        <member name="M:KdCore.Data.Users.IKdUser.SetRoleNames(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            设置当前用户指定的角色。会清除原有全部角色，以当前设置为准
            </summary>
            <param name="roleNames">要指定其成员资格的角色的名称。注意：角色名称区分大小写</param>
        </member>
        <member name="M:KdCore.Data.Users.IKdUser.GetRoleNames">
            <summary>
            获取当前用户所有的角色名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.IKdUser.ToUserItem">
            <summary>
            转化为用于系统前端使用的系统用户模型类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.IKdUser.MarkCreator(KdCore.Data.IKdEntityCreateBase,System.Boolean)">
            <summary>
            设置实体数据对象的创建人及创建时间
            </summary>
            <param name="entity"></param>
            <param name="replaceExists"></param>
        </member>
        <member name="M:KdCore.Data.Users.IKdUser.MarkModifier(KdCore.Data.IKdEntityModifyBase)">
            <summary>
            设置实体数据对象的修改人及修改时间
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:KdCore.Data.Users.KdRole">
            <summary>
            系统角色
            </summary>
        </member>
        <member name="T:KdCore.Data.Users.KdUserBase">
            <summary>
            系统用户核心基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.UserSort">
            <summary>
            用户显示顺序号，因按单位、部门、职务、用户个人分段计算排序号比较长，不使用原有的默认的SortNum
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.IsAdmin">
            <summary>
            获取或设置用户管理员账号，非管理员用户不能登录后台管理系统进行管理操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.MarkCode">
            <summary>
            获取或设置数据的唯一标识特征码，应由系统随机生成且不可编辑，相对于第二个主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.SecurityStamp">
            <summary>
            获取或设置数据的唯一标识特征码。
            一个随机值，每当用户凭据变化时应更改 （如更改密码，登录删除）
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.UserType">
            <summary>
            获取或设置用户类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.UserSN">
            <summary>
            获取或设置用户编码/工号
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.IsLocked">
            <summary>
            获取或设置用户锁定状态，锁定的用户不能登录系统进行操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.LockedTime">
            <summary>
            获取或设置用户锁定状态更改的时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.UserName">
            <summary>
            获取或设置用户登录账号
            </summary>
        </member>
        <member name="F:KdCore.Data.Users.KdUserBase._userPwd">
            <summary>
            用户登录密码
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.UserPwd">
            <summary>
            获取或设置用户登录密码（MD5加密）
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.RealName">
            <summary>
            获取或设置真实姓名
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.SpellFull">
            <summary>
            获取或设置用户真实姓名的拼音，主要用于搜索
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.SpellAbbr">
            <summary>
            获取或设置用户真实姓名的拼音缩写，主要用于搜索（仅包含第一个字母，如zh、ch、sh时不包含h）
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.HeadImgUrl">
            <summary>
            头像图片链接地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.UserMobile">
            <summary>
            获取或设置用户手机号码
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.UserMobileVerify">
            <summary>
            获取或设置用户手机号码是否已验证核实
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.UserMail">
            <summary>
            获取或设置用户电子邮箱
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.UserMailVerify">
            <summary>
            获取或设置用户电子邮箱是否已验证核实
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.UserPhone">
            <summary>
            获取或设置用户电话号码
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.RoleNames">
            <summary>
            获取或设置其成员资格的角色的名称的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.RoleNamesArray">
            <summary>
            获取或设置其成员资格的角色的名称的数组形式
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.OwnerCorpShort">
            <summary>
            获取或设置所属单位简称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.AllowCorpCodes">
            <summary>
            获取或设置数据授权范围的单位标识编码的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.AllowDeptIds">
            <summary>
            获取或设置数据授权范围的部门主键的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.AllowDeptPaths">
            <summary>
            获取或设置数据授权范围的部门路径的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.AllowUserIds">
            <summary>
            获取或设置数据授权范围的用户主键的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.LoginLastRemarks">
            <summary>
            获取或设置用户最后一次登录的有关备注
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.LoginLastSuccess">
            <summary>
            获取或设置用户最后一次登录成功的时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.PwdWrongLockTime">
            <summary>
            获取或设置用户因密码错误而锁定的时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.PwdWrongFirst">
            <summary>
            获取或设置用户第一次密码错误的时间；正确登录后将会清除
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.PwdWrongLast">
            <summary>
            获取或设置用户最后一次密码错误的时间；正确登录后将会清除
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.PwdWrongCount">
            <summary>
            获取或设置用户因密码错误的锁定状态，密码错误次数达到设定次数后将锁定该用户不允许再进行登录；正确登录后将会清除
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.PwdWrongLocked">
            <summary>
            获取或设置用户因密码错误的锁定状态，密码错误次数达到设定次数后将锁定该用户不允许再进行登录
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.PwdWrongLockout">
            <summary>
            获取或设置用户因密码错误的锁定时，自动解除锁定的时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.PwdWrongHistory">
            <summary>
            获取或设置用户登录密码错误的历史记录；正确登录后将会清除
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.UserTitle">
            <summary>
            获取当前用户的显示名称。
            </summary>
            <returns>返回用户真实姓名或用户名</returns>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.AuthenticationType">
            <summary>
            获取所使用的身份验证的类型。 
            </summary>
            <returns>用于标识用户的身份验证的类型。</returns>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.IsAuthenticated">
            <summary>
            获取一个值，该值指示是否验证了用户。
            </summary>
            <returns>如果用户已经过验证，则为 true；否则为 false。</returns>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.Name">
            <summary>
            获取当前用户的名称。IIdentity接口实现
            </summary>
            <returns>返回用户名，代码当前即以该用户的名义运行。</returns>
        </member>
        <member name="P:KdCore.Data.Users.KdUserBase.Identity">
            <summary>
            获取当前用户的标识。
            </summary>
            <returns>与当前用户关联的 System.Security.Principal.IIdentity 对象。也即当前对象本身</returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.IsInRole(System.String)">
            <summary>
            确定当前用户是否属于指定的角色。
            </summary>
            <param name="roleName">要检查其成员资格的角色的名称。</param>
            <returns>如果当前用户是指定角色的成员，则为 true；否则为 false。</returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.SetRoleNames(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            设置当前用户指定的角色。会清除原有全部角色，以当前设置为准
            </summary>
            <param name="roleNames">要指定其成员资格的角色的名称。注意：角色名称区分大小写</param>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.AddRoleNames(System.String[])">
            <summary>
            为当前用户添加指定的角色。在原有角色的基础添加，不删除原有角色
            </summary>
            <param name="roleNames">要指定其成员资格的角色的名称。注意：角色名称区分大小写</param>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.GetRoleNames">
            <summary>
            获取当前用户所有的角色名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.PwdChange(System.String,System.Boolean)">
            <summary>
            设置用户密码
            </summary>
            <param name="pwd">要设置的用户密码</param>
            <param name="pwdNeedEncrypt">密码是否需要加密，未加密的密码会自动采用MD5加密</param>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.PwdVerify(System.String)">
            <summary>
            验证用户密码是否正确
            </summary>
            <param name="pwd">要验证的用户密码</param>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.GetDataTitle">
            <summary>
            获取当前数据的标题名称，用于生成待办事项等关联数据时使用，或数据删除时提示显示等
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.ToString">
            <summary>
            重写 ToString 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.FixEmptySpells">
            <summary>
            修复缺失的用户拼音及拼音缩写
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.ToUserItem">
            <summary>
            转化为用于系统前端使用的系统用户模型类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.MarkCreator(KdCore.Data.IKdEntityCreateBase,System.Boolean)">
            <summary>
            设置实体数据对象的创建人
            </summary>
            <param name="entity"></param>
            <param name="replaceExists"></param>
        </member>
        <member name="M:KdCore.Data.Users.KdUserBase.MarkModifier(KdCore.Data.IKdEntityModifyBase)">
            <summary>
            设置实体数据对象的修改人
            </summary>
            <param name="entity"></param>
        </member>
        <member name="T:KdCore.Data.Users.KdUserFollow">
            <summary>
            用户关注收藏事项
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserFollow.ItemName">
            <summary>
            关注事项名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserFollow.ItemGroup">
            <summary>
            关注事项分组
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserFollow.ItemUrl">
            <summary>
            关注事项查看页面URL
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserFollow.FixedTop">
            <summary>
            置顶显示
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserFollow.SourceId">
            <summary>
            关联数据源主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserFollow.SourceType">
            <summary>
            关联数据源标题名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserFollow.UnitName">
            <summary>
            所在功能单元名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserFollow.UnitSign">
            <summary>
            所在功能单元识别编码
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserFollow.GetDataTitle">
            <summary>
            获取当前数据的标题名称，用于生成待办事项等关联数据时使用，或数据删除时提示显示等
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Users.KdRoleBase">
            <summary>
            系统角色
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdRoleBase.RoleName">
            <summary>
            获取或设置角色名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdRoleBase.AuthSigns">
            <summary>
            获取或设置角色拥有的权限标识（集合）
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdRoleBase.RoleAuths">
            <summary>
            获取或设置角色拥有的权限标识（字符串）
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdRoleBase.HasAuthSign(System.String)">
            <summary>
            获取当前角色是否用于指定标识的操作权限
            </summary>
            <param name="authSignCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdRoleBase.ToListItem(System.Boolean)">
            <summary>
            转换输出为列表项
            </summary>
            <param name="moreDataMode">是否使用包含较多数据的模式进行转换</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdRoleBase.GetDataTitle">
            <summary>
            获取当前数据的标题名称
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Users.KdUserAction">
            <summary>
            系统用户当前的操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.LogLevel">
            <summary>
            日志记录等级
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.SessionID">
            <summary>
            会话标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.TaskGuid">
            <summary>
            批次编号
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.TaskTimestamp">
            <summary>
            批次时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.TaskSerial">
            <summary>
            批次序号
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.IsError">
            <summary>
            出现错误
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActElapsedTime">
            <summary>
            执行进行时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActMenuName">
            <summary>
            当前操作菜单名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActUnitName">
            <summary>
            当前操作模块名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActUnitCode">
            <summary>
            当前操作模块编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActActionName">
            <summary>
            当前操作的操作名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActMode">
            <summary>
            当前操作的操作模式
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActUserHost">
            <summary>
            当前操作用户主机或IP地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActUserAgent">
            <summary>
            当前操作的客户端代理字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ClientType">
            <summary>
            当前操作的客户端类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ClientPlatform">
            <summary>
            当前操作的客户端系统平台
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ClientBrowserID">
            <summary>
            当前操作的客户端浏览器标识名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ClientBrowserType">
            <summary>
            当前操作的客户端浏览器类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ClientBrowserVersion">
            <summary>
            当前操作的客户端浏览器版本
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ClientBrowserBeta">
            <summary>
            当前操作的客户端浏览器是否测试版
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ClientIsMobileDevice">
            <summary>
            当前操作的客户端是否为移动设备
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.MobileDeviceManufacturer">
            <summary>
            当前操作的客户端设备的制造商
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.MobileDeviceModel">
            <summary>
            当前操作的客户端设备的型号
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActRequestPath">
            <summary>
            当前操作的请求路径
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActReferrerPath">
            <summary>
            链接到当前操作 URL 的客户端请求的 URL 地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActObjType">
            <summary>
            当前操作的数据对象类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActObjId">
            <summary>
            当前操作的数据对象主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ActContent">
            <summary>
            当前操作的详细内容
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.CommitValues">
            <summary>
            当前操作前用户提交的数据
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.OriginalValues">
            <summary>
            当前操作前的原始值
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.CurrentValues">
            <summary>
            当前操作后的修改值
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.BrowserTags">
            <summary>
            请求浏览器环境信息
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.Remarks">
            <summary>
            获取或设置说明，通常用于保存系统程序运行过程中产生的一些说明注释
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.Other1">
            <summary>
            获取或设置其他标识或备注 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.Other2">
            <summary>
            获取或设置其他标识或备注 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.Other3">
            <summary>
            获取或设置其他标识或备注 3
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.Other4">
            <summary>
            获取或设置其他标识或备注 4
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.Other5">
            <summary>
            获取或设置其他标识或备注 5
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.Other6">
            <summary>
            获取或设置其他标识或备注 6
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.Other7">
            <summary>
            获取或设置其他标识或备注 7
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.Other8">
            <summary>
            获取或设置其他标识或备注 8
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ErrorMsg">
            <summary>
            错误说明信息
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserAction.ClientTypeDesc">
            <summary>
            当前操作的客户端类型描述
            </summary>
        </member>
        <member name="T:KdCore.Data.Users.KdUser">
            <summary>
            系统用户基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.SortByDept">
            <summary>
            获取或设置是否启用按部门进行生成排序号
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.SortByDuty">
            <summary>
            获取或设置是否启用按职务进行生成排序号
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.PickUser_UseCorpGroup">
            <summary>
            获取或设置选择用户时是否使用按公司单位分组
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.PickUser_UseDeptGroup">
            <summary>
            获取或设置选择用户时是否使用按部门分组
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.PickUser_UseDutyGroup">
            <summary>
            获取或设置选择用户时是否使用按职务分组
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.PickUser_UseUserGroup">
            <summary>
            获取或设置选择用户时是否使用按用户分组
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.EnableUserExtDatas">
            <summary>
            获取或设置是否启用了默认的用户数据扩展，
            其中包括了系统工作日设置、用户待办事项，用户间留言、用户日程安排、用户关注收藏等数据
            以及用户URL地址收藏，IP地址管理等
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.Func_FilterUserName">
            <summary>
            获取或设置用户名无效字符过滤处理方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.Func_BuildDefaultPassword">
            <summary>
            获取或设置新加用户默认密码（生成的密码不需要加密）
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.Func_GetUserDeptTitle">
            <summary>
            获取或设置用户的附加部门标识名称的处理方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.Func_GetUserDutyTitle">
            <summary>
            获取或设置用户的附加职务标识名称的处理方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUser.FilterUserName(System.String)">
            <summary>
            过滤处理用户名无效字符，获取有效的用户名
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.DutyId">
            <summary>
            获取或设置用户职务主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.DutyName">
            <summary>
            获取或设置用户职务名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.DutyPath">
            <summary>
            获取或设置所属职务的标识路径
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.AllowCorpNames">
            <summary>
            获取或设置数据授权范围的单位名称的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.AllowDeptNames">
            <summary>
            获取或设置数据授权范围的部门名称的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUser.AllowUserNames">
            <summary>
            获取或设置数据授权范围的用户名称的拼接字符串
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUser.GetDataTitle">
            <summary>
            获取当前数据的标题名称，用于生成待办事项等关联数据时使用，或数据删除时提示显示等
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUser.ToUserItem">
            <summary>
            转化为用于系统前端使用的系统用户模型类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUser.MarkCreator(KdCore.Data.IKdEntityCreateBase,System.Boolean)">
            <summary>
            设置实体数据对象的创建人、归属人
            </summary>
            <param name="entity"></param>
            <param name="replaceExists"></param>
        </member>
        <member name="M:KdCore.Data.Users.KdUser.MarkModifier(KdCore.Data.IKdEntityModifyBase)">
            <summary>
            设置实体数据对象的修改人
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:KdCore.Data.Users.KdUser.FixModifier(KdCore.Data.IKdEntityModify)">
            <summary>
            修复遗漏的实体数据对象的创建人、修改人
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUser.AllowCorpCode(System.String)">
            <summary>
            判断用户是否授权指定标识编码的单位
            </summary>
            <param name="corpCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUser.OnDutyPath(System.String)">
            <summary>
            判断用户是否任职于指定标识路径职务或之上
            </summary>
            <param name="dutyPath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUser.OnDutyId(System.String)">
            <summary>
            判断用户是否任职于指定主键的职务或之上
            </summary>
            <param name="dutyId"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Users.KdUserItem">
            <summary>
            用于系统前端使用的系统用户模型类
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.RealName">
            <summary>
            获取或设置真实姓名
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.UserName">
            <summary>
            获取或设置用户登录账号
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.SpellFull">
            <summary>
            获取或设置用户真实姓名的拼音，主要用于搜索
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.SpellAbbr">
            <summary>
            获取或设置用户真实姓名的拼音缩写，主要用于搜索（仅包含第一个字母，如zh、ch、sh时不包含h）
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.UserMobile">
            <summary>
            获取或设置用户手机号码
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.UserMail">
            <summary>
            获取或设置用户电子邮箱
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.CorpCode">
            <summary>
            获取或设置所属单位标识编码ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.CorpName">
            <summary>
            获取或设置所属单位名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.DeptId">
            <summary>
            获取或设置所属部门主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.DeptName">
            <summary>
            获取或设置所属部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.DutyId">
            <summary>
            获取或设置用户职务主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.DutyName">
            <summary>
            获取或设置用户职务名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.RoleNames">
            <summary>
            获取或设置其成员资格的角色的名称的拼接字符串
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.GroupName">
            <summary>
            获取或设置用户分组名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.GroupCode">
            <summary>
            获取或设置用户分组标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserItem.Expires">
            <summary>
            获取或设置数据过期时间
            </summary>
        </member>
        <member name="T:KdCore.Data.Users.KdUserLimit">
            <summary>
            用户数据限制范围设置
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserLimit.ScopeUser">
            <summary>
            获取或设置当前限定的可访问用户；
            如果不设置值，则仅按下面的查询筛选条件进行处理，
            如果设置值，则按该用户可访问的数据范围再次进行筛选过滤，
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserLimit.Id">
            <summary>
            获取或设置主键标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserLimit.QueryId">
            <summary>
            获取或设置查询标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserLimit.DataType">
            <summary>
            获取或设置用户数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserLimit.UserIds">
            <summary>
            获取或设置用户数据限制的用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserLimit.RoleNames">
            <summary>
            获取或设置用户数据限制的角色主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserLimit.DutyIds">
            <summary>
            获取或设置用户数据限制的职位主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserLimit.DeptIds">
            <summary>
            获取或设置用户数据限制的部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserLimit.CorpCodes">
            <summary>
            获取或设置用户数据限制的单位标识编码
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserLimit.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserLimit.#ctor(KdCore.Data.Users.KdUserDataType)">
            <summary>
            构造方法
            </summary>
            <param name="dataType"></param>
        </member>
        <member name="M:KdCore.Data.Users.KdUserLimit.Equals(System.Object)">
            <summary>
            重写相等比较方法
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserLimit.GetHashCode">
            <summary>
            重写计算 HaseCode
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserLimit.ToString">
            <summary>
            重写 ToString
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Users.KdUserProfile">
            <summary>
            用户配置文件
            </summary>
        </member>
        <member name="F:KdCore.Data.Users.KdUserProfile.ItemName_PageSize">
            <summary>
            设置项键：每页显示数据条数
            </summary>
        </member>
        <member name="F:KdCore.Data.Users.KdUserProfile.ItemName_DataLayout">
            <summary>
            设置项键：数据布局样式
            </summary>
        </member>
        <member name="F:KdCore.Data.Users.KdUserProfile.ItemName_Theme_Overall">
            <summary>
            设置项键：主题样式
            </summary>
        </member>
        <member name="F:KdCore.Data.Users.KdUserProfile.ItemName_FontSize_Overall">
            <summary>
            设置项键：字体
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserProfile.Items">
            <summary>
            设置项存储字典
            </summary>
        </member>
        <member name="M:KdCore.Data.Users.KdUserProfile.Set(System.String,System.Object)">
            <summary>
            设置个人设置值
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:KdCore.Data.Users.KdUserProfile.Set(KdCore.Data.KdListItem)">
            <summary>
            设置个人设置值
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:KdCore.Data.Users.KdUserProfile.Set``2(System.Collections.Generic.KeyValuePair{``0,``1})">
            <summary>
            设置个人设置值
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="item"></param>
        </member>
        <member name="M:KdCore.Data.Users.KdUserProfile.Get(System.String)">
            <summary>
            获取个人设置值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserProfile.Get``1(System.String)">
            <summary>
            获取个人设置值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Users.KdUserProfile.Save(System.String)">
            <summary>
            获取个人设置值
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:KdCore.Data.Users.KdUserProfile.Load(System.String)">
            <summary>
            从指定路径加载个人设置
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.Users.KdUserProfile.DataLayout_Overall">
            <summary>
            获取或设置数据布局样式
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserProfile.PageSize_Overall">
            <summary>
            获取或设置每页显示条数
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserProfile.Theme_Overall">
            <summary>
            获取或设置整个系统的主题样式
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserProfile.FontSize_Overall">
            <summary>
            获取或设置字体大小
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserProfile.Url_UserHomePage">
            <summary>
            获取或设置用户登录后跳转的首页地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserProfile.Theme_TodoStateLamp">
            <summary>
            获取或设置事项待办状态亮灯显示方案
            </summary>
        </member>
        <member name="T:KdCore.Data.Users.KdUserRange">
            <summary>
            用户、部门、职务、角色的可选范围
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserRange.QueryTitle">
            <summary>
            获取或设置查询结果标题
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserRange.Users">
            <summary>
            可选用户集合
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserRange.Corps">
            <summary>
            可选单位集合
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserRange.Depts">
            <summary>
            可选部门集合
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserRange.Dutys">
            <summary>
            可选职位集合
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserRange.Roles">
            <summary>
            可选角色集合
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserRange.Groups">
            <summary>
            可选分组集合
            </summary>
        </member>
        <member name="P:KdCore.Data.Users.KdUserRange.UseRadio">
            <summary>
            获取或设置是否使用单选模式；
            一般情况下，true 为单选框，false 为复选框，null为不使用选择框
            </summary>
        </member>
        <member name="T:KdCore.Data.Tasks.KdEntityTimeLamp">
            <summary>
            带有限期办理及超期状态的用户数据对象基类
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTimeLamp.GetTimeOverdueShortDesc(KdCore.Data.Entity.IKdEntityTimeLamp)">
            <summary>
            获取待办事项办理状态的默认简洁描述
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTimeLamp.GetTimeOverdueLongDesc(KdCore.Data.Entity.IKdEntityTimeLamp)">
            <summary>
            获取待办事项办理状态的默认详细描述
            </summary>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTimeLamp.HandleStatus">
            <summary>
            获取或设置当前事项的办理状态
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTimeLamp.TimeLamp">
            <summary>
            获取或设置事项的办理是否逾期
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTimeLamp.LimitedTime">
            <summary>
            获取或设置事项的办理时限
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTimeLamp.HandleTime">
            <summary>
            获取或设置事项的办理时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTimeLamp.HandleContent">
            <summary>
            获取或设置事项办理时的办理内容或办理结果，或其他描述说明等
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTimeLamp.LimitedDesc">
            <summary>
            获取办理时限的描述
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTimeLamp.TaskIsInvalid">
            <summary>
            获取当前事项是否无效
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTimeLamp.TaskIsValid">
            <summary>
            获取当前事项是否有效
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTimeLamp.TaskIsRunning">
            <summary>
            获取当前事项是否属于待办状态
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTimeLamp.TaskIsOvered">
            <summary>
            获取当前事项是否属于完成状态
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTimeLamp.HandleStatusIsChanged">
            <summary>
            获取或设置事项的当前办理状态是否改变
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTimeLamp.StatusDesc">
            <summary>
            获取或设置当前待办事项办理状态简洁描述
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTimeLamp.StatusDesciption">
            <summary>
            获取或设置当前待办事项办理状态详细描述
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTimeLamp.GetStatusShortDesc">
            <summary>
            获取当前待办事项状态的详细描述
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTimeLamp.GetStatusLongDesc">
            <summary>
            获取当前待办事项状态的详细描述
            </summary>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTimeLamp.Func_CalcOverdueStatus">
            <summary>
            获取或设置待办任务过期状态的计算方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTimeLamp.CalcOverdueStatus">
            <summary>
            计算办理情况是否超期
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTimeLamp.RecheckTimeLamp">
            <summary>
            计算办理情况是否超期，并更新设置标识状态 <see cref="P:KdCore.Data.Tasks.KdEntityTimeLamp.TimeLamp"/>
            </summary>
            <returns>状态标识是否有变更 </returns>
        </member>
        <member name="T:KdCore.Data.Tasks.IKdTaskOption">
            <summary>
            可生成待办事项的实体数据类型的规范定义接口
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.TaskType">
            <summary>
            获取或设置生成待办事项的类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.TaskCode">
            <summary>
            获取或设置事项类型编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.TaskUrgency">
            <summary>
            获取或设置事项的紧急级别
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.TaskSecret">
            <summary>
            获取或设置事项的保密级别
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.TaskScope">
            <summary>
            获取或设置事项的执行范围
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.SourceType">
            <summary>
            获取或设置事项来源的类型，可指定实体类全称或其他的特定标识，用于区分不同表采用同一主键的事项识别
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.SourceId">
            <summary>
            获取或设置事项来源数据的主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.SourceName">
            <summary>
            获取或设置事项来源数据的主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.UnitSign">
            <summary>
            获取或设置数据提交来源所属的功能单元标识，用于同一类型的同一个主键的不同审批识别
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.StepId">
            <summary>
            获取或设置事项办理业务或审批流程步骤的主键 ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.StepName">
            <summary>
            获取或设置事项办理业务或审批流程步骤的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.StepSign">
            <summary>
            获取或设置事项办理业务或审批流程步骤的标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.ItemName">
            <summary>
            获取或设置事项关联数据的的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.ItemId">
            <summary>
            获取或设置事项关联数据的主键ID；通常同一关联数据只能有一条待办事项数据
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.OnlyView">
            <summary>
            获取或设置待办事项仅需要查阅
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.IgnoreCount">
            <summary>
            获取或设置待办事项数据不计入正常的待办事项中，仅用于记录用户操作是否完成
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.PlanTime">
            <summary>
            获取或设置事项的计划办理时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.LimitedTime">
            <summary>
            获取或设置事项的办理时限
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.AutoOverdue">
            <summary>
            获取或设置到办理期限是否自动完成步骤，并审批状态设置为通过
            （用于标识当前步骤是否会执行自动通过）
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.SmsNotify">
            <summary>
            获取或设置是否发送短信通知
            注意：不在数据库存储，仅用于当前上下文环境处理
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.TaskUrl">
            <summary>
            获取或设置办理事项应打开的URL链接
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.RawUrl">
            <summary>
            获取或设置相关的原始URL链接
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.AffixBool1">
            <summary>
            获取或设置附加布尔标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.AffixTime1">
            <summary>
            获取或设置附加时间标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.AffixNum1">
            <summary>
            获取或设置附加数字标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.AffixStatus1">
            <summary>
            获取或设置附加是否逾期状态标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.AffixNotes1">
            <summary>
            获取或设置附加字符串标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.AffixBool2">
            <summary>
            获取或设置附加布尔标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.AffixTime2">
            <summary>
            获取或设置附加时间标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.AffixNum2">
            <summary>
            获取或设置附加数字标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.AffixStatus2">
            <summary>
            获取或设置附加是否逾期状态标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdTaskOption.AffixNotes2">
            <summary>
            获取或设置附加字符串标识 2
            </summary>
        </member>
        <member name="T:KdCore.Data.Tasks.KdTaskOption">
            <summary>
            使用待办事项的业务数据实体基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.TaskType">
            <summary>
            获取或设置生成待办事项的类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.TaskCode">
            <summary>
            获取或设置事项类型编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.TaskUrgency">
            <summary>
            获取或设置事项的紧急级别
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.TaskSecret">
            <summary>
            获取或设置事项的保密级别
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.TaskScope">
            <summary>
            获取或设置事项的执行范围
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.SourceType">
            <summary>
            获取或设置事项来源的类型，可指定实体类全称或其他的特定标识，用于区分不同表采用同一主键的事项识别
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.SourceId">
            <summary>
            获取或设置事项来源数据的主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.SourceName">
            <summary>
            获取或设置事项来源数据的主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.UnitSign">
            <summary>
            获取或设置数据提交来源所属的功能单元标识，用于同一类型的同一个主键的不同审批识别
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.StepId">
            <summary>
            获取或设置事项办理业务或审批流程步骤的主键 ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.StepName">
            <summary>
            获取或设置事项办理业务或审批流程步骤的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.StepSign">
            <summary>
            获取或设置事项办理业务或审批流程步骤的标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.ItemName">
            <summary>
            获取或设置事项关联数据的的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.ItemId">
            <summary>
            获取或设置事项关联数据的主键ID；通常同一关联数据只能有一条待办事项数据
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.OnlyView">
            <summary>
            获取或设置待办事项仅需要查阅
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.IgnoreCount">
            <summary>
            获取或设置待办事项仅需要查阅
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.PlanTime">
            <summary>
            获取或设置事项的计划办理时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.LimitedTime">
            <summary>
            获取或设置事项的办理时限
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.AutoOverdue">
            <summary>
            获取或设置到办理期限是否自动完成步骤，并审批状态设置为通过
            （用于标识当前步骤是否会执行自动通过）
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.SmsNotify">
            <summary>
            获取或设置是否发送短信通知
            注意：不在数据库存储，仅用于当前上下文环境处理
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.TaskUrl">
            <summary>
            获取或设置办理事项应打开的URL链接
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.RawUrl">
            <summary>
            获取或设置相关的原始URL链接
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.AffixBool1">
            <summary>
            获取或设置附加布尔标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.AffixTime1">
            <summary>
            获取或设置附加时间标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.AffixNum1">
            <summary>
            获取或设置附加数字标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.AffixStatus1">
            <summary>
            获取或设置附加是否逾期状态标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.AffixNotes1">
            <summary>
            获取或设置附加字符串标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.AffixBool2">
            <summary>
            获取或设置附加布尔标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.AffixTime2">
            <summary>
            获取或设置附加时间标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.AffixNum2">
            <summary>
            获取或设置附加数字标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.AffixStatus2">
            <summary>
            获取或设置附加是否逾期状态标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdTaskOption.AffixNotes2">
            <summary>
            获取或设置附加字符串标识 2
            </summary>
        </member>
        <member name="T:KdCore.Data.Tasks.KdUserPlan">
            <summary>
            日程安排数据保存实体
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.PlanDate">
            <summary>
            计划安排日期
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.PlanName">
            <summary>
            计划安排标题
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.PlanPlace">
            <summary>
            计划地点
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.PlanSummary">
            <summary>
            内容摘要
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.IsPrivate">
            <summary>
            是否私人事务
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.PlanGroup">
            <summary>
            计划分组名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.TimeStatus">
            <summary>
            计划时段用户忙碌状态
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.IsFullDay">
            <summary>
            是否全天计划
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.RepeatId">
            <summary>
            重复关联批次ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.RepeatMode">
            <summary>
            重复模式：天、周、月、年
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.RepeatCycles">
            <summary>
            重复频率：几天、几周、几月、几年
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.RepeatStop">
            <summary>
            重复终止日期
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.InvolvedUserIds">
            <summary>
            参与用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.InvolvedUserNames">
            <summary>
            参与用户姓名
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.InvolvedDeptIds">
            <summary>
            参与部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.InvolvedDeptNames">
            <summary>
            参与部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.InvolvedCorpIds">
            <summary>
            参与单位主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.InvolvedCorpNames">
            <summary>
            参与单位名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.OtherPersonNames">
            <summary>
            其他参与人员姓名
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.OtherDeptNames">
            <summary>
            其他参与部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.OtherCorpNames">
            <summary>
            其他参与单位名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.IsCompleted">
            <summary>
            是否完成
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.CompleteTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserPlan.CompleteStatus">
            <summary>
            完成情况
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserPlan.GetDataTitle">
            <summary>
            获取当前数据的标题名称，用于生成待办事项等关联数据时使用，或数据删除时提示显示等
            </summary>
        </member>
        <member name="T:KdCore.Data.Tasks.IKdEntityTasks">
            <summary>
            可生成待办事项的实体数据类型的规范定义接口
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdEntityTasks.TaskStatus">
            <summary>
            获取或设置当前对象的审批状态记录
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.IKdEntityTasks.UserTasks">
            <summary>
            获取或设置当前对象关联的待办事项
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.IKdEntityTasks.SetTaskValue(KdCore.Data.Tasks.KdUserTask)">
            <summary>
            为待办事项记录对象进行设置一些系统不会自动处理的与数据源相关的属性值
            </summary>
            <param name="userTask">带设置属性数据的待办事项</param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Tasks.KdEntityTasks">
            <summary>
            使用待办事项的业务数据实体基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTasks.TaskStatus">
            <summary>
            获取或设置当前事项在当前上下文中的办理状态；未在数据库中保存，需对其设置后才能使用
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdEntityTasks.UserTasks">
            <summary>
            获取或设置当前事项关联的待办事项
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTasks.SetTaskValue(KdCore.Data.Tasks.KdUserTask)">
            <summary>
            为指定用户创建一条待办事项
            </summary>
            <param name="userTask">带设置属性数据的待办事项</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Tasks.KdEntityTasks.IsHandled">
            <summary>
            获取当前事项在当前上下文中的办理状态是否已办理；<see cref="P:KdCore.Data.Tasks.KdEntityTasks.TaskStatus"/>未在数据库中保存，需对其设置后才能使用
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Tasks.KdUserTask">
            <summary>
            数据库表：用户待办事项（KdUserTask）  
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.UserTask_Title">
            <summary>
            待办事项的 Controller 名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.UserTask_CountOnlyView">
            <summary>
            待办事项的统计数量时是否统计传阅类型的数量
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.UserTask_CountIgnoreCount">
            <summary>
            待办事项的统计数量时是否统计设置为忽略统计的数量
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TextFmtLimitedDesc">
            <summary>
             获取或设置办理期限描述的格式化模板
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TextTypeOnlyView">
            <summary>
             获取或设置仅需查阅事项显示的类型文字
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TextTypeNeedHandle">
            <summary>
             获取或设置需要办理事项显示的类型文字
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TextModeOnlyView">
            <summary>
             获取或设置仅需查阅事项显示的类型文字
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TextModeNeedHandle">
            <summary>
             获取或设置需要办理事项显示的类型文字
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.Func_GetUserTaskStatusShortDesc">
            <summary>
            获取或设置待办事项的办理状态简洁描述的方法 
            </summary>
            <remarks>
            KdUserTask：输入参数，要查询状态简洁描述的待办事项
            string：返回结果，待办事项的办理状态简洁描述的文本
            </remarks>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.Func_GetUserTaskStatusLongDesc">
            <summary>
            获取或设置待办事项的办理状态详细描述的方法 
            </summary>
            <remarks>
            KdUserTask：输入参数，要查询状态详细描述的待办事项
            string：返回结果，待办事项的办理状态详细描述的文本
            </remarks>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.Func_GetUserTaskSmsContent">
            <summary>
            获取或设置待办事项的提醒短信内容的生成方法 
            </summary>
            <remarks>
            KdUserTask：输入参数，要生成提醒短信内容的待办事项
            string：返回结果，待办事项的提醒短信内容
            </remarks>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.Func_CheckOverdueSmsNotice">
            <summary>
            获取或设置待办事项的需要发送过期提醒短信的检查方法 
            </summary>
            <remarks>
            KdUserTask：输入参数，要生成提醒短信内容的待办事项
            string：返回结果，是否需要发送过期提醒短信
            </remarks>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TaskTitle">
            <summary>
            获取或设置事项类别标题
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TaskType">
            <summary>
            获取或设置待办类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TaskCode">
            <summary>
            获取或设置事项类型编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TaskUrgency">
            <summary>
            获取或设置事项的紧急级别；
            理论上数字越大标识级别越高，不过暂时还没用上
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TaskSecret">
            <summary>
            获取或设置事项的保密级别；
            理论上数字越大标识级别越高，不过暂时还没用上
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TaskScope">
            <summary>
            获取或设置事项的执行范围；
            理论上数字越大标识级别越高，不过暂时还没用上
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.IgnoreCount">
            <summary>
            获取或设置在统计查询中忽略计数
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.OnlyView">
            <summary>
            获取或设置待办事项仅需要查阅
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.UnitSign">
            <summary>
            获取或设置事项来源所属的功能单元标识，用于同一类型的同一个主键的不同事项识别
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.SourceType">
            <summary>
            获取或设置事项来源的类型，可指定实体类全称或其他的特定标识，用于区分不同表采用同一主键的事项识别
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.SourceId">
            <summary>
            获取或设置事项来源数据的主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.SourceName">
            <summary>
            获取或设置事项来源数据的主键ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.StepId">
            <summary>
            获取或设置事项办理业务或审批流程步骤的主键 ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.StepName">
            <summary>
            获取或设置事项办理业务或审批流程步骤的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.StepSign">
            <summary>
            获取或设置事项办理业务或审批流程步骤的标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.ItemId">
            <summary>
            获取或设置事项直接关联数据的主键ID，通常可能是Source下的子项；通常同一关联数据只能有一条待办事项数据
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.ItemName">
            <summary>
            获取或设置事项关联数据的的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.PlanTime">
            <summary>
            获取或设置事项的计划办理时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.AutoOverdue">
            <summary>
            获取或设置到办理期限是否自动完成步骤，并审批状态设置为通过
            （用于标识当前步骤是否会执行自动通过）
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.SmsWarning">
            <summary>
            即将过期警示短信次数
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.SmsAlert">
            <summary>
            已过期警告短信次数
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.LastSmsTime">
            <summary>
            最后一次短信提醒发送时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.ReceiverId">
            <summary>
            获取或设置事项待办人的主键 ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.ReceiverName">
            <summary>
            获取或设置事项待办人的姓名或用户名
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.ReceiverDeptId">
            <summary>
            获取或设置事项待办人的部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.ReceiverDeptName">
            <summary>
            获取或设置事项待办人的部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.ReceiverDutyId">
            <summary>
            获取或设置事项待办人的职务主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.ReceiverDutyName">
            <summary>
            获取或设置事项待办人的职务名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.ReceiverMobile">
            <summary>
            获取或设置事项待办人的手机号码
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.HandlerId">
            <summary>
            获取或设置实际的办理人主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.HandlerName">
            <summary>
            获取或设置实际的办理人的姓名或用户名
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.HandlerDeptId">
            <summary>
            获取或设置事项实际办理人的部门主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.HandlerDeptName">
            <summary>
            获取或设置事项实际办理人的部门名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.HandlerDutyId">
            <summary>
            获取或设置事项实际办理人的职务主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.HandlerDutyName">
            <summary>
            获取或设置事项实际办理人的职务名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.HandlerMobile">
            <summary>
            获取或设置事项实际办理人的手机号码
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TaskUrl">
            <summary>
            获取或设置办理事项应打开的URL链接
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.RawUrl">
            <summary>
            获取或设置相关的原始URL链接
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TaskDesc">
            <summary>
            获取或设置待办事项的描述说明
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.SmsIds">
            <summary>
            获取或设置待办事项关联的短信ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.AffixBool1">
            <summary>
            获取或设置附加布尔标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.AffixTime1">
            <summary>
            获取或设置附加时间标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.AffixNum1">
            <summary>
            获取或设置附加数字标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.AffixStatus1">
            <summary>
            获取或设置附加是否逾期状态标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.AffixNotes1">
            <summary>
            获取或设置附加字符串标识 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.AffixBool2">
            <summary>
            获取或设置附加布尔标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.AffixTime2">
            <summary>
            获取或设置附加时间标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.AffixNum2">
            <summary>
            获取或设置附加数字标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.AffixStatus2">
            <summary>
            获取或设置附加是否逾期状态标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.AffixNotes2">
            <summary>
            获取或设置附加字符串标识 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.NeedSendSms">
            <summary>
            获取或设置待办事项是否需要发送短信
            未保存在数据库，一般不是自己直接进行赋值的不要以此属性来判断业务流程控制
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.SmsItems">
            <summary>
            获取或设置待办事项相关联的短信数据
            未保存在数据库，一般不是自己直接进行赋值的不要以此属性来判断业务流程控制
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.ReceiverTitle">
            <summary>
            获取事项待办人的显示名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.HandlerTitle">
            <summary>
            获取事项实际办理人的显示名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TaskTypeTitle">
            <summary>
            获取待办事项是否仅需要查阅的类型名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.TaskModeTitle">
            <summary>
            获取待办事项是否仅需要办理的操作名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.LimitedDesc">
            <summary>
            获取办理时限的描述
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.GetDataTitle">
            <summary>
            获取显示标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.InitTaskOption(KdCore.Data.Tasks.IKdTaskOption,KdCore.Data.Users.IKdUser)">
            <summary>
            初始化待办事项的选项设置
            </summary>
            <param name="initOption">待办事项的初始化设置</param>
            <param name="receiver">待办事项的接收人/待办人</param>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.UpdateTaskOption(KdCore.Data.Tasks.IKdTaskOption)">
            <summary>
            更新待办事项的选项设置；
            与 <see cref="M:KdCore.Data.Tasks.KdUserTask.InitTaskOption(KdCore.Data.Tasks.IKdTaskOption,KdCore.Data.Users.IKdUser)"/>相比，不再设置 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceId"/>、<see cref="P:KdCore.Data.Tasks.KdUserTask.SourceName"/> 和 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceType"/> 属性
            </summary>
            <param name="updateOption">待办事项的更新后设置，会覆盖掉原有设置</param>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.Finish(KdCore.Data.Users.IKdUser)">
            <summary>
            办结待办事项
            </summary>
            <param name="user"></param> 
            <returns>待办事项办理状态是否改变</returns>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.Restart">
            <summary>
            重新启动待办事项
            </summary>
            <returns>待办事项办理状态是否改变</returns>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.Cancel">
            <summary>
            撤销待办事项
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.BindSmsId(KdCore.Data.Sms.KdSmsBase)">
            <summary>
            设置与短信相关联的ID
            </summary>
            <param name="sms"></param>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.GetStatusShortDesc">
            <summary>
            获取当前待办事项状态的详细描述
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.GetStatusLongDesc">
            <summary>
            获取当前待办事项状态的详细描述
            </summary>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.Tasks.KdUserTask.Func_CalcUserTaskOverdueStatus">
            <summary>
            获取或设置待办事项过期状态的专用计算方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.CalcOverdueStatus">
            <summary>
            计算办理情况是否超期，返回过期状态标识（TimeLamp）
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.CheckOverdueSmsNotice">
            <summary>
            检查是否需要发送即将过期或已超过期限的提醒短信
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.CreateSmsContent">
            <summary>
            生成提醒的短信内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.CreateSmsNotice(System.String,System.Boolean)">
            <summary>
            生成与待办事项相关的短信
            </summary>
            <param name="smsContent">需要发送的短信内容</param>
            <param name="buildSmsContent">未传入短信内容时是否自动创建短信内容</param>
            <returns></returns>  
        </member>
        <member name="M:KdCore.Data.Tasks.KdUserTask.CreateSmsNoticeOverdue">
            <summary>
            检查待办事项是否需要发送短信提醒，并生成短信
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdDataRequest">
            <summary>
            数据查询请求接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.BatchTag">
            <summary>
            获取或设置查询批次标识，主要用来后台数据处理或调试跟踪
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.DebugMode">
            <summary>
            获取或设置是否调试模式，调式模式下会输出更多的日志信息等
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.QueryId">
            <summary>
            参数名称，标识查询请求的分页名称
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.DataCode">
            <summary>
            获取或设置页面的标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.DataTitle">
            <summary>
            获取或设置页面的标题名称
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.DataType">
            <summary>
            获取或设置页面的数据类型标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.DataKind">
            <summary>
            获取或设置页面的数据分类标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.DataRange">
            <summary>
            获取或设置页面的数据范围标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.DataBind">
            <summary>
            获取或设置页面的数据绑定类型标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.DataRide">
            <summary>
            获取或设置页面的数据控制类型标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.QueryType">
            <summary>
            获取或设置当前查询的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.UseAjax">
            <summary>
            获取或设置是否使用 ajax 方式访问
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.UseRadio">
            <summary>
            获取或设置是否使用单选模式；
            一般情况下，true 为单选框，false 为复选框，null为不使用选择框
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.UsePaging">
            <summary>
            获取或设置是否使用分页方式
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.UseFuzzyQuery">
            <summary>
            获取查询时是否启用了模糊查询
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.FromHistory">
            <summary>
            获取或设置是否是返回列表的分页请求
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.SizeDefault">
            <summary>
            获取或设置默认每页显示条数
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.SortDefault">
            <summary>
            获取或设置默认的排序标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.ButtonCount">
            <summary>
            获取页码显示个数, 默认值5
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.ItemStart">
            <summary>
            获取当前页面查询记录开始的序号，便于页面显示从 1 开始
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.ItemEnd">
            <summary>
            获取当前页面查询记录结束的序号，便于页面显示从 1 开始
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.FuzzyLambda">
            <summary>
            获取或设置模糊查询使用的查询表达式
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.QueryFields">
            <summary>
            获取或设置解析后的特定字段的查询请求设置
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.SortFields">
            <summary>
            获取或设置当前查询采用的排序字段及顺序
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.Sort">
            <summary>
            获取或设置请求的排序标识
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.Word">
            <summary>
            获取或设置查询请求的关键字，可能在预定义的多个字段中进行模糊查询
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.QueryParams">
            <summary>
            获取或设置用户原始的查询请求参数
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.Size">
            <summary>
            每页显示的数据条数
            小于等于 0 则自动取默认条数（15）
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.Index">
            <summary>
            当前请求第几页，从0开始
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.HasQueryFuzzy">
            <summary>
            获取查询时是否包含了模糊查询的关键字
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.HasQueryFields">
            <summary>
            获取查询时是否打开了更多查询的界面
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest.ColsSelected">
            <summary>
            获取或设置已选择的数据列索引标识
            </summary>
        </member>
        <member name="M:KdCore.Data.IKdDataRequest.InitQuerys(System.Collections.Specialized.NameValueCollection)">
            <summary>
            初始化查询参数
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:KdCore.Data.IKdDataRequest.GetQueryName(System.String)">
            <summary>
            获取页面查询字段的参数名称
            </summary>
            <param name="name">查询字段名称</param> 
            <returns>查询字段的参数名称</returns>
        </member>
        <member name="M:KdCore.Data.IKdDataRequest.GetQueryAffixName(System.String)">
            <summary>
            获取页面查询字段带有附加后缀的参数名称
            </summary>
            <param name="name">查询字段名称</param> 
            <returns>查询字段的参数名称</returns>
        </member>
        <member name="M:KdCore.Data.IKdDataRequest.GetQueryValue(System.String)">
            <summary>
            获取页面查询字段的查询参数值
            </summary>
            <param name="name">查询字段名称</param> 
            <returns>查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.IKdDataRequest.GetQueryAffixValue(System.String)">
            <summary>
            获取页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="name">查询字段名称</param>
            <returns>带有附加后缀的查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.IKdDataRequest.GetQueryValues(System.String)">
            <summary>
            获取页面查询字段的查询参数值
            </summary>
            <param name="name">查询字段名称</param>
            <returns>查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.IKdDataRequest.GetQueryAffixValues(System.String)">
            <summary>
            获取页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="name">查询字段名称</param>
            <returns>带有附加后缀的查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.IKdDataRequest.FilterQueryable``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            根据当前的数据请求的筛选条件，对数据进行筛选
            </summary>
            <param name="queryable"></param>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.IKdDataRequest.Respond``1(System.Linq.IQueryable{``0},System.String,System.Nullable{System.Boolean})">
            <summary>
            根据分页查询参数进行查询
            </summary>
        </member>
        <member name="M:KdCore.Data.IKdDataRequest.Respond``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Nullable{System.Boolean})">
            <summary>
            根据分页查询参数进行查询
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdDataRequest`1">
            <summary>
            泛型数据查询参数接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataRequest`1.FuzzyWord">
            <summary>
            获取或设置模糊查询使用的查询表达式
            </summary>
        </member>
        <member name="T:KdCore.Data.IKdDataResponse">
            <summary>
            数据查询响应接口
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.DataCount">
            <summary>
            获取查询结果记录总条目数
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.ItemCount">
            <summary>
            获取当前查询结果需要显示的数据
            一般情况下与设置的页面显示条数相同，当尾页时可能不是满页，则小于页面显示条数
            如果返回结果小于0，则表示尚未给当前页面显示数据赋值
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.PageCount">
            <summary>
            获取分页的总页数
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.PageStart">
            <summary>
            获取页码开始数字, 从0开始
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.PageEnd">
            <summary>
            获取显示的页码结束数字, 从0开始
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.BtnPageUseHref">
            <summary>
            获取或设置是否使用 href 方式进行翻页，当启用了 ajax 时设置该属性无效
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.Title">
            <summary>
            获取或设置此操作的名称或标题
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.Message">
            <summary>
            获取或设置操作返回的相关信息说明
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.Context">
            <summary>
            获取或设置操作源数据
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.MsgExtra">
            <summary>
            获取或设置返回结果附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.MsgExtra1">
            <summary>
            获取或设置返回结果附加数据1
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.MsgExtra2">
            <summary>
            获取或设置返回结果附加数据2
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.DataExtra">
            <summary>
            获取或设置返回结果附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.DataExtra1">
            <summary>
            获取或设置返回结果附加数据1
            </summary>
        </member>
        <member name="P:KdCore.Data.IKdDataResponse.DataExtra2">
            <summary>
            获取或设置返回结果附加数据2
            </summary>
        </member>
        <member name="T:KdCore.Data.Json.BbJsonConverter">
            <summary>
            自定义 JSON 转换工具基类
            </summary>
        </member>
        <member name="P:KdCore.Data.Json.BbJsonConverter.CanRead">
            <summary>
            当前的转换工具类是否适用于 JSON 数据读取
            </summary>
        </member>
        <member name="M:KdCore.Data.Json.BbJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            读取 JSON 数据转换为对象的处理方法
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Json.BbJsonConverter`1">
            <summary>
            适用于类型 T 的自定义 JSON 转换工具基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:KdCore.Data.Json.BbJsonConverter`1.CanConvert(System.Type)">
            <summary>
            判断对象类型是否适用于当前的转换工具类
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.Json.BbJsonConverter`1.CanRead">
            <summary>
            当前的转换工具类是否适用于 JSON 数据读取
            </summary>
        </member>
        <member name="M:KdCore.Data.Json.BbJsonConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            读取 JSON 数据转换为对象的处理方法
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Json.HttpCookieCollectionJsonConverter">
            <summary>
            适用于 HttpCookieCollection 的 JSON 转换工具类
            </summary>
        </member>
        <member name="M:KdCore.Data.Json.HttpCookieCollectionJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            转换对象为 JSON 数据的处理方法
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:KdCore.Data.Json.NameValueCollectionJsonConverter">
            <summary>
            适用于 NameValueCollection 的 JSON 转换工具类
            </summary>
        </member>
        <member name="M:KdCore.Data.Json.NameValueCollectionJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            转换对象为 JSON 数据的处理方法
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="T:KdCore.Data.KdDataGroup`1">
            <summary>
            分组数据封装实体
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataGroup`1.Items">
            <summary>
            获取或设置当前分组中包含的数据项
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataGroup`1.ItemCount">
            <summary>
            获取当前分组中包含的数据项数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataGroup`1.HasItems">
            <summary>
            获取当前分组中是否包含数据项
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataGroup`1.GetEnumerator">
            <summary>
            获取当前页面数据集合的枚举数。
            </summary>
            <returns>一个可用于循环访问当前页面数据集合的 System.Collections.IEnumerator 对象。</returns>
        </member>
        <member name="M:KdCore.Data.KdDataGroup`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator">
            <summary>
            获取当前页面数据集合的枚举数。
            </summary>
            <returns>一个可用于循环访问当前页面数据集合的 System.Collections.IEnumerator 对象。</returns>
        </member>
        <member name="M:KdCore.Data.KdDataGroup`1.Dispose(System.Boolean)">
            <summary>
            释放占用资源
            </summary>
            <param name="flag"></param>
        </member>
        <member name="T:KdCore.Data.Menus.KdMenuManager">
            <summary>
            系统菜单管理
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuManager.TreeType">
            <summary>
            获取树结构类型标识，总是返回 <see cref="F:KdCore.Data.Menus.KdMenu.AsyncCode"/>
            </summary>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenuManager.AutoBuildMenuItems(System.Boolean,KdCore.BbClientType)">
            <summary>
            自动根据功能单元属性初始化默认菜单项
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenuManager.AutoBuildMenus">
            <summary>
            自动根据功能单元属性初始化默认菜单
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Menus.KdMenu">
            <summary>
            系统菜单项定义
            </summary>
        </member>
        <member name="F:KdCore.Data.Menus.KdMenu.AsyncCode">
            <summary>
            菜单设置同步识别编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenu.Logger">
            <summary>
            获取当前类型的日志输出接口实例对象
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenu.Manager">
            <summary>
            系统菜单管理
            </summary>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.GetRealityMenu(System.String)">
            <summary>
            根据指定识别编码，获取实际存在的菜单定义
            </summary>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.QueryClientMenus(KdCore.BbClientType)">
            <summary>
            查询所有支持指定客户端类型的全部菜单
            </summary> 
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.GetDefaultMenu(KdCore.BbClientType)">
            <summary>
            获取指定客户端类型的默认菜单，如果未定义该客户端类型的菜单，则返回 <see langword="null"/>
            </summary>
            <param name="clientType">客户端类型</param>
            <returns>数据字典项</returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.GetMenu(System.String,KdCore.BbClientType)">
            <summary>
            根据指定识别编码，获取当前系统中的菜单定义，如果未找到，则尝试返回默认菜单
            </summary>
            <param name="menuCode">菜单标识</param>
            <param name="clientType">客户端类型</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.InitMenus">
            <summary>
            初始化系统菜单
            </summary>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.ResetCaches">
            <summary>
            重置缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.GetAllMenus(System.Linq.Expressions.Expression{System.Func{KdCore.Data.Menus.KdMenu,System.Boolean}})">
            <summary>
            获取当前系统中所有符合条件的菜单集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.JsonSave(KdCore.Data.EditModels.KdMenuItemEdit)">
            <summary>
            保存菜单项修改
            </summary>
            <param name="editModel"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.JsonDelete(System.String,System.String[])">
            <summary>
            删除菜单项
            </summary>
            <param name="menuCode"></param>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenu.OnlyAdmin">
            <summary>
            获取或设置当前菜单是否仅限后台管理使用
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenu.ClientSupport">
            <summary>
            获取或设置当前菜单支持使用的客户端类型
            </summary>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.LoadJsonNodes(System.String)">
            <summary>
            JSON序列化文件加载指定识别编码的树结构的节点数据
            </summary>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.GetItemsNeedAuthVerify">
            <summary>
            获取需要授权的设置的菜单集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.FindUnitItem(System.String)">
            <summary>
            通过模块标识查找菜单项
            </summary>
            <param name="unitSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.FindByUrlPath(System.String)">
            <summary>
            通过URL路径查找菜单项
            </summary>
            <param name="urlPath"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.FindByUrlPath(System.String,KdCore.Data.Menus.KdMenuItem)">
            <summary>
            通过URL查找菜单项
            </summary>
            <param name="urlPath"></param>
            <param name="parent"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.CloneMenu(System.Boolean,System.Linq.Expressions.Expression{System.Func{KdCore.Data.Menus.KdMenuItem,System.Boolean}})">
            <summary>
            克隆一个菜单树，避免使用中被不小心修改，影响到全局的菜单使用
            </summary>
            <param name="onlyValid"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.CloneClientMenu(KdCore.BbClientType,System.Boolean,System.Linq.Expressions.Expression{System.Func{KdCore.Data.Menus.KdMenuItem,System.Boolean}})">
            <summary>
            克隆复制一份指定客户端类型的菜单树
            </summary>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenu.UnitClientMenuCodes">
            <summary>
            获取功能模块在特定客户端类型时使用的菜单标识缓存字典
            </summary>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.GetUnitClientMenuCode(System.Type,KdCore.BbClientType)">
            <summary>
            获取指定类型的功能模块，在特定客户端类型时使用的菜单标识
            </summary>
            <param name="unitClrType"></param>
            <param name="clientType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.ParseUnitClientMenu(System.Type,KdCore.Data.Units.KdUnitGroup,KdCore.BbClientType,KdCore.Data.Units.KdUnitConfig)">
            <summary>
            解析推断指定类型的功能模块，在特定客户端类型时使用的菜单标识
            </summary>
            <param name="unitClrType"></param>
            <param name="unitGroup"></param>
            <param name="clientType"></param>
            <param name="unitConfig"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.ParseUnitClientMenuCode(System.Type,KdCore.BbClientType)">
            <summary>
            解析推断指定类型的功能模块，在特定客户端类型时使用的菜单标识
            </summary>
            <param name="unitClrType"></param>
            <param name="clientType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.GetDefautlMenuCode(System.Type,KdCore.BbClientType)">
            <summary>
            获取指定类型的功能模块，在特定客户端类型时使用的菜单标识
            </summary>
            <param name="unitClrType"></param>
            <param name="clientType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenu.GetUserMenu(System.Security.Principal.IPrincipal,System.Type,KdCore.BbClientType)">
            <summary>
            获取指定用户的可显示菜单
            </summary>
            <param name="principal"></param>
            <param name="unitClrType"></param>
            <param name="clientType"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Menus.KdMenuItem">
            <summary>
            系统菜单项定义
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.UrlPath">
            <summary>
            获取或设置菜单对应的普通功能页面路径
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.IconUrl">
            <summary>
            获取或设置菜单图片的链接 URL
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.IconPath">
            <summary>
            获取或设置菜单图标的识别标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.UnitSign">
            <summary>
            获取或设置关联的功能单元的标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.IsBindUnit">
            <summary>
            获取或设置是否与关联的功能单元进行绑定，绑定后该功能模块视其所在菜单为默认菜单
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.OpenTarget">
            <summary>
            获取或设置菜单打开目标方式
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.IsHidden">
            <summary>
            获取或设置是否隐藏不显示（隐藏时子菜单也不显示），用于授权等管理使用
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.MenuParam1">
            <summary>
            获取或设置菜单的附加参数1
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.MenuParam2">
            <summary>
            获取或设置菜单的附加参数2
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.MenuParam3">
            <summary>
            获取或设置菜单的附加参数3
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.MenuParam4">
            <summary>
            获取或设置菜单的附加参数4
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.AuthRequired">
            <summary>
            获取是否需要授权
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.IsAuthorized">
            <summary>
            获取或设置对当前登录用户是否授权
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.UnitGroup">
            <summary>
            获取关联的功能单元
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.UnitActions">
            <summary>
            菜单下所有的操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.AuthRequiredActions">
            <summary>
            菜单下所有需要授权才能进行的操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.DefaultAction">
            <summary>
            获取或设置点击菜单时的默认操作的识别编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.DefaultUnitAction">
            <summary>
            点击菜单时的默认操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.MenuAuthCodes">
            <summary>
            获取或设置判断菜单是否显示时需要进行检验的操作识别编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Menus.KdMenuItem.MenuAuthActions">
            <summary>
            判断菜单是否显示时需要进行检验的操作
            </summary>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenuItem.BindUnit(KdCore.Data.Units.KdUnitGroup)">
            <summary>
            将功能单元的标识数据绑定到菜单项实例的对应属性
            </summary>
            <param name="unit"></param>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenuItem.MergeValues(KdCore.Data.Menus.KdMenuItem)">
            <summary>
            合并菜单属性值
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenuItem.InitUnitGroup">
            <summary>
            初始化菜单对应的功能模块
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenuItem.InitUnitActions">
            <summary>
            初始化菜单下的操作定义
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenuItem.FindByUrlPath(System.String)">
            <summary>
            查找与参数 UrlPath 相同的菜单项或子菜单项
            </summary>
            <param name="urlPath">需要查找菜单的 url</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenuItem.Active(System.String)">
            <summary>
            激活菜单项为当前菜单
            </summary>
            <param name="activeUnitSign"></param>
        </member>
        <member name="M:KdCore.Data.Menus.KdMenuItem.GetFirstUrlPath(System.Func{KdCore.Data.Menus.KdMenuItem,System.Boolean})">
            <summary>
            获取当前菜单的链接 URL，或着其子菜单的第一个有效的 URL 链接
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Providers.IKdNotifyProvider">
            <summary>
            系统提醒消息数据处理程序接口定义，请注意数据操作后是否提交( <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges"/> )
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdNotifyProvider.SaveUserNotifies(KdCore.Data.Users.KdUserNotify,KdCore.Data.Users.IKdUser[])">
            <summary>
            未指定的用户添加提醒消息到数据库
            </summary>
            <param name="notify"></param>
            <param name="users"></param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdNotifyProvider.LoadUserNotify(KdCore.Data.Users.IKdUser,System.String,System.Nullable{System.DateTime})">
            <summary>
            获取指定用户的最早一条待显示提醒通知
            </summary>
            <param name="user"></param>
            <param name="prevNotifyId"></param>
            <param name="timeLimit"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdNotifyProvider.LoadUserNotifies(KdCore.Data.Users.IKdUser,System.String,System.Nullable{System.DateTime},System.Int32)">
            <summary>
            获取指定用户的所有待显示提醒通知
            </summary> 
        </member>
        <member name="M:KdCore.Data.Providers.IKdNotifyProvider.ReadUserNotify(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            用户标识指定主键的提醒消息为已读状态
            </summary>
            <param name="user"></param>
            <param name="notifyId"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Providers.IKdUserFollowProvider">
            <summary>
            系统用户数据查询提供程序规范接口
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserFollowProvider.GetUserFollow``1(``0,System.String)">
            <summary>
            查询收藏关注记录
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="unitSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserFollowProvider.FollowUrl``1(``0,System.String,System.String,System.String,System.String)">
            <summary>
            添加/取消关注收藏
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="url"></param>
            <param name="itemGroup"></param>
            <param name="unitSign"></param>
            <param name="unitName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserFollowProvider.QueryFollow(System.String,System.Linq.Expressions.Expression{System.Func{KdCore.Data.Users.KdUserFollow,System.Boolean}})">
            <summary>
            查询收藏关注的数据记录
            </summary>
            <param name="sourceId"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserFollowProvider.DeleteFollow(System.String,System.Linq.Expressions.Expression{System.Func{KdCore.Data.Users.KdUserFollow,System.Boolean}})">
            <summary>
            清除收藏关注的数据记录
            </summary>
            <param name="sourceId"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Providers.IKdAnnexProvider">
            <summary>
            附件常用处理程序接口定义，请注意数据操作后是否提交( <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges"/> )
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.FileGet(System.String)">
            <summary>
            获取附件数据记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.FileUpload(KdCore.Data.Annexs.KdFileBase)">
            <summary>
            添加附件数据
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.FileUpdate(KdCore.Data.Annexs.KdFileBase)">
            <summary>
            附件数据更新
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.FileDelete(System.String)">
            <summary>
            删除文件/文件夹及其下所有记录，同时删除数据记录中保存路径上保存的文件
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.FileDownload(System.String)">
            <summary>
            获取下载文件，并更新下载计数
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.FileThumbnails(System.String)">
            <summary>
            获取附件的预览文件；如图片类文件自动生成并返回缩略图
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.FileThumbnails(KdCore.Data.Annexs.KdFileBase)">
            <summary>
            获取附件的预览文件；如图片类文件自动生成并返回缩略图
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.AddWatermark(KdCore.Data.Annexs.KdFileBase,System.Drawing.Point,System.String)">
            <summary>
            添加水印
            </summary>
            <param name="file"></param>
            <param name="startPosition"></param>
            <param name="watermarkPath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.AddWatermark(System.Collections.Generic.IEnumerable{KdCore.Data.Annexs.KdFileBase},System.Drawing.Point,System.String)">
            <summary>
            添加水印
            </summary>
            <param name="files"></param>
            <param name="startPosition"></param>
            <param name="watermarkPath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.CountAnnexFiles(KdCore.Data.Annexs.KdAnnexRequest)">
            <summary>
            根据参数查询附件的统计数量
            </summary>
            <param name="request"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.GetAnnexFiles(KdCore.Data.Annexs.KdAnnexRequest,System.Boolean)">
            <summary>
            根据参数查询附件列表
            </summary>
            <param name="request"></param>
            <param name="noTracking"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.LoadAnnexFiles(KdCore.Data.Annexs.IKdEntityAnnex,System.Boolean)">
            <summary>
            根据数据源查询并设置附件列表
            </summary>
            <param name="source"></param>
            <param name="noTracking"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.GetAnnexContext(KdCore.Data.Annexs.IKdEntityAnnex,System.String,System.Boolean)">
            <summary>
            根据数据源查询附件列表
            </summary>
            <param name="source"></param>
            <param name="annexType"></param>
            <param name="noTracking"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.MoveFileSort(System.String,System.String,System.Boolean)">
            <summary>
            移动附件排序
            </summary>
            <param name="sourceId"></param>
            <param name="fileId"></param>
            <param name="isUp"></param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdAnnexProvider.CopyAnnexsTo(KdCore.Data.Annexs.IKdEntityAnnex,KdCore.Data.IKdEntityBase)">
            <summary>
            复制挂载在源数据下的附件记录到另一实体数据名下（不复制附件的物理文件）
            </summary>
            <param name="source"></param>
            <param name="target"></param>
        </member>
        <member name="T:KdCore.Data.Providers.IKdLogsProvider">
            <summary>
            系统日志处理程序接口定义，请注意数据操作后是否提交( <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges"/> )
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdLogsProvider.AddLogs(KdCore.Data.Users.KdUserAction)">
            <summary>
            保存用户操作日志，请在保存前自行设置日志实体的创建用户属性
            </summary>
            <param name="userActionLog"></param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdLogsProvider.AddLogs(System.Collections.Generic.IEnumerable{KdCore.Data.Users.KdUserAction})">
            <summary>
            保存用户操作日志，请在保存前自行设置日志实体的创建用户属性
            </summary>
            <param name="userActionLogs"></param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdLogsProvider.Get(System.String)">
            <summary>
            查询系统日志
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdLogsProvider.Query(System.Linq.Expressions.Expression{System.Func{KdCore.Data.Users.KdUserAction,System.Boolean}})">
            <summary>
            查询系统日志
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdLogsProvider.QueryBatchLogs(System.String)">
            <summary>
            查询一个操作批次的有关系统日志集合
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdLogsProvider.ClearLogs(System.Nullable{System.TimeSpan})">
            <summary>
            清理过期系统日志；
            直接提交到数据库，一般不与其他事务操作在一起执行
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdLogsProvider.DeleteLogs(System.String)">
            <summary>
            删除系统日志
            </summary>
            <param name="logId"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdLogsProvider.DeleteLogs(KdCore.Data.Users.KdUserAction)">
            <summary>
            删除系统日志
            </summary>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdLogsProvider.DeleteLogs(System.Collections.Generic.IEnumerable{KdCore.Data.Users.KdUserAction})">
            <summary>
            批量删除系统日志
            </summary>
            <param name="logs"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdLogsProvider.DeleteBatchLogs(System.String)">
            <summary>
            批量删除一个操作批次的有关的系统日志
            </summary>
            <param name="logBatchTaskId"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Providers.IKdDataProvider">
            <summary>
            数据处理提供程序规范接口，请注意数据操作后是否提交( <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges"/> )
            </summary>
        </member>
        <member name="P:KdCore.Data.Providers.IKdDataProvider.Logger">
            <summary>
            日志记录接口
            </summary> 
        </member>
        <member name="P:KdCore.Data.Providers.IKdDataProvider.SessionKey">
            <summary>
            识别标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Providers.IKdDataProvider.DataSession">
            <summary>
            获取或设置当前服务程序所在的数据会话
            </summary>
        </member>
        <member name="P:KdCore.Data.Providers.IKdDataProvider.CurrUser">
            <summary>
            获取或设置当前操作数据的用户
            </summary>
        </member>
        <member name="P:KdCore.Data.Providers.IKdDataProvider.DebugMode">
            <summary>
            获取或设置是否调试模式，调式模式下会输出更多的日志信息等
            </summary>
        </member>
        <member name="P:KdCore.Data.Providers.IKdDataProvider.DataLogWrite">
            <summary>
            获取或设置SQL日志输出方法
            </summary> 
        </member>
        <member name="P:KdCore.Data.Providers.IKdDataProvider.DataLogsSerialBase">
            <summary>
            获取或设置用户操作自动日志（保存到数据库的日志）的批次序号基数
            </summary>
        </member>
        <member name="P:KdCore.Data.Providers.IKdDataProvider.DataLogsDetails">
            <summary>
            获取或设置是否启用用户操作自动日志（保存到数据库的日志）（EntityFramework 每次CURD操作的详细日志）
            </summary>
        </member>
        <member name="P:KdCore.Data.Providers.IKdDataProvider.DataLogsUnify">
            <summary>
            获取或设置用户操作自动日志的统一格式化设置
            </summary>
        </member>
        <member name="P:KdCore.Data.Providers.IKdDataProvider.HasDataChanged">
            <summary>
            获取或设置是否检测到数据变化（显式调用了添加删除或更新方法）
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges">
            <summary>
             将在此上下文中所做的所有更改保存到基础数据存储。
            </summary>
            <returns>已写入基础数据存储的对象的数目。</returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges(System.Boolean)">
            <summary>
             将在此上下文中所做的所有更改保存到基础数据存储。
            </summary>
            <param name="submitDataSession">是否提交整个 <see cref="P:KdCore.Data.Providers.IKdDataProvider.DataSession"/> 中所有的数据修改，值为false时仅提交当前数据上下文</param>
            <returns>已写入基础数据存储的对象的数目。</returns>
        </member>
        <member name="T:KdCore.Data.Providers.IKdSmsProvider">
            <summary>
            短信收发数据处理程序接口定义，请注意数据操作后是否提交( <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges"/> )
            </summary>
        </member>
        <member name="E:KdCore.Data.Providers.IKdSmsProvider.OnSmsSend">
            <summary>
            当前的短信发送事件
            </summary>
        </member>
        <member name="E:KdCore.Data.Providers.IKdSmsProvider.OnSmsReceive">
            <summary>
            当前的短信收取事件
            </summary>
        </member>
        <member name="P:KdCore.Data.Providers.IKdSmsProvider.SmsQueryTagDisabled">
            <summary>
            获取或设置使用 <see cref="M:KdCore.Data.Providers.IKdSmsProvider.SmsQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})"/> 查询数据时是否包含 TagDisabled = true 的数据
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdSmsProvider.SmsQuery``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            查询短信数据
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdSmsProvider.SmsLast``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            最后一条待发送或已经发送（根据具体指定的查询类型决定）的短信查询
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdSmsProvider.GetTransceiver">
            <summary>
            获取短信实际收发处理接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdSmsProvider.TestTransceiver">
            <summary>
            测试短信实际收发处理接口是否连接正常
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdSmsProvider.SmsTransmit">
            <summary>
            检查短信发送和接收
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdSmsProvider.SmsSave(KdCore.Data.Sms.KdSmsSend)">
            <summary>
            保存接收到的短信到数据库
            </summary>
            <param name="sms"></param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdSmsProvider.SmsSave(KdCore.Data.Sms.KdSmsReceive)">
            <summary>
            保存接收到的短信到数据库
            </summary>
            <param name="sms"></param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdSmsProvider.SmsResend(System.String[])">
            <summary>
            重新发送选定的短信
            </summary>
            <param name="ids"></param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdSmsProvider.SmsDelete``1(System.String[])">
            <summary>
            短信删除
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdSmsProvider.SmsCancel(System.Linq.Expressions.Expression{System.Func{KdCore.Data.Sms.KdSmsSend,System.Boolean}})">
            <summary>
            撤销短信发送，但已发送的无法撤销
            </summary>
            <param name="predicate">撤销待发短信记录的筛选条件</param>
        </member>
        <member name="T:KdCore.Data.Providers.IKdTaskProvider">
            <summary>
            用于处理待办事项的提供程序获取接口的定义，请注意数据操作后是否提交( <see cref="M:KdCore.Data.Providers.IKdDataProvider.SaveChanges"/> )
            </summary>
        </member>
        <member name="P:KdCore.Data.Providers.IKdTaskProvider.TaskQueryTagDisabled">
            <summary>
            获取或设置使用 <see cref="M:KdCore.Data.Providers.IKdTaskProvider.QueryUserTasks(System.Linq.Expressions.Expression{System.Func{KdCore.Data.Tasks.KdUserTask,System.Boolean}})"/> 查询数据时是否包含 TagDisabled = true 的数据
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.QueryUserTasks(System.Linq.Expressions.Expression{System.Func{KdCore.Data.Tasks.KdUserTask,System.Boolean}})">
            <summary>
            查询符合条件的待办事项
            </summary>
            <param name="predicate">待办事项查询条件</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.QueryUserTasks(KdCore.Data.Tasks.IKdTaskOption)">
            <summary>
            查询符合选项设置条件的待办事项
            </summary>
            <param name="option">待办事项选项设置</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.QueryUserTasks(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            查询待办事项
            </summary>
            <param name="userId"></param>
            <param name="todo">是否仍在待办状态</param>
            <param name="onlyView">是否仅需查阅</param>
            <param name="valueIgnoreCount">查询待办事项的忽略计数状态的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.QueryUserTasks(System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            查询待办事项
            </summary>
            <param name="itemId">直接关联的数据项主键</param>
            <param name="receiverId">待办人用户主键</param>
            <param name="sourceId">最终关联的源数据主键</param>
            <param name="onlyView">是否仅需查阅</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.GetUserPlansToday(System.String)">
            <summary>
            查询日程安排
            </summary>
            <param name="planUserId"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.GetUserTask(System.String)">
            <summary>
            根据主键获取待办事项
            </summary>
            <param name="taskId">待办事项记录主键</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.GetUserTasks(System.String[])">
            <summary>
            根据主键获取待办事项
            </summary>
            <param name="taskIds">待办事项记录主键</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.GetUserTasks(System.String,System.String,System.String,System.String[])">
            <summary>
            查询指定用户与指定对象主键相关的待办事项集合
            </summary>
            <param name="receiverId">待办事项的待办人主键</param>
            <param name="unitSign">待办事项关联的功能单元标识，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.UnitSign"/> 的值</param>
            <param name="sourceType">待办事项关联的事项数据类型标识，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceType"/> 的值</param>
            <param name="sourceIds">待办事项关联的事项数据主键，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceId"/> 的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.GetSourceTasks(System.String,System.String,System.String)">
            <summary>
            查询与指定对象主键相关的待办事项集合
            </summary>
            <param name="sourceId">待办事项关联的事项数据主键，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceId"/> 的值</param>
            <param name="unitSign">待办事项关联的功能单元标识，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.UnitSign"/> 的值</param>
            <param name="sourceType">待办事项关联的事项数据类型标识，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceType"/> 的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.UpdateSourceTasks``1(KdCore.Data.Tasks.IKdEntityTasks,KdCore.Data.Tasks.IKdTaskOption,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            更新数据对象关联的所有待办事项
            通常该操作都与数据对象的更新放在同一事务中，因此，此操作不做提交操作，请在不使用事务时手动提交保存
            </summary>
            <typeparam name="TKdUser"></typeparam>
            <param name="source"></param>
            <param name="taskOption">待办事项的筛选设置</param>
            <param name="receivers"></param> 
            <returns>更新后最终有效的待办事项</returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.BatchReadOnlyView(System.String,System.String[])">
            <summary>
            批量设置传阅类型的待办事项为已阅，直接提交了 SaveChanges
            </summary>
            <param name="unitSign">待办事项关联的功能单元标识，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.UnitSign"/> 的值</param> 
            <param name="userTaskIds">要设置已阅状态的待办事项主键</param>
            <returns></returns> 
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.CancelUserTasks(System.String[])">
            <summary>
            取消待办事项，并返回取消的待办事项记录；
            同时尝试删除关联的短信
            </summary>
            <param name="userTaskIds">待办事项记录主键</param> 
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.CancelUserTasks(System.String,System.String,System.String)">
            <summary>
            取消待办事项，并返回取消的待办事项记录；
            同时尝试删除关联的短信
            </summary>
            <param name="itemId">待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.ItemId"/> 的值</param>
            <param name="receiverId">待办人用户主键，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.ReceiverId"/> 的值</param>
            <param name="sourceId">待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceId"/> 的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.RestartUserTasks(System.String[])">
            <summary>
            重新激活已取消的待办事项，并返回重新激活的待办事项记录
            </summary>
            <param name="userTaskIds">待办事项记录主键</param> 
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.RestartUserTasks(System.String,System.String,System.String)">
            <summary>
            重新激活已取消的待办事项，并返回重新激活的待办事项记录
            </summary>
            <param name="itemId">待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.ItemId"/> 的值</param>
            <param name="receiverId">待办人用户主键，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.ReceiverId"/> 的值</param>
            <param name="sourceId">待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceId"/> 的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.ReadUserTasks(KdCore.Data.BbTaskStatus,System.String,System.String,System.String)">
            <summary>
            办理仅需阅读的待办事项，并返回办理的待办事项记录
            </summary>
            <param name="taskStatus">最新的办理状态，将要赋给待办事项的 <see cref="P:KdCore.Data.Tasks.KdEntityTimeLamp.HandleStatus"/> 的值</param>
            <param name="unitSign">待办事项关联的功能单元标识，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.UnitSign"/> 的值</param> 
            <param name="receiverId">待办人用户主键，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.ReceiverId"/> 的值</param>
            <param name="sourceId">待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceId"/> 的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.HandleUserTasks(KdCore.Data.BbTaskStatus,System.String,System.String,System.String)">
            <summary>
            办理待办事项（不区分主办还是传阅），并返回办理的待办事项记录
            </summary>
            <param name="taskStatus">最新的办理状态，将要赋给待办事项的 <see cref="P:KdCore.Data.Tasks.KdEntityTimeLamp.HandleStatus"/> 的值</param>
            <param name="itemId">待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.ItemId"/> 的值</param>
            <param name="receiverId">待办人用户主键，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.ReceiverId"/> 的值</param>
            <param name="sourceId">待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceId"/> 的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.UpdateTaskStatus(KdCore.Data.BbTaskStatus,System.String,System.String,System.String)">
            <summary>
            更新待办事项（不区分主办还是传阅）的办理状态，并返回办理的待办事项记录
            </summary>
            <param name="taskStatus">最新的办理状态，将要赋给待办事项的 <see cref="P:KdCore.Data.Tasks.KdEntityTimeLamp.HandleStatus"/> 的值</param>
            <param name="itemId">待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.ItemId"/> 的值</param>
            <param name="receiverId">待办人用户主键，待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.ReceiverId"/> 的值</param>
            <param name="sourceId">待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceId"/> 的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.AddTasks(KdCore.Data.Tasks.KdUserTask[])">
            <summary>
            批量添加待办事项
            </summary>
            <param name="userTasks"></param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.UpdateTasks(KdCore.Data.Tasks.KdUserTask[])">
            <summary>
            批量更新待办事项
            </summary>
            <param name="userTasks"></param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.SaveTasks(KdCore.Data.Tasks.KdUserTask[])">
            <summary>
            批量保存待办事项，请注意设置数据的保存模式 SaveMode
            </summary>
            <param name="userTasks"></param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.DeleteTasks(KdCore.Data.Tasks.KdUserTask[])">
            <summary>
            删除待办事项；
            同时尝试删除关联的短信
            </summary>
            <param name="userTasks">要删除的待办事项</param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.DeleteTasks(System.Linq.Expressions.Expression{System.Func{KdCore.Data.Tasks.KdUserTask,System.Boolean}})">
            <summary>
            删除待办事项；
            同时尝试删除关联的短信
            </summary>
            <param name="predicate">待办事项删除筛选条件</param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.DeleteTasksResult(System.Linq.Expressions.Expression{System.Func{KdCore.Data.Tasks.KdUserTask,System.Boolean}},System.Object)">
            <summary>
            删除待办事项，同时尝试删除关联的短信
            </summary>
            <param name="predicate">要删除的待办事项的查询条件</param>
            <param name="deleteSource">删除操作的数据来源</param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.DeleteTaskBySources(System.String[])">
            <summary>
            删除事项所有关联的待办事项，源事项如关联多种事项请慎用；
            如流程审批的多个步骤多个审批人，同一个SourceId会有很多的待办事项；
            同时尝试删除关联的短信
            </summary>
            <param name="sourceIds">要删除的待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.SourceId"/> 的值</param>
        </member>
        <member name="M:KdCore.Data.Providers.IKdTaskProvider.DeleteTaskByItems(System.String[])">
            <summary>
            删除事项直接关联的待办事项，源事项如关联多种事项请慎用；
            同时尝试删除关联的短信
            </summary>
            <param name="itemIds">要删除的待办事项的 <see cref="P:KdCore.Data.Tasks.KdUserTask.ItemId"/> 的值</param>
        </member>
        <member name="T:KdCore.Data.Providers.IKdUserProvider">
            <summary>
            系统用户数据查询提供程序规范接口
            </summary>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserProvider.GetAllRoles">
            <summary>
            获取所有角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserProvider.GetRoles(System.String[])">
            <summary>
            获取所有角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserProvider.GetUsersById(System.String[])">
            <summary>
            查询指定主键的用户
            </summary>
            <param name="userIds">用户主键</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserProvider.GetUserById(System.String)">
            <summary>
            查询指定主键的用户
            </summary>
            <param name="userId">用户主键</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserProvider.GetRoleUsers(System.String)">
            <summary>
            查询指定角色的有效用户
            </summary>
            <param name="roleName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserProvider.UserUpdate(KdCore.Data.Users.IKdUser)">
            <summary>
            保存对用户数据的修改，但暂不提交到数据库；如需提交请执行 SaveChanges
            </summary>
            <param name="user">用户主键</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserProvider.ChangePassword(KdCore.Data.EditModels.KdChgPwd)">
            <summary>
            修改用户密码
            </summary>
            <param name="editModel"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserProvider.GetUserByName(System.String)">
            <summary>
            根据用户登录名查询用户
            </summary>
            <param name="userName">用户登录名</param> 
            <returns>KdUserBase实例</returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserProvider.GetUsers(System.Linq.Expressions.Expression{System.Func{KdCore.Data.Users.KdUser,System.Boolean}})">
            <summary>
            用户查询
            </summary>
            <param name="predicate"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserProvider.GetValidUsers(System.Linq.Expressions.Expression{System.Func{KdCore.Data.Users.KdUser,System.Boolean}})">
            <summary>
            有效用户查询
            </summary>
            <param name="predicate"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Providers.IKdUserProvider.GetUserRange(KdCore.Data.Users.KdUserLimit)">
            <summary>
            查询授权用户的可选范围
            </summary>
            <param name="userLimit"></param> 
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Units.KdAuthUnitContext">
            <summary>
            针对用户一次请求功能单元操作的上下文数据封装。
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.LogLevel">
            <summary>
            当前类型中的 <see cref="M:KdCore.Data.Units.KdAuthUnitContext.LogWrite(System.String,System.Object[])"/> 方法中的日志输出级别
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.Logger">
            <summary>
            获取当前类型的日志输出接口实例对象
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.LogWrite(System.String,System.Object[])">
            <summary>
            输出日志信息，设置统一方法，便于调整日志输出级别
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.Timestamp">
            <summary>
            获取或设置当前请求的初始时间戳。
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.SessionID">
            <summary>
            获取或设置当前请求的会话的唯一标识符。
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.RequestID">
            <summary>
            获取或设置当前请求的唯一标识符。
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.DebugMode">
            <summary>
            获取或设置是否调试模式，调式模式下会输出更多的日志信息等
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.ClrType">
            <summary>
            当前模块 class 类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.ActionCode">
            <summary>
            获取当前操作编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.UnitGroup">
            <summary>
            获取当前操作的所属模块
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.UnitSign">
            <summary>
            获取当前操作的所属模块的识别标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.UnitAction">
            <summary>
            获取当前操作定义
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.ActionSign">
            <summary>
            获取当前的操作验证标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.UnitConfig">
            <summary>
            获取当前功能单元的配置信息
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.UnitGroupAttr">
            <summary>
            获取当前Controller的 <see cref="T:KdCore.KdUnitGroupAttribute"/> 标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.HasError">
            <summary>
            获取或设置当前请求的处理是否发生错误，有错误应回滚数据操作事务，并且记录错误日志
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.AllErrors">
            <summary>
            获取在处理操作时累积的错误（如果有）的数组。
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.AddError(System.Exception)">
            <summary>
            将异常添加到当前上下文的异常集合中。
            </summary>
            <param name="errorInfo"></param>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.ClearError">
            <summary>
            清除当前上下文的的所有错误异常。
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.Func_CreateLogAction">
            <summary>
            获取或设置初始化操作日志的日志数据记录的方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.Func_GetClientDevice">
            <summary>
            获取或设置初始化操作日志的日志数据记录的方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.Func_GetKdDataSession">
            <summary>
            获取或设置初始化操作日志的日志数据记录的方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.CurrPrincipal">
            <summary>
            获取当前操作用户
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.CurrUser">
            <summary>
            获取当前操作用户
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.DataSession">
            <summary>
            数据会话 KdDbSession
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.UnitActionAttr">
            <summary>
            获取当前操作上的特性标注
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.DelayVerify">
            <summary>
            获取当前操作是否推迟权限验证
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.AllowEveryOne">
            <summary>
            获取当前操作是否允许任何人操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.AllowEveryUser">
            <summary>
            获取当前操作是否允许任意用户操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.CurrActionScope">
            <summary>
            获取当前操作验证权限后的验证结果
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.ActionIsVerified">
            <summary>
            获取当前操作是否已经进行了授权验证
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.AuthView">
            <summary>
            获取当前操作的授权验证是否允许查看，尚未验证时默认为 false
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.AuthWork">
            <summary>
            获取或设置数据的权限验证是否允许操作，尚未验证时默认为 false
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.CurrEntity">
            <summary>
            获取当前与权限验证相关的操作数据
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.EntityIsVerified">
            <summary>
            获取当前操作是否已经进行了授权验证
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.UseDeptScope">
            <summary>
            获取是否按照数据的归属部门范围进行权限控制；
            可使用 <see cref="P:KdCore.KdUnitGroupAttribute.DeptScope"/> 特性对整个控制器进行设置，
            以及 <see cref="P:KdCore.IKdActionAttribute.IgnoreDeptScope"/> 特性对当前 Action 进行忽略控制器的整体设置，
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.UseCorpScope">
            <summary>
            获取是否按照数据的归属单位范围进行权限控制；
            可使用 <see cref="P:KdCore.IKdActionAttribute.IgnoreCorpScope"/> 特性对当前 Action 进行忽略控制器的整体设置，
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.ValidatedScopes">
            <summary>
            获取或设置当前上下文中已经验证过的权限结果集合
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.EnableDbLogsActions">
            <summary>
            获取或设置本次操作是否保存日志记录到数据库
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.DbLogLevel">
            <summary>
            获取或设置本次日志记录等级
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.DbLogType">
            <summary>
            获取或设置本次日志记录的操作类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.DbLogContent">
            <summary>
            获取或设置本次日志记录内容
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.DbLogRemarks">
            <summary>
            获取或设置本次日志记录说明
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.DbLogActionMain">
            <summary>
            获取或设置当前请求的主要操作日志
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.DbLogActionDetails">
            <summary>
            获取或设置当前请求的详细操作日志
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.EnableClientTypes">
            <summary>
            获取或设置支持的客户端类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.ClientDevice">
            <summary>
            获取或设置当前的请求客户端类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.ClientType">
            <summary>
            获取或设置当前的请求客户端类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.CurrUserMenu">
            <summary>
            获取或设置界面上使用的当前用户授权验证过可显示的主菜单；
            因使用了缓存，所以每次显示时需要再次与<see cref="P:KdCore.Data.Units.KdAuthUnitContext.CurrMenuItem"/>进行比较，判断是否当前菜单项
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdAuthUnitContext.CurrMenuItem">
            <summary>
            获取或设置当前模块对应的菜单项
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.#ctor(System.Type,System.String,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            构造方法
            </summary>
            <param name="type"></param>
            <param name="actionCode"></param>
            <param name="requestId"></param>
            <param name="timestamp"></param>
            <param name="sessionId"></param>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.ToString">
            <summary>
            重写 ToString 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.GetBatchTag">
            <summary>
            获取当前请求的批次标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.SetActionAttribute(KdCore.IKdActionAttribute)">
            <summary>
            设置与当前操作相关关联方法的操作特性标注
            </summary>
            <param name="attr"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.SetCurrUser(System.Security.Principal.IPrincipal)">
            <summary>
            设置当前操作用户
            </summary>
            <param name="principal"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.SetCurrEntity(KdCore.Data.IKdEntityBase)">
            <summary>
            设置当前主体权限验证数据
            </summary>
            <param name="needAuthEntity"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.GetAuthScope(KdCore.Data.Units.KdUnitAction)">
            <summary>
            获取当前用户拥有的指定操作的权限范围
            </summary>
            <param name="unitAction"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.GetAuthScope(System.String)">
            <summary>
            获取当前用户拥有的指定操作标识的权限范围
            </summary>
            <param name="actionSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.VerifyCurrAction">
            <summary>
            验证当前操作的权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.ClearCurrActionVerify">
            <summary>
            清除当前操作的验证结果，在获取时重新进行验证
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.VerifyCurrEntity">
            <summary>
            验证当前数据的权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.ClearCurrEntityVerify">
            <summary>
            清除当前数据的验证结果，在获取时重新进行验证
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.EnsureCurrVerify">
            <summary>
            确认已经对当前操作及数据进行了权限验证，如果未验证则现在进行验证
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.VerifyCurrEntity(KdCore.Data.IKdEntityBase)">
            <summary>
            设置当前操作需要验证权限的数据，并验证权限
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.GetUserMenu">
            <summary>
            获取当前用户界面菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.SetUserMenu(KdCore.Data.Menus.KdMenu)">
            <summary>
            设置当前用户在此上下文中要显示的页面主菜单
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.ClearUserMenu">
            <summary>
            清除以设置的页面主菜单
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.InitDbLogsType(System.String)">
            <summary>
            初始化部分日志信息设置
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.InitDbLogAction">
            <summary>
            创建一条日志记录，并尝试初始化
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.DbLogsUnify(KdCore.Data.Users.KdUserAction)">
            <summary>
            统一设置一次 HTTP 请求的操作日志属性
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.AddDbLogAction(KdCore.Data.Users.KdUserAction)">
            <summary>
            获取或设置用户操作日志的记录方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.GetDbLogsForSave">
            <summary>
            获取当前操作执行过程中记录的日志数据集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.SaveLogActions">
            <summary>
            保存用户操作日志到数据库
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.SaveLogActionsToDB(System.Collections.Generic.List{KdCore.Data.Users.KdUserAction})">
            <summary>
            执行保存用户操作日志的实现方法
            </summary>
            <param name="actionLogs"></param>
        </member>
        <member name="M:KdCore.Data.Units.KdAuthUnitContext.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:KdCore.Data.Units.KdUnitAction">
            <summary>
             功能单元下的操作标记
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.UnitGroup">
            <summary>
            获取或设置操作所属功能单元
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.SortNum">
            <summary>
            获取或设置操作的排列顺序
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.ActionName">
            <summary>
            获取或设置操作名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.ActionCode">
            <summary>
            获取或设置操作的编码；对应指定操作时调用的方法名称，不可随意修改，对该属性的赋值操作仅限框架内部进行初始化使用
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.EveryOne">
            <summary>
            获取或设置是否任意用户均可访问（不登也可正常访问）
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.EveryUser">
            <summary>
            获取或设置是否任意登录用户均可访问（只要登录即视为验证通过）
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.AliasCode">
            <summary>
            获取或设置操作的编码别名，对应 web MVC 的 System.Web.Mvc.ActionNameAttribute
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.AutoCreate">
            <summary>
            获取或设置为手动标识特性，自动识别创建的模块操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.IgnoreCorpScope">
            <summary>
            获取或设置是否忽略数据的授权范围验证
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.IgnoreDeptScope">
            <summary>
            获取或设置是否忽略数据的部门授权范围验证
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.ShowGroup">
            <summary>
            获取或设置显示行分组，授权界面显示
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.UrlPath">
            <summary>
            获取或设置操作验证的功能识别路径
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.Description">
            <summary>
            获取或设置操作权限说明
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.WorkCodes">
            <summary>
            获取或设置可进入当前操作界面进行操作处理的权限编码（仅限当前操作的功能单元内）
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.ViewCodes">
            <summary>
            获取或设置可进入当前操作界面进行只读查看的权限编码（仅限当前操作的功能单元内）
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.MethodSigns">
            <summary>
            获取或设置操作定义中包含方法的原始标识，类名.方法名，相同命名的方法重载视为同一操作
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.ActionTitle">
            <summary>
            获取或设置操作的完整显示标题名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.ActionSign">
            <summary>
            获取或设置当前操作的原始权限验证标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.AliasSign">
            <summary>
            获取或设置当前操作的替代权限验证标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.WorkSigns">
            <summary>
            获取或设置当前操作的操作权限验证标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.ViewSigns">
            <summary>
            获取或设置当前操作的只读查看验证标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.Methods">
            <summary>
            获取或设置操作对应执行方法集合
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.MethodRuntimeIdentifies">
            <summary>
            获取或设置操作对应执行方法的运行时标识，可能每次运行时不是同一个值，特别是程序集重新编译生成
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitAction.DataAction">
            <summary>
            获取或设置数据操作类型
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.ClearSigns">
            <summary>
            清除当前已生成的识别标识，以便重新生成
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.#ctor(System.Reflection.MethodInfo)">
            <summary>
            构造函数
            </summary>
            <param name="method"></param>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.Equals(System.Object)">
            <summary>
            重写相等比较方法
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.GetHashCode">
            <summary>
            重写 HashCode 计算方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.GetActionTitle">
            <summary>
            获取最终可显示的操作名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.BuildVerifySign(System.String,System.String)">
            <summary>
            生成当前操作的验证标识
            </summary>
            <param name="unitSign"></param>
            <param name="actionCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.GetWorkSigns">
            <summary>
            获取当前操作的操作权限验证标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.GetViewSigns">
            <summary>
            获取当前操作的只读查看验证标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.ToListItem(System.Boolean)">
            <summary>
            转换为列表项
            </summary>
            <param name="moreDataMode">是否使用包含较多数据的模式进行转换</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.GetDataTitle">
            <summary>
            获取显示的文本标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.MergeToOne(System.Collections.Generic.IEnumerable{KdCore.Data.Units.KdUnitAction})">
            <summary>
            将多个 <see cref="T:KdCore.Data.Units.KdUnitAction"/> 合并为一个主体
            </summary>
            <param name="actions"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.ToString">
            <summary>
            重写 ToString 方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Units.KdUnitAction.ActionSignEqualityComparer">
            <summary>
            基于 <see cref="P:KdCore.Data.Units.KdUnitAction.WorkSigns"/> 的比较器
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.ActionSignEqualityComparer.Equals(KdCore.Data.Units.KdUnitAction,KdCore.Data.Units.KdUnitAction)">
            <summary>
            确定指定的对象是否相等。
            </summary>
            <param name="x">要比较的第一个对象。</param>
            <param name="y">要比较的第二个对象。</param>
            <returns>如果指定的对象相等，则为 true；否则为 false。</returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitAction.ActionSignEqualityComparer.GetHashCode(KdCore.Data.Units.KdUnitAction)">
            <summary>
            返回指定对象的哈希代码。
            </summary>
            <param name="obj">System.Object，将为其返回哈希代码。</param>
            <returns>指定对象的哈希代码。</returns>
        </member>
        <member name="T:KdCore.Data.Units.KdUnitConfig">
            <summary>
            系统功能单元的配置设定
            </summary> 
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.Code">
            <summary>
            获取或设置功能单元类型的编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.Name">
            <summary>
            获取或设置功能单元类型的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.Description">
            <summary>
            获取或设置功能单元类型的描述说明
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.GroupName">
            <summary>
            获取或设置功能单元分组名称
            </summary> 
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.GroupCode">
            <summary>
            获取或设置功能单元分组编码，主要是为了对应MVC中的Area
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.CheckLogin">
            <summary>
            获取当前访问是否需要验证登录，默认值为 false
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.IsAdmin">
            <summary>
            获取或设置当前模块是否属于后台管理模块，默认值为 false
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.UsePaging">
            <summary>
            获取或设置是否分页显示，默认值为 true
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.UseFuzzyQuery">
            <summary>
            获取或设置是否启用了模糊查询，默认值为 true
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.DisableEmbedViews">
            <summary>
            获取或设置是否禁用内置的视图文件，默认值为 false
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.BackIndex">
            <summary>
            获取或设置保存数据后跳转到列表，默认值为 true
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.LogsUserActions">
            <summary>
            是否将用户操作日志保存到数据库，默认值为 true
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.UseUserTask">
            <summary>
            获取或设置是否启用自动的用户待办事项
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.TaskOnlyView">
            <summary>
            获取或设置待办事项仅需要查阅
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.TaskIgnoreCount">
            <summary>
            获取或设置待办事项数据不计入正常的待办事项中，仅用于记录用户操作是否完成
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.ShowMsgActionSuccess">
            <summary>
            获取或设置用户操作成功时，是否显示操作结果说明消息。
            清除消息后不用再点击确认关闭消息提示，减少一次确认对话框的弹出
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitConfig.ShowMsgJsonSuccess">
            <summary>
            获取或设置通过 Json 方式响应操作结果时，是否保留操作成功时的结果说明消息。
            清除消息后不用再点击确认关闭消息提示，减少一次确认对话框的弹出
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitConfig.ToString">
            <summary>
            重写 ToString 方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Units.KdUnitGroup">
            <summary>
            系统功能单元定义；
            通常对应于ASP.NET MVC/WebAPI的Controller
            </summary>
        </member>
        <member name="F:KdCore.Data.Units.KdUnitGroup.UNITS_LOCAL_CODE">
            <summary>
            是否本地功能单元的标识代码定义
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.GroupName">
            <summary>
            获取或设置功能单元分组名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.GroupCode">
            <summary>
            获取或设置功能单元分组编码，主要是为了对应MVC中的Area
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.UnitName">
            <summary>
            获取或设置功能单元名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.UnitCode">
            <summary>
            获取或设置功能单元编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.UnitTitle">
            <summary>
            获取功能单元的显示标题
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.UnitSign">
            <summary>
            获取功能单元的唯一标识识别编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.SortNum">
            <summary>
            获取或设置功能单元排列顺序
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.UnitBaseMode">
            <summary>
            获取或设置功能单元所属的系统基类型标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.DefaultAction">
            <summary>
            获取或设置点击菜单时的默认操作的识别编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.ClientSupport">
            <summary>
            获取或设置可用客户端类型（多种类型的枚举位域组合）
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.UnitSource">
            <summary>
            获取或设置功能单元的来源
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.UnitPath">
            <summary>
            获取或设置功能单元调用标识或路径
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.UrlPathTemplate">
            <summary>
            获取或设置功能单元下的权限操作标识或路径的模板
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.Description">
            <summary>
            获取或设置功能单元的描述说明
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.MenuAuthCodes">
            <summary>
            获取或设置判断菜单是否显示时的进行检验的操作识别编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.UnitCategories">
            <summary>
            获取或设置功能单元所属的系统分类类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.MenuIgnore">
            <summary>
            获取或设置在菜单定义时是否忽略当前功能单元
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.DeptScope">
            <summary>
            获取或设置是否按部门区分数据（按部门查询、编辑、删除等）
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.UseUserTask">
            <summary>
            获取或设置是否启用自动的用户待办事项
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.ClrAssemblyName">
            <summary>
            获取或设置功能单元对应的 class 类所在程序集的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.ClrClassName">
            <summary>
            获取或设置功能单元对应的 class 类的名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.ClrClassType">
            <summary>
            获取或设置功能单元对应的 class 类
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.IsLocalClrType">
            <summary>
            获取是否本地能够运行的功能单元
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitGroup.Actions">
            <summary>
            获取功能单元下的功能操作定义集合；请不要直接修改此集合及其元素的设置
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.#ctor">
            <summary>
            默认构造方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.#ctor(System.Type)">
            <summary>
            根据属性标识创建参数类型相对应的功能单元实例
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.SetClrClassType(System.Type)">
            <summary>
            设置当前功能模块对应运行的类型
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.ReloadClrClassType">
            <summary>
            通过类型名称，重新加载当前功能模块对应运行的类型
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.ToString">
            <summary>
            重写 ToString 方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.ClearSigns">
            <summary>
            清除当前已生成的识别标识，以便重新生成
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.AddActions(System.Collections.Generic.IEnumerable{KdCore.Data.Units.KdUnitAction})">
            <summary>
            添加模块操作定义
            </summary>
            <param name="actions"></param>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.MergeActions">
            <summary>
            整理合并模块操作定义
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.GetUnitAction(System.String)">
            <summary>
            查找指定操作标识的模块操作
            </summary>
            <param name="actionCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.Equals(System.Object)">
            <summary>
            重写相对判断方法
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.GetHashCode">
            <summary>
            重写HashCode计算方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.Compatible(KdCore.BbClientType)">
            <summary>
            是否兼容客户端设备类型
            </summary>
            <param name="compareClient"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.NotCompatible(KdCore.BbClientType)">
            <summary>
            是否不兼容客户端设备类型
            </summary>
            <param name="compareClient"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.IsUnitType(System.String)">
            <summary>
            获取当前功能单元是否属于指定参数的模块类型
            </summary>
            <param name="unitType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.IsUnitType(System.String[])">
            <summary>
            获取当前功能单元是否属于指定参数的模块类型
            </summary>
            <param name="unitTypes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitGroup.ToListItem(System.Boolean)">
            <summary>
            转换为列表项
            </summary>
            <param name="moreDataMode">是否使用包含较多数据的模式进行转换</param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Units.KdUnitManager">
            <summary>
            功能模块管理程序
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitManager.Logger">
            <summary>
            获取当前类型的日志输出接口实例对象
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitManager.AdminUnitGroupName">
            <summary>
            系统管理模块显示分组名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitManager.ThrowOnUnknownUnit">
            <summary>
            获取或设置遇到未能识别的模块或操作时是否抛出异常
            </summary>
        </member>
        <member name="F:KdCore.Data.Units.KdUnitManager.AsyncCode">
            <summary>
            全局设置同步识别编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitManager.Func_CreateDefaultConfigAttribute">
            <summary>
            获取或设置默认功能单元特性标注的方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitManager.Func_InitLocalUnitGroups">
            <summary>
            获取或设置系统模块定义的处理方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitManager.Func_InitRemoteUnitGroups">
            <summary>
            获取或设置系统模块定义的处理方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.InitUnitGroups">
            <summary>
            初始化系统模块
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.BuildVerifySign(System.String,System.String,System.String)">
            <summary>
            功能单元或操作的识别标识的生成方法
            </summary>
            <param name="actionCode"></param>
            <param name="unitCode"></param>
            <param name="groupCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.BuildShowTitle(System.String,System.String,System.String)">
            <summary>
            功能单元或操作的显示标题的生成方法
            </summary>
            <param name="actionName"></param>
            <param name="unitName"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetRemoteUnitGroupsFileName">
            <summary>
            获取委托管理的功能单元定义文件存放文件名称（含路径）
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.BuildUnitGroups(System.Collections.Generic.IEnumerable{System.Type},System.Func{System.Reflection.MethodInfo,System.Boolean})">
            <summary>
            初始化功能单元及权限标识
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetLocalUnitGroups">
            <summary>
            获取本地程序功能单元集合
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetRemoteUnitGroups">
            <summary>
            获取被管理的前台程序功能单元集合
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.ReloadRemoteUnitGroups">
            <summary>
            重新加载已经获取的被管理的前台程序功能单元定义
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetAllUnitGroups(System.Func{KdCore.Data.Units.KdUnitGroup,System.Boolean})">
            <summary>
            获取整体程序功能单元集合
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetAllUnitGroups(System.String,System.String[])">
            <summary>
            获取整体程序功能单元集合
            </summary> 
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetAllUnitGroupSigns">
            <summary>
            获取当前系统中已登记的功能单元识别标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetAllUnitGroupTypes">
            <summary>
            获取当前系统中已登记的功能单元识别标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetUnitGroup(System.String)">
            <summary>
            根据模块标识查找功能单元定义
            </summary>
            <param name="unitGroupSign"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetUnitGroup(System.String,System.Boolean)">
            <summary>
            根据模块标识查找功能单元定义
            </summary>
            <param name="unitGroupSign"></param>
            <param name="logInvalidUnitGroup"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetUnitGroup(System.Type)">
            <summary>
            查找指定类型相对应的功能单元
            </summary>
            <param name="unitGroupType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.IsUnitActionMethod(System.Reflection.MethodInfo)">
            <summary>
            判断一个方法是否会被识别为功能操作
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetAllUnitActionSigns">
            <summary>
            获取当前系统中已登记的模块操作识别标识
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetUnitAction(System.String)">
            <summary>
            根据模块操作标识查找功能单元中的操作定义
            </summary>
            <param name="actionSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetUnitAction(System.Type,System.String)">
            <summary>
            获取指定特性标注所标识的操作编码对应的用户操作定义；在初始化模块操作权限时调用，而不是权限验证时调用
            </summary>
            <param name="type"></param>
            <param name="actionCode"></param>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetUnitAction(KdCore.IKdActionAttribute,System.Type,System.String)">
            <summary>
            获取指定特性标注所标识的操作编码对应的用户操作定义；在初始化模块操作权限时调用，而不是权限验证时调用
            </summary>
            <param name="authAttr"></param>
            <param name="type"></param>
            <param name="actionCode"></param>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.CreateDefault">
            <summary>
            创建一个默认的功能单元特性标注
            </summary>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.Units.KdUnitManager.UnitConfigs">
            <summary>
            缓存字典
            </summary>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetDefaultConfig">
            <summary>
            获取当前系统默认的功能单元设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.BuildUnitConfig(System.Type)">
            <summary>
            根据属性标识创建参数类型相对应的功能单元实例
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Units.KdUnitManager.GetUnitConfig(System.Type)">
            <summary>
            根据属性标识创建参数类型相对应的功能单元实例
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdDataGrid">
            <summary>
            通用数据查询表格封装定义
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataGrid.DataRequest">
            <summary>
            数据查询请求
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataGrid.DataResponse">
            <summary>
            数据查询结果
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataGrid.PrimaryTable">
            <summary>
            数据查询的主表
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataGrid.SecondaryTables">
            <summary>
            数据查询的主表
            </summary>
        </member>
        <member name="T:KdCore.Data.KdDataReport">
            <summary>
            统计报表请求基类
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.Cycle">
            <summary>
            报表统计周期计算方式
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.Curr">
            <summary>
            报表统计请求的日期
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.Start">
            <summary>
            报表统计请求时间范围的开始日期
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.End">
            <summary>
            报表统计请求时间范围的结束日期
            </summary>
        </member>
        <member name="F:KdCore.Data.KdDataReport._dateRange">
            <summary>
            报表统计时间范围
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.DateRange">
            <summary>
            报表统计时间范围
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.ReportTitle">
            <summary>
            报表名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.FileName">
            <summary>
            报表文件名称（含扩展名）
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.ReportContents">
            <summary>
            报表导出/下载文件二进制内容
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.ReporterName">
            <summary>
            制表人
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.ReportTime">
            <summary>
            制表时间
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.MarkCode">
            <summary>
            报表唯一识别码
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.TemplatePath">
            <summary>
            报表模板文件保存路径（物理路径）
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.OutputPath">
            <summary>
            报表导出/下载文件保存路径（物理路径）
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.OutputStream">
            <summary>
            报表输出的文件流
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.HasDateLimit">
            <summary>
            获取报表统计是否具有时间范围限制，即开始时间或结束时间有值
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.HasBtnsExtends">
            <summary>
            获取统计报表显示界面上是否存在额外的扩展按钮
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport.BtnsExtendsViewName">
            <summary>
            获取统计报表显示界面上额外的扩展按钮视图名称
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataReport.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataReport.#ctor(KdCore.BbCycleDate)">
            <summary>
            构造函数
            </summary>
            <param name="cycle"></param>
        </member>
        <member name="M:KdCore.Data.KdDataReport.InitDateRange(KdCore.BbCycleDate,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            初始化报表日期范围
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataReport.InitDateRange(System.Int32,KdCore.BbCycleDate)">
            <summary>
            初始化报表日期范围
            </summary>
            <param name="rangeIndex">日期范围索引</param>
            <param name="cycle">统计周期单位</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataReport.SetReportUser(System.String,System.Nullable{System.DateTime})">
            <summary>
            设置制表人、制表时间
            </summary>
            <param name="reporterName"></param>
            <param name="reportTime"></param>
        </member>
        <member name="M:KdCore.Data.KdDataReport.SetReportUser(KdCore.Data.Users.IKdUser,System.Nullable{System.DateTime})">
            <summary>
            设置制表人、制表时间
            </summary>
            <param name="reportUser"></param>
            <param name="reportTime"></param>
        </member>
        <member name="M:KdCore.Data.KdDataReport.SetColsSelected(System.Boolean,System.Int32[])">
            <summary>
            设置表格显示的列
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataReport.InitColsSelected(System.Int32[])">
            <summary>
            设置表格显示的列
            </summary>
        </member>
        <member name="T:KdCore.Data.KdDataReport`1">
            <summary>
            统计报表请求基类
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport`1.DataResponse">
            <summary>
            报表统计对象数据项的统计结果响应数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport`1.ColsSelected">
            <summary>
            获取或设置数据列已选择标识
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataReport`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataReport`1.#ctor(KdCore.BbCycleDate)">
            <summary>
            构造函数
            </summary>
            <param name="cycle"></param>
        </member>
        <member name="M:KdCore.Data.KdDataReport`1.GetEnumerator">
            <summary>
            返回循环访问 <see cref="P:KdCore.Data.KdDataReport`1.DataResponse"/> 的 Items 的枚举数。
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataReport`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            返回循环访问 <see cref="P:KdCore.Data.KdDataReport`1.DataResponse"/> 的 Items 的枚举数。
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport`1.QueryType">
            <summary>
            获取或设置当前查询的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataReport`1.FuzzyWord">
            <summary>
            获取或设置模糊查询使用的查询表达式
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataReport`1.GetQueryName(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            根据实体属性表达式获取参数名称
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataReport`1.GetQueryAffixName(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            根据实体属性表达式获取带有附加后缀的参数名称
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataReport`1.GetQueryValue(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取页面查询字段的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param> 
            <returns>查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataReport`1.GetQueryAffixValue(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param>
            <returns>带有附加后缀的查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataReport`1.GetQueryValues(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取页面查询字段的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param>
            <returns>查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataReport`1.GetQueryAffixValues(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param>
            <returns>带有附加后缀的查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataReport`1.FilterQueryable``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            根据当前的数据请求的筛选条件，对数据进行筛选
            </summary>
            <typeparam name="TBaseEntity"></typeparam>
            <param name="queryable"></param>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdDataRequest">
            <summary>
            数据查询参数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryCompareName(System.String,System.String)">
            <summary>
            获取页面上指定批次查询字段的参数比较方式
            </summary>
            <param name="queryId">查询批次标识</param>
            <param name="name">查询字段名称</param> 
            <returns>查询字段的参数比较方式</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryName(System.String,System.String)">
            <summary>
            获取页面上指定批次查询字段的参数名称
            </summary>
            <param name="queryId">查询批次标识</param> 
            <param name="name">查询字段名称</param> 
            <returns>查询字段的参数名称</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryAffixName(System.String,System.String)">
            <summary>
            获取页面上指定批次查询字段带有附加后缀的参数名称
            </summary>
            <param name="queryId">查询批次标识</param>
            <param name="name">查询字段名称</param> 
            <returns>查询字段的参数名称</returns>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.Logger">
            <summary>
            获取日志输出接口实例
            </summary> 
        </member>
        <member name="P:KdCore.Data.KdDataRequest.BatchTag">
            <summary>
            获取或设置查询批次标识，主要用来后台数据处理或调试跟踪
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.DebugMode">
            <summary>
            获取或设置是否调试模式，调式模式下会输出更多的日志信息等
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.QueryId">
            <summary>
            参数名称，标识查询请求的分页名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.DataCode">
            <summary>
            获取或设置页面的标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.DataTitle">
            <summary>
            获取或设置页面的标题名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.DataType">
            <summary>
            获取或设置页面的数据类型标识
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.DataKind">
            <summary>
            获取或设置页面的数据分类标识
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.DataRange">
            <summary>
            获取或设置页面的数据范围标识
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.DataBind">
            <summary>
            获取或设置页面的数据绑定类型标识
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.DataRide">
            <summary>
            获取或设置页面的数据控制类型标识
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.QueryType">
            <summary>
            获取或设置当前查询的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.UseAjax">
            <summary>
            获取或设置是否使用 ajax 方式访问
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.UseRadio">
            <summary>
            获取或设置是否使用单选模式；
            一般情况下，true 为单选框，false 为复选框，null为不使用选择框
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.UsePaging">
            <summary>
            获取或设置是否使用分页方式
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.UseFuzzyQuery">
            <summary>
            获取查询时是否启用了模糊查询
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.FromHistory">
            <summary>
            获取或设置是否是返回列表的分页请求
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.SizeDefault">
            <summary>
            获取或设置默认每页显示条数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.SortDefault">
            <summary>
            获取或设置默认的排序标识
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.ButtonCount">
            <summary>
            获取页码显示个数, 默认值5
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.ItemStart">
            <summary>
            获取当前页面查询记录开始的序号，便于页面显示从 1 开始
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.ItemEnd">
            <summary>
            获取当前页面查询记录结束的序号，便于页面显示从 1 开始
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.FuzzyLambda">
            <summary>
            获取或设置模糊查询使用的查询表达式
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.QueryFields">
            <summary>
            获取或设置解析后的特定字段的查询请求设置
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.SortFields">
            <summary>
            获取或设置当前查询采用的排序字段及顺序
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.Sort">
            <summary>
            获取或设置请求的排序标识
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.SortName">
            <summary>
            每页显示的数据条数的参数名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.Word">
            <summary>
            获取或设置查询请求的关键字，可能在预定义的多个字段中进行模糊查询
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.WordName">
            <summary>
            每页显示的数据条数的参数名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.QueryParams">
            <summary>
            获取或设置用户原始的查询请求参数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.Size">
            <summary>
            每页显示的数据条数
            小于等于 0 则自动取默认条数（15）
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.SizeName">
            <summary>
            每页显示的数据条数的参数名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.Index">
            <summary>
            当前请求第几页，从0开始
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.IndexName">
            <summary>
            当前请求第几页的参数名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.HasQueryFuzzy">
            <summary>
            获取查询时是否包含了模糊查询的关键字
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.HasQueryFields">
            <summary>
            获取查询时是否打开了更多查询的界面
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.IsHandledWord">
            <summary>
            获取或设置是否已经处理了关键字查询
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.IsHandledFields">
            <summary>
            获取或设置是否已经处理了字段查询
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest.ColsSelected">
            <summary>
            获取或设置已选择的数据列索引标识
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
            <param name="flag"></param>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.CopyFrom(KdCore.Data.IKdDataRequest)">
            <summary>
            复制查寻参数
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetCompareModeName(System.String)">
            <summary>
            获取页面查询字段的参数的比较方式参数名称
            </summary>
            <param name="name">查询字段名称</param> 
            <returns>查询字段的参数名称</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryName(System.String)">
            <summary>
            获取页面查询字段的参数名称
            </summary>
            <param name="name">查询字段名称</param> 
            <returns>查询字段的参数名称</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryAffixName(System.String)">
            <summary>
            获取页面查询字段带有附加后缀的参数名称
            </summary>
            <param name="name">查询字段名称</param> 
            <returns>查询字段的参数名称</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            根据实体属性表达式获取参数名称
            </summary>
            <typeparam name="TEntity"></typeparam> 
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryAffixName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            根据实体属性表达式获取带有附加后缀的参数名称
            </summary>
            <typeparam name="TEntity"></typeparam> 
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryValue(System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            获取页面查询字段的值
            </summary>
            <param name="queryCollection">页面查询参数集合</param>
            <param name="queryName">查询字段的参数名称</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetCompareMode(System.String)">
            <summary>
            获取页面查询字段的查询参数的比较方式：equal，between，like 等
            </summary>
            <param name="name">查询字段名称</param> 
            <returns>查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryValue(System.String)">
            <summary>
            获取页面查询字段的查询参数值
            </summary>
            <param name="name">查询字段名称</param> 
            <returns>查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryAffixValue(System.String)">
            <summary>
            获取页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="name">查询字段名称</param>
            <returns>带有附加后缀的查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryValues(System.String)">
            <summary>
            获取页面查询字段的查询参数值
            </summary>
            <param name="name">查询字段名称</param>
            <returns>查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryAffixValues(System.String)">
            <summary>
            获取页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="name">查询字段名称</param>
            <returns>带有附加后缀的查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryValue``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取页面查询字段的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param> 
            <returns>查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryAffixValue``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param>
            <returns>带有附加后缀的查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryValues``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取页面查询字段的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param>
            <returns>查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.GetQueryAffixValues``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param>
            <returns>带有附加后缀的查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.SetQueryValue(System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            设置页面查询字段的值
            </summary>
            <param name="queryCollection">页面查询参数集合</param>
            <param name="queryName">要设置的查询字段的参数名称</param>  
            <param name="queryValue">要设置的查询字段的参数值</param>  
        </member>
        <member name="M:KdCore.Data.KdDataRequest.SetCompareMode(System.String,System.String)">
            <summary>
            设置页面查询字段的查询参数的比较方式：equal，between，like 等
            </summary>
            <param name="name">查询字段名称</param>  
            <param name="mode">要设置的查询字段的参数值</param>  
        </member>
        <member name="M:KdCore.Data.KdDataRequest.SetQueryValue(System.String,System.String)">
            <summary>
            设置页面查询字段的查询参数值
            </summary>
            <param name="name">查询字段名称</param> 
            <param name="value">要设置的查询字段的参数值</param>  
        </member>
        <member name="M:KdCore.Data.KdDataRequest.SetQueryAffixValue(System.String,System.String)">
            <summary>
            设置页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="name">查询字段名称</param> 
            <param name="value">要设置的查询字段的附加参数值</param>  
        </member>
        <member name="M:KdCore.Data.KdDataRequest.SetQueryValues(System.String,System.String[])">
            <summary>
            设置页面查询字段的查询参数值
            </summary>
            <param name="name">查询字段名称</param> 
            <param name="values">要设置的查询字段的参数值</param>  
        </member>
        <member name="M:KdCore.Data.KdDataRequest.SetQueryAffixValues(System.String,System.String[])">
            <summary>
            设置页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="name">查询字段名称</param> 
            <param name="values">要设置的查询字段的附加参数值</param>  
        </member>
        <member name="M:KdCore.Data.KdDataRequest.InitQuerys(System.Collections.Specialized.NameValueCollection)">
            <summary>
            初始化查询参数
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.SetDefaultSort(System.String)">
            <summary>
            设置查询的默认排序字段设置
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.ToQueryNameValues(System.Boolean)">
            <summary>
            转换当前查询请求的参数为键值集合
            </summary>
            <param name="includeNullOrEmptyValue"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.ParseQueryFields(System.Type)">
            <summary>
            解析查询参数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.FilterQueryable``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            根据当前的数据请求的筛选条件，对数据进行筛选
            </summary>
            <param name="queryable"></param>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.Respond``1(System.Linq.IQueryable{``0},System.String,System.Nullable{System.Boolean})">
            <summary>
            根据分页查询参数进行查询
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataRequest.Respond``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Nullable{System.Boolean})">
            <summary>
            根据分页查询参数进行查询
            </summary>
        </member>
        <member name="T:KdCore.Data.KdDataRequest`1">
            <summary>
            泛型数据查询参数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest`1.QueryType">
            <summary>
            获取或设置当前查询的数据类型
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataRequest`1.FuzzyWord">
            <summary>
            获取或设置模糊查询使用的查询表达式
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataRequest`1.GetQueryName(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            根据实体属性表达式获取参数名称
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest`1.GetQueryAffixName(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            根据实体属性表达式获取带有附加后缀的参数名称
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest`1.GetQueryValue(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取页面查询字段的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param> 
            <returns>查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest`1.GetQueryAffixValue(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param>
            <returns>带有附加后缀的查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest`1.GetQueryValues(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取页面查询字段的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param>
            <returns>查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest`1.GetQueryAffixValues(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            获取页面查询字段带有附加后缀的查询参数值
            </summary>
            <param name="expression">查询字段表达式</param>
            <returns>带有附加后缀的查询字段的参数值</returns>
        </member>
        <member name="M:KdCore.Data.KdDataRequest`1.FilterQueryable``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}[])">
            <summary>
            根据当前的数据请求的筛选条件，对数据进行筛选
            </summary>
            <param name="queryable"></param>
            <param name="predicates"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdDataResponse`1">
            <summary>
            数据查询响应参数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.PageCount">
            <summary>
            获取分页的总页数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.PageStart">
            <summary>
            获取页码开始数字, 从0开始
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.PageEnd">
            <summary>
            获取显示的页码结束数字, 从0开始
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.DataCount">
            <summary>
            获取查询结果记录总条目数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.ItemCount">
            <summary>
            获取当前查询结果需要显示的数据
            一般情况下与设置的页面显示条数相同，当尾页时可能不是满页，则小于页面显示条数
            如果返回结果小于0，则表示尚未给当前页面显示数据赋值
            </summary>
        </member>
        <member name="F:KdCore.Data.KdDataResponse`1._items">
            <summary>
            当前查询结果需要显示的数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.Items">
            <summary>
            获取或设置当前查询结果需要显示的数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.DataSource">
            <summary>
            获取或设置当前查询结果使用的查询数据源
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.HasError">
            <summary>
            获取或设置在数据处理过程中是否存在错误
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.Exception">
            <summary>
            获取或设置在数据处理过程中产生错误异常
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.BtnPageUseHref">
            <summary>
            获取或设置是否使用 href 方式进行翻页，当启用了 ajax 时设置该属性无效
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.Title">
            <summary>
            获取或设置此操作的名称或标题
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.Message">
            <summary>
            获取或设置操作返回的相关信息说明
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.Context">
            <summary>
            获取或设置操作源数据上下文
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.FlagBool1">
            <summary>
            获取或设置返回结果附加数据：布尔值 1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.FlagBool2">
            <summary>
            获取或设置返回结果附加数据：布尔值 1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.FlagInt1">
            <summary>
            获取或设置返回结果附加数据：整数值 1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.FlagInt2">
            <summary>
            获取或设置返回结果附加数据：整数值 1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.FlagNum1">
            <summary>
            获取或设置返回结果附加数据：浮点值 1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.FlagNum2">
            <summary>
            获取或设置返回结果附加数据：浮点值 1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.MsgExtra">
            <summary>
            获取或设置返回结果附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.MsgExtra1">
            <summary>
            获取或设置返回结果附加数据1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.MsgExtra2">
            <summary>
            获取或设置返回结果附加数据2
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.DataExtra">
            <summary>
            获取或设置返回结果附加数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.DataExtra1">
            <summary>
            获取或设置返回结果附加数据1
            </summary>
        </member>
        <member name="P:KdCore.Data.KdDataResponse`1.DataExtra2">
            <summary>
            获取或设置返回结果附加数据2
            </summary>
        </member>
        <member name="M:KdCore.Data.KdDataResponse`1.SetDataCount(System.Int32)">
            <summary>
            设置符合条件数据的总条数，并计算分页相关的各个数字
            </summary>
            <param name="dataCount">符合条件数据的总条数</param>
        </member>
        <member name="M:KdCore.Data.KdDataResponse`1.SetItems(System.Collections.Generic.IEnumerable{`0},System.Int32)">
            <summary>
            设置当前页的数据，并计算当前页显示数据索引
            </summary>
            <param name="items">当前页的数据</param>
            <param name="dataCount">符合查询条件的数据总记录数</param>
        </member>
        <member name="M:KdCore.Data.KdDataResponse`1.SortQueryable(System.Linq.IQueryable{`0})">
            <summary>
            根据当前的数据请求的排序条件，对数据进行排序
            </summary>
            <param name="queryable"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResponse`1.LogQueryable(System.Linq.IQueryable,System.String,System.Exception)">
            <summary>
            输出指定查询到日志文件
            </summary>
            <param name="queryable"></param>
            <param name="logPrefix"></param>
            <param name="ex"></param>
        </member>
        <member name="M:KdCore.Data.KdDataResponse`1.FetchData(System.Linq.IQueryable{`0})">
            <summary>
            设置当前页面的查询结果
            </summary>
            <param name="queryable"></param>
        </member>
        <member name="M:KdCore.Data.KdDataResponse`1.FetchDataImpl(System.Linq.IQueryable{`0})">
            <summary>
            设置当前页面的查询结果的内部处理方法，独立一个方法便于死锁时重新执行
            </summary>
            <param name="queryable"></param>
        </member>
        <member name="M:KdCore.Data.KdDataResponse`1.QueryToCount(System.Linq.IQueryable{`0})">
            <summary>
            执行计数查询，独立一个方法便于添加错误日志
            </summary>
            <param name="queryable"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResponse`1.QueryToList(System.Linq.IQueryable{`0})">
            <summary>
            执行数据查询，独立一个方法便于添加错误日志
            </summary>
            <param name="queryable"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdDataResponse`1.GetEnumerator">
            <summary>
            获取当前页面数据集合的枚举数。
            </summary>
            <returns>一个可用于循环访问当前页面数据集合的 System.Collections.IEnumerator 对象。</returns>
        </member>
        <member name="M:KdCore.Data.KdDataResponse`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator">
            <summary>
            获取当前页面数据集合的枚举数。
            </summary>
            <returns>一个可用于循环访问当前页面数据集合的 System.Collections.IEnumerator 对象。</returns>
        </member>
        <member name="M:KdCore.Data.KdDataResponse`1.Dispose(System.Boolean)">
            <summary>
            释放资源
            </summary>
            <param name="flag"></param>
        </member>
        <member name="T:KdCore.Data.KdTreeManager`2">
            <summary>
            树形结构管理工具类
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.TreeType">
            <summary>
            获取或设置树结构类型识别编码
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.FileEncoding">
            <summary>
            获取或设置数据文件的编码格式
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.FileNamePrefix">
            <summary>
            获取或设置数据文件的文件名前缀
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.FileExtName">
            <summary>
            获取或设置数据文件的文件扩展名
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.JsonSaveFolder">
            <summary>
            获取或设置树实例节点集合的数据保存目录路径
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.SavePathCatalog">
            <summary>
            获取或设置树目录的保存文件路径
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.SavePathGroups">
            <summary>
            获取或设置树分组设置的保存文件路径
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.SkipCodesInCatalog">
            <summary>
            获取或设置树目录的保存文件中忽略的树识别编码
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.DefaultGroupCode">
            <summary>
            获取或设置树目录的默认分组编码
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.DefaultTreeCode">
            <summary>
            获取或设置在未指定树结构标识编码时，使用的默认树结构标识编码
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.#ctor(System.Int32)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.#ctor(System.String,System.Int32)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.Dispose">
            <summary>
            释放占用资源
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.Dispose(System.Boolean)">
            <summary>
            释放占用资源，并移除事件订阅
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetSavePath(System.String,System.String,System.String)">
            <summary>
            获取当前设置下树结构相关文件的保存路径
            </summary>
            <param name="fileName"></param>
            <param name="extName"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.UseGroups">
            <summary>
            获取或设置树结构是否使用分组
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.ExpiredMinutes">
            <summary>
            数据缓存有效时间，超过时间后自动重置
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.AllTrees">
            <summary>
            树结构缓存存储字典
            </summary>
        </member>
        <member name="P:KdCore.Data.KdTreeManager`2.TreeGroups">
            <summary>
            获取或设置树结构分组设置
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.EqualsIgnoreCase(System.String,System.String)">
            <summary>
            当前类型中使用的字符串是否相等判断，忽略大小写；
            注意涉及数据库的查询时不要使用该方法
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.IsDefaultGroup(System.String)">
            <summary>
            判断是否默认分组编码
            </summary>
            <param name="groupCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.InitTreeCatalog">
            <summary>
            初始化树结构目录，默认处理为加载 Json 文件
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.LoadJsonFile``1(System.String)">
            <summary>
            加载 Json 文件
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.InitTreeGroupCatalog(System.Boolean)">
            <summary>
            初始化数据字典目录，默认处理为加载数据文件夹内的所有 Json 文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.SaveTreeCatalog">
            <summary>
            保存当前的树结构目录，默认处理为序列化 Json 字符串并存储为文件
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.ResetCacheTrees">
            <summary>
            重置缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.ResetCacheTrees(System.String)">
            <summary>
            重置缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetTree(System.String)">
            <summary>
            获取指定识别编码的树结构
            </summary>
            <param name="treeCode">树结构识别编码</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetTreeById(System.String)">
            <summary>
            获取指定主键 ID 的树结构
            </summary>
            <param name="treeId">树结构主键 ID</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetTreeGroups">
            <summary>
            获取树结构分组设置的复制集合，便于直接使用，不用担心因修改造成的数据影响
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetAllTrees(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            获取全部符合筛选条件的树结构的集合
            </summary>
            <param name="predicate">筛选条件</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetAllUnlockedTrees">
            <summary>
            获取可编辑节点的全部树结构
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetGroupTrees(System.String,System.Nullable{System.Boolean})">
            <summary>
            获取指定分组的树结构的集合
            </summary>
            <param name="groupCode">指定分组编码标识</param> 
            <param name="unlockedTree"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.AddTree(`0)">
            <summary>
            添加树结构缓存
            </summary>
            <param name="tree">要添加的树结构</param>  
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.AddTrees(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            添加树结构缓存
            </summary>
            <param name="trees">要添加的树结构</param>  
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.RemoveTree(System.String)">
            <summary>
            移除树结构缓存
            </summary>
            <param name="treeCode">要移除的树结构识别编码</param>  
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.RemoveTrees(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            添加树结构缓存
            </summary>
            <param name="treeCodes">要移除的树结构识别编码</param>  
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.ClearAllTrees">
            <summary>
            移除所有缓存的树结构，！慎用！移除后不会再自动重新初始化缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetAllTreeNodes(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            查询树节点
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetNodeById(System.String)">
            <summary>
            查询树节点
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetNodesByParent(System.String,System.Boolean)">
            <summary>
            查询树节点
            </summary>
            <param name="parentId"></param>
            <param name="withParent"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetNodesByParentCodePath(System.String,System.String,System.Boolean)">
            <summary>
            查询树节点
            </summary>
            <param name="parentCodePath"></param>
            <param name="treeCode"></param>
            <param name="withParent"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetNode(System.String,System.String,System.Boolean)">
            <summary>
            获取指定的树节点
            </summary>
            <param name="treeCode">树结构识别编码</param>
            <param name="codePath">树节点的识别编码路径</param> 
            <param name="onlyValid">仅查询有效数据</param> 
            <returns>树节点</returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetNodeName(System.String,System.String,System.Boolean)">
            <summary>
            获取指定树节点的名称（显示文本）
            </summary>
            <param name="treeCode">树结构识别编码</param>
            <param name="codePath">树节点的值</param>
            <param name="onlyValid">仅查询有效数据</param>  
            <returns>树节点的名称（显示文本）</returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetNodes(System.String,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            获取指定标识编码的树节点集合
            </summary>
            <param name="treeCode">数据字典标识编码</param>
            <param name="allLevels">是否包含所有层级的节点，默认为false，即只返回当前一级的数据项</param>
            <param name="tagDisabled">是否已禁用，参数值为null时查询所有</param>
            <returns>KTreeNode集合</returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetNodes(System.String,System.Boolean,System.String,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            获取指定识别标识的可选项集合
            </summary>
            <param name="treeCode"></param>
            <param name="allLevels"></param>
            <param name="parent"></param>
            <param name="useParentId"></param>
            <param name="tagDisabled"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetNodes(System.String,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            获取当前树结构中所有符合条件的树节点
            </summary>
            <param name="treeCode"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.GetNodes(System.String,System.Nullable{System.Boolean},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            获取当前树结构中所有符合条件的树节点
            </summary>
            <param name="treeCode"></param>
            <param name="tagDisabled"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.FirstNode(System.String,System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            获取当前树结构中第一个符合条件的树节点
            </summary>
            <param name="treeCode"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.FirstNode(System.String,System.Nullable{System.Boolean},System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            获取当前树结构中第一个符合条件的树节点
            </summary>
            <param name="treeCode"></param>
            <param name="tagDisabled"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.ToJsonById(System.String,System.String)">
            <summary>
            获取页面选择使用的 JSON 格式数据
            </summary>
            <param name="treeCode"></param>
            <param name="parentId"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.ToJsonByCodePath(System.String,System.String)">
            <summary>
            获取页面选择使用的 JSON 格式数据
            </summary>
            <param name="treeCode"></param>
            <param name="parentCodePath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.FirstNode(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            获取当前树结构中第一个符合条件的树节点
            </summary>
            <param name="treeCode"></param>
            <param name="tagDisabled"></param>
            <param name="nodeCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.FirstNode(System.String,System.String)">
            <summary>
            获取当前树结构中第一个符合条件的树节点
            </summary>
            <param name="treeCode"></param>
            <param name="nodeCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.FirstNode``1(System.String,``0)">
            <summary>
            获取当前树结构中第一个符合条件的树节点
            </summary>
            <param name="treeCode"></param>
            <param name="nodeCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.FirstNodePath(System.String,System.Nullable{System.Boolean},System.String)">
            <summary>
            获取当前树结构中第一个符合条件的树节点
            </summary>
            <param name="treeCode"></param>
            <param name="tagDisabled"></param>
            <param name="nodeCodePath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdTreeManager`2.FirstNodePath(System.String,System.String)">
            <summary>
            获取当前树结构中第一个符合条件的树节点
            </summary>
            <param name="treeCode"></param>
            <param name="nodeCodePath"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdUtilData">
            <summary>
            数据处理常用方法
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilData.ToListSorted``1(System.Collections.Generic.IEnumerable{``0},KdCore.Data.KdDataRequest)">
            <summary>
            将数据源中的数据按 SortNum 排序后输出为List集合
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="enumerable"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilData.Where``1(System.Linq.IQueryable{``0},KdCore.Data.KdDataRequest{``0})">
            <summary>
            扩展多条件组合查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="dataRequest"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilData.Where``1(System.Linq.IQueryable{``0},KdCore.Data.KdDataReport{``0})">
            <summary>
            扩展多条件组合查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable"></param>
            <param name="dataReport"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilData.ToResponse``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            转换成 <see cref="T:KdCore.Data.KdDataResponse`1"/> 类型
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilData.ToResponse``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            转换成 <see cref="T:KdCore.Data.KdDataResponse`1"/> 类型
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilData.ClearNullOrEmpty(System.Web.Routing.RouteValueDictionary,System.Boolean,System.Boolean)">
            <summary>
            清理空白参数。
            注：不清理 area 参数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilData.ClearPageParams(System.Web.Routing.RouteValueDictionary,KdCore.Data.KdDataRequest,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            清理分页参数
            </summary>
        </member>
        <member name="T:KdCore.Data.ViewModels.KdUserGroupCategory">
            <summary>
            用户分组的分类视图数据
            </summary>
        </member>
        <member name="T:KdCore.Data.ViewModels.KdUserPickView">
            <summary>
            用户选择视图数据
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserPickView.AllUserItems">
            <summary>
            可选用户集合
            </summary>
        </member>
        <member name="T:KdCore.Data.ViewModels.KdUserGroupView">
            <summary>
            用户分组视图数据
            </summary>
        </member>
        <member name="T:KdCore.Data.ViewModels.KdUserPlanMonth">
            <summary>
            日程安排月份视图
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserPlanMonth.UserPlans">
            <summary>
            月份视图中包含的日程安排事项
            </summary>
        </member>
        <member name="M:KdCore.Data.ViewModels.KdUserPlanMonth.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.ViewModels.KdUserPlanMonth.#ctor(System.Int32,System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="monthIndex">月份唯一索引</param>
            <param name="firstDayOfWeek">星期的第一天是星期几</param>
            <param name="weekRule">一年的第一周计算规则</param>
        </member>
        <member name="M:KdCore.Data.ViewModels.KdUserPlanMonth.HasDayPlans(System.DateTime)">
            <summary>
            查看指定日期是否存在日程安排事项
            </summary>
            <param name="day">当前月份中的日期</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.ViewModels.KdUserPlanMonth.DayPlansCount(System.DateTime)">
            <summary>
            获取指定日期日程安排事项的数量
            </summary>
            <param name="day">当前月份中的日期</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.ViewModels.KdUserPlanMonth.DayPlans(System.DateTime)">
            <summary>
            获取指定日期日程安排事项
            </summary>
            <param name="day">当前月份中的日期</param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.ViewModels.KdUserPlanWeek">
            <summary>
            日程安排星期视图
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserPlanWeek.UserPlans">
            <summary>
            星期视图中包含的日程安排事项
            </summary>
        </member>
        <member name="M:KdCore.Data.ViewModels.KdUserPlanWeek.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.ViewModels.KdUserPlanWeek.#ctor(System.Int32,System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="weekIndex">星期唯一索引</param> 
            <param name="firstDayOfWeek">星期的第一天是星期几</param>
            <param name="weekRule">一年的第一周计算规则</param>
        </member>
        <member name="M:KdCore.Data.ViewModels.KdUserPlanWeek.HasDayPlans(System.DateTime)">
            <summary>
            查看指定日期是否存在日程安排事项
            </summary>
            <param name="day">当前星期中的日期</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.ViewModels.KdUserPlanWeek.DayPlansCount(System.DateTime)">
            <summary>
            获取指定日期日程安排事项的数量
            </summary>
            <param name="day">当前星期中的日期</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.ViewModels.KdUserPlanWeek.DayPlans(System.DateTime,System.TimeSpan,System.Nullable{System.TimeSpan})">
            <summary>
            获取指定时间范围内的日程安排事项
            </summary>
            <param name="day">当前星期中的日期</param>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.ViewModels.KdUserLogin">
            <summary>
            用户登录视图模型
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.UserName">
            <summary>
            获取或设置用户登录账号
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.UserPwd">
            <summary>
            获取或设置用户登录密码（MD5加密）
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.ImageCode">
            <summary>
            获取或设置用户输入的图片验证码
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.VerifyCode">
            <summary>
            获取或设置系统保存的图片验证码
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.PwdIsClearText">
            <summary>
            获取或设置当前的密码是否明文密码
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.PwdType">
            <summary>
            获取或设置当前的密码强度标识，一般等于 0 时基本安全，大于 0 时密码较安全，小于 0 时不够安全，需要修改密码
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.SessionID">
            <summary>
            获取或设置当前的SessionID
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.LoginType">
            <summary>
            获取或设置当前的登录类型
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.LoginTime">
            <summary>
            获取或设置当前的登录时间
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.UserType">
            <summary>
            登录用户类型
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.UserSign">
            <summary>
            其他方式登录的用户标识
            </summary>
        </member>
        <member name="P:KdCore.Data.ViewModels.KdUserLogin.Message">
            <summary>
            获取或设置用户登录操作提示，密码错误等
            </summary>
        </member>
        <member name="T:KdCore.Data.KdUtilEntity">
            <summary>
            数据实体类型处理常用方法处理
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.CloneTree``2(``0,System.Linq.Expressions.Expression{System.Func{``1,System.Boolean}})">
            <summary>
            克隆一个树结构，避免使用中被不小心修改，影响原始数据
            </summary>
            <param name="source"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.SetAuthMode``1(``0,System.Boolean,System.Nullable{System.Boolean})">
            <summary>
            设置数据的当前操作授权验证结果
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="authWork">是否允许进行操作</param>
            <param name="authView">是否允许进行查看，如果允许操作的话，该设置将被强制设置为 true</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.BuildDefaultPassword(KdCore.Data.Users.IKdUser)">
            <summary>
            创建默认用户密码，默认返回用户登录名
            可通过 <see cref="P:KdCore.Data.Users.KdUser.Func_BuildDefaultPassword"/> 指定生成默认的密码的方法
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.GetUserDeptTitle(KdCore.Data.Users.IKdUser)">
            <summary>
            获取用户的附加了部门标识的名称
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.GetLogTitle(KdCore.Data.Users.IKdUser)">
            <summary>
            获取输出日志记录时的显示名称
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.GetLogTitle(System.Security.Principal.IPrincipal)">
            <summary>
            获取输出日志记录时的显示名称
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.SetResult``1(KdCore.Data.KdDataResult,``0,System.Nullable{System.Boolean},System.String,System.String[])">
            <summary>
            设置数据的操作结果情况
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="result"></param>
            <param name="entity"></param>
            <param name="success"></param>
            <param name="message"></param>
            <param name="msgParams"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.IsEmpty``1(KdCore.Data.Entity.KdEntityTree{``0},System.String)">
            <summary>
            判断树结构实例是否为空或没有树节点
            </summary>
            <param name="tree">需要判断的树结构实例</param>
            <param name="paramName">验证对象的参数名称，传值不为null时，如果判断对象不为空将抛出异常</param>
            <returns>boolean值结果</returns>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.GetOwnerCorp(KdCore.Data.Entity.IKdEntityOwnerCorp)">
            <summary>
            获取当前数据的归属单位
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.SetOwnerCorp(KdCore.Data.Entity.IKdEntityOwnerCorp,System.String)">
            <summary>
            设置归属企业
            </summary>
            <param name="entity"></param>
            <param name="corpCode">参数为 null 时使用当前数据的属性值对归属企业名称进行补全修正</param>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.GetOwnerDept(KdCore.Data.Entity.IKdEntityOwnerDept)">
            <summary>
            获取当前数据的归属部门
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.SetOwnerDept(KdCore.Data.Entity.IKdEntityOwnerDept,System.String)">
            <summary>
            设置归属企业
            </summary>
            <param name="entity"></param>
            <param name="deptId">参数为 null 时使用当前数据的属性值对归属企业名称进行补全修正</param>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.SetOwnerCorpDept(KdCore.Data.Entity.IKdEntityOwner,System.String,System.String)">
            <summary>
            设置归属单位和部门
            </summary>
            <param name="entity"></param>
            <param name="corpCode"></param>
            <param name="deptId"></param>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.SetOwner(KdCore.Data.Entity.IKdEntityOwner,KdCore.Data.Users.IKdUser)">
            <summary>
            设置归属用户、部门、单位
            </summary>
            <param name="entity"></param>
            <param name="user"></param> 
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.SetOwnerUser(KdCore.Data.Entity.IKdEntityOwnerUser,KdCore.Data.Users.IKdUser)">
            <summary>
            设置归属用户
            </summary>
            <param name="entity"></param>
            <param name="user"></param> 
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.SetOwnerDept(KdCore.Data.Entity.IKdEntityOwnerDept,KdCore.Data.Users.KdUserDept)">
            <summary>
            设置归属单位、部门、用户
            </summary>
            <param name="entity"></param>
            <param name="dept"></param> 
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.SetOwnerCorp(KdCore.Data.Entity.IKdEntityOwnerCorp,KdCore.Data.Users.KdUserCorp)">
            <summary>
            设置归属单位、部门、用户
            </summary>
            <param name="entity"></param>
            <param name="corp"></param> 
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.CopyCreatorFrom(KdCore.Data.IKdEntityCreate,KdCore.Data.IKdEntityCreate,System.Boolean)">
            <summary>
            从源对象复制创建用户数据到目标对象
            </summary>
            <param name="target"></param>
            <param name="source"></param>
            <param name="replaceExists"></param>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.CopyModifierFrom(KdCore.Data.IKdEntityModify,KdCore.Data.IKdEntityModify,System.Boolean)">
            <summary>
            从源对象复制最后修改用户数据到目标对象
            </summary>
            <param name="target"></param>
            <param name="source"></param>
            <param name="replaceCreator"></param>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.CopyCreatorFrom(KdCore.Data.IKdEntityCreateBase,KdCore.Data.IKdEntityCreateBase,System.Boolean)">
            <summary>
            从源对象复制创建用户数据到目标对象
            </summary>
            <param name="target"></param>
            <param name="source"></param>
            <param name="replaceExists"></param>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.CopyModifierFrom(KdCore.Data.IKdEntityModifyBase,KdCore.Data.IKdEntityModifyBase,System.Boolean)">
            <summary>
            从源对象复制最后修改用户数据到目标对象
            </summary>
            <param name="target"></param>
            <param name="source"></param>
            <param name="replaceCreator"></param>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.FixRequiredOperator(KdCore.Data.Users.IKdUser,System.Object)">
            <summary>
            修复缺失的创建人创建时间修改人修改时间等属性
            </summary>
            <param name="user"></param>
            <param name="obj"></param>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.SetReceiveUser(KdCore.Data.Entity.IKdEntityReceiver,KdCore.Data.Users.IKdUser,System.Boolean)">
            <summary>
            设置事项待办人 
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilEntity.SetHandleUser(KdCore.Data.Entity.IKdEntityHandler,KdCore.Data.Users.IKdUser,System.Boolean)">
            <summary>
            设置事项待办人 
            </summary>
        </member>
        <member name="T:KdCore.Data.Annexs.KdAnnexRequest">
            <summary>
            用户文件查询参数
            </summary>
        </member>
        <member name="M:KdCore.Data.Annexs.KdAnnexRequest.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.Annexs.KdAnnexRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="sourceId"></param>
            <param name="annexType"></param>
            <param name="fileCode"></param>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexRequest.SourceIdNotNull">
            <summary>
            获取或设置附件查询时是否允许SourceId为空值
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexRequest.IsEqual">
            <summary>
            参数比较方式是否为相等（equal）的查询：
            值为null时，程序自动根据字段含义进行相等（equal）或相似（like）的查询比较；
            值为true时，所有参数属性进行相等（equal）的查询比较；
            值为false时，所有参数属性进行相似（like）的查询比较；
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexRequest.DownloadMinCount">
            <summary>
            下载计数，最小值
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexRequest.DownloadMaxCount">
            <summary>
            下载计数，最大值
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexRequest.MinLength">
            <summary>
            文件大小，最小值
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexRequest.MaxLength">
            <summary>
            文件大小，最大值
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexRequest.CreateMinTime">
            <summary>
            获取或设置数据记录创建时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexRequest.CreateMaxTime">
            <summary>
            获取或设置数据记录创建时间
            </summary>
        </member>
        <member name="M:KdCore.Data.Annexs.KdAnnexRequest.QueryFilter``1(System.Linq.IQueryable{``0})">
            <summary>
            根据参数对附件进行查询
            </summary>
            <param name="query">查询参数</param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Annexs.KdAnnexContext">
            <summary>
            文件上传设定参数
            </summary>
        </member>
        <member name="M:KdCore.Data.Annexs.KdAnnexContext.#cctor">
            <summary>
            初始化默认设置
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.DeletePhysicalFiles">
            <summary>
            获取或设置整个系统中删除文件时是否删除对应的物理文件
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.DisksDefaultIsPublic">
            <summary>
            获取或设置文件共享中心中添加的文件夹或上传的文件是否默认公开
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UseThumbsInline">
            <summary>
            获取或设置整个系统中显示附件文件时是否在每条附件显示行中显示缩略图
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UseThumbsSummary">
            <summary>
            获取或设置整个系统中显示附件文件时是否集中显示缩略图
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.FileCodeAnnex">
            <summary>
            文件类型编码：附件
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.FileCodeDisks">
            <summary>
            文件类型编码：网盘
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.NonLoginAllowUpload">
            <summary>
            允许不登录直接上传
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.NonLoginAllowDownload">
            <summary>
            允许不登录直接下载
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.NonLoginAllowThumbnail">
            <summary>
            允许不登录查看预览
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.CompareFileOtherUseLikeMode">
            <summary>
            获取或设置系统程序使用FileQueryParam进行附件查询时，Other1-8的属性自动查询时是否按照相似（like）的查询模式比较
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Thumbnail_Width">
            <summary>
            默认缩略图宽度
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Thumbnail_Height">
            <summary>
            默认缩略图高度
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Thumbnail_Quality">
            <summary>
            默认缩略图质量系数
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Thumbnail_FixedRatio">
            <summary>
            默认缩略图是否保持高宽比例
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Thumbnail_SizeIsMax">
            <summary>
            默认尺寸是否最大尺寸
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Thumbnail_MinImgWidth">
            <summary>
            图片文件生成缩略图的附件最小宽度,小于该尺寸的图片将不再生成缩略图
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Thumbnail_MinImgHeight">
            <summary>
            图片文件生成缩略图的附件最小高度,小于该尺寸的图片将不再生成缩略图
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Func_SupportThumbnails">
            <summary>
            获取或设置是否支持生成缩略图或预览文件的检查方法(传入的参数为文件的扩展名)
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Func_BuildThumbnails">
            <summary>
            获取或设置生成缩略图或预览文件的检查方法
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Default_AreaName">
            <summary>
            附件上传下载处理程序的 AreaName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Default_ControllerName">
            <summary>
            默认附件上传下载处理程序的 ControllerName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Default_ActionName_Upload">
            <summary>
            默认附件上传的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Default_ActionName_Download">
            <summary>
            默认附件下载的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Default_ActionName_Thumbnail">
            <summary>
            默认附件缩略图的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Default_ActionName_Preview">
            <summary>
            默认附件预览的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Default_ActionName_Delete">
            <summary>
            默认附件删除的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Default_ActionName_Watermark">
            <summary>
            默认附件添加水印的 ActionName
            </summary>
        </member>
        <member name="M:KdCore.Data.Annexs.KdAnnexContext.SupportThumbnails(System.String)">
            <summary>
            检查是否支持生成缩略图或预览文件
            </summary>
            <param name="extName">文件扩展名</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Annexs.KdAnnexContext.ImageThumbnail(System.String,System.String,System.String)">
            <summary> 
            图片压缩
            </summary>
            <param name="sourcePath">压缩前的图片保存位置</param> 
            <param name="targetPath">压缩后的图片保存位置</param>
            <param name="extName">文件的扩展名，可能文件保存时特意将扩展名删去则无法从文件保存的名字中获取</param>
            <returns>处理是否成功</returns> 
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.AreaName">
            <summary>
            附件上传下载处理程序的 AreaName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ControllerName">
            <summary>
            附件上传下载处理程序的 ControllerName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ActionNameUpload">
            <summary>
            附件上传的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ActionNameDownload">
            <summary>
            附件下载的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ActionNameThumbnail">
            <summary>
            附件缩略图的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ActionNamePreview">
            <summary>
            附件预览的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ActionNameDelete">
            <summary>
            附件删除的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ActionNameWatermark">
            <summary>
            附件添加水印的 ActionName
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UrlUpload">
            <summary>
            上传文件提交到的URL地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UrlDelete">
            <summary>
            删除文件提交到的URL地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UrlDownload">
            <summary>
            获取或设置下载文件时提交到的链接地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UrlPreview">
            <summary>
            获取或设置预览文件时提交到的链接地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UrlWatermark">
            <summary>
            获取或设置给文件添加水印时提交到的链接地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.FileCode">
            <summary>
            文件归属标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.AnnexType">
            <summary>
            附件分类
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.DocsType">
            <summary>
            文档分类
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.SourceId">
            <summary>
            所在目录或所关联对象的主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.GroupId">
            <summary>
            获取或设置所关联对象附加集合下的二次分组主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.GroupType">
            <summary>
            获取或设置所关联对象附加集合下的二次分组名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.GroupCode">
            <summary>
            获取或设置所关联对象附加集合下的二次分组编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ItemId">
            <summary>
            获取或设置所关联对象的关联子项的主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ItemType">
            <summary>
            获取或设置所关联对象的关联子项的附件分组分类
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ItemCode">
            <summary>
            获取或设置所关联对象的关联子项的归属标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Other1">
            <summary>
            获取或设置其他标识或备注 1
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Other2">
            <summary>
            获取或设置其他标识或备注 2
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Other3">
            <summary>
            获取或设置其他标识或备注 3
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Other4">
            <summary>
            获取或设置其他标识或备注 4
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Other5">
            <summary>
            获取或设置其他标识或备注 5
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Other6">
            <summary>
            获取或设置其他标识或备注 6
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Other7">
            <summary>
            获取或设置其他标识或备注 7
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Other8">
            <summary>
            获取或设置其他标识或备注 8
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ExtNames">
            <summary>
            允许上传的文件类型（以竖线间隔的文件扩展名，不带点号）
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.MinLength">
            <summary>
            最小可上传文件大小（字节数）
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.MaxLength">
            <summary>
            最大可上传文件大小（字节数）
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.MaxCount">
            <summary>
            最大允许上传文件个数
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UnitTitle">
            <summary>
            页面显示附件的名称标题
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UnitBtnText">
            <summary>
            页面显示附件的上传按钮文字
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UnitBtnTooltip">
            <summary>
            页面显示附件的上传按钮提示文本
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UI_Dialog_Upload_Selector">
            <summary>
            页面显示附件的上传按钮提示文本
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UI_Dialog_Upload_Id">
            <summary>
            页面显示附件的上传对话框的HTML ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UI_Files_Container_Id">
            <summary>
            页面上显示已上传文件的容器HTML ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UI_Files_Container_Selector">
            <summary>
            页面上显示已上传文件的容器选择器
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UI_Template_ViewName">
            <summary>
            页面上需要加载的上传操作所在的分部视图名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UI_Template_Upload_Id">
            <summary>
            页面上已经加载的已选择待上传文件显示模板ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UI_Template_Download_Id">
            <summary>
            页面上已经加载的当次已上传文件显示模板ID
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UI_Files_Show_Uploader_Name">
            <summary>
            页面上是否显示上传人姓名
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ModalTitle">
            <summary>
            上传对话框的说明性标题
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.AutoUpload">
            <summary>
            选择文件后自动开始上传文件
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ModalBtnSelect">
            <summary>
            上传对话框的选择文件按钮文本
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ModalBtnUpload">
            <summary>
            上传对话框的选择文件按钮文本
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ModalBtnCancel">
            <summary>
            上传对话框的选择文件按钮文本
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ModalBtnClose">
            <summary>
            上传对话框的选择文件按钮文本
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.Source">
            <summary>
            获取或设置附件/文件关联的源对象
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.FilesInited">
            <summary>
            获取或设置是否已对相关附件初始化完成
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.UrlInited">
            <summary>
            获取或设置是否已对上传下载等操作的URL初始化完成
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.AllowedUpload">
            <summary>
            获取或设置是否允许上传
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.AllowedDownload">
            <summary>
            获取或设置是否允许下载
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.AllowedDelete">
            <summary>
            获取或设置是否允许上传
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.AllowedWatermark">
            <summary>
            获取或设置给文件添加水印时提交到的链接地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.AllowedPreview">
            <summary>
            获取或设置是否允许预览查看
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.AllowedThumbnail">
            <summary>
            获取或设置是否允许显示缩略图
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ShowThumbsSummary">
            <summary>
            获取或设置是否集中显示缩略图
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.ShowThumbsInline">
            <summary>
            获取或设置是否在每一行中显示缩略图
            </summary>
        </member>
        <member name="F:KdCore.Data.Annexs.KdAnnexContext._annexFiles">
            <summary>
            存储对象关联的附件集合
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdAnnexContext.AnnexFiles">
            <summary>
            获取对象关联的附件集合
            </summary>
        </member>
        <member name="M:KdCore.Data.Annexs.KdAnnexContext.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:KdCore.Data.Annexs.KdAnnexContext.GetSizeLimitedDesc">
            <summary>
            获取文件大小限制说明文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Annexs.KdAnnexContext.SetFileAttrs(KdCore.Data.Annexs.KdFileBase,System.String,System.Int32)">
            <summary>
            设置上传文件记录有关属性
            </summary>
            <param name="file"></param>
            <param name="fileName"></param>
            <param name="fileLength"></param>
        </member>
        <member name="M:KdCore.Data.Annexs.KdAnnexContext.InitAnnexFiles(System.Collections.Generic.IEnumerable{KdCore.Data.Annexs.KdFileBase})">
            <summary>
            初始化对象关联附件集合
            </summary>
            <param name="files"></param>
        </member>
        <member name="M:KdCore.Data.Annexs.KdAnnexContext.BuildHtmlID(System.String,System.String)">
            <summary>
            生成页面 HTML 标签 ID
            </summary>
            <param name="sourceId"></param>
            <param name="annexType"></param>
        </member>
        <member name="T:KdCore.Data.Annexs.IKdEntityAnnex">
            <summary>
            带有附件的对象规范接口
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.IKdEntityAnnex.AnnexFiles">
            <summary>
            获取或设置相关附件记录数据
            </summary>
        </member>
        <member name="M:KdCore.Data.Annexs.IKdEntityAnnex.GetAnnexRequest(System.String)">
            <summary>
            获取文件查询参数
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Annexs.IKdEntityAnnex.GetAnnexContext(System.String)">
            <summary>
            获取文件上传上下文
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Annexs.KdFileBase">
            <summary>
            上传文件基类
            </summary>
        </member>
        <member name="M:KdCore.Data.Annexs.KdFileBase.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.Annexs.KdFileBase.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="sourceId"></param>
            <param name="annexType"></param>
            <param name="fileCode"></param>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.FileCode">
            <summary>
            获取或设置文件归属标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.AnnexType">
            <summary>
            获取或设置附件分组分类
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.SourceId">
            <summary>
            获取或设置所在目录或所关联对象的主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.GroupId">
            <summary>
            获取或设置所关联对象附加集合下的二次分组主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.GroupType">
            <summary>
            获取或设置所关联对象附加集合下的二次分组名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.GroupCode">
            <summary>
            获取或设置所关联对象附加集合下的二次分组编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.ItemId">
            <summary>
            获取或设置所关联对象的关联子项的主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.ItemType">
            <summary>
            获取或设置所关联对象的关联子项的附件分组分类
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.ItemCode">
            <summary>
            获取或设置所关联对象的关联子项的归属标识编码
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.IsFile">
            <summary>
            获取或设置是否文件；区分是文件还是目录
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.DocsName">
            <summary>
            获取或设置文档标题
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.DocsDesc">
            <summary>
            获取或设置文档说明
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.DocsType">
            <summary>
            获取或设置文档分类
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.FileType">
            <summary>
            获取或设置文件类型（通常是对文件扩展名的说明描述）
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.ExtName">
            <summary>
            获取或设置文档文件扩展名
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.FileName">
            <summary>
            获取或设置文档文件名称（上传时的物理文件名称）
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.FileLength">
            <summary>
            获取或设置文档文件完整的大小（字节数）
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.FileSize">
            <summary>
            获取或设置文档文件大小（易识别的文本：5.7MB，12.8KB等）
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.IsEntireFile">
            <summary>
            获取或设置是否完整的文件；区分文件是否上传完成，未完成的文件需要续传完毕才能使用
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.UploadLength">
            <summary>
            获取或设置文档文件已上传部分的大小（字节数）
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.SavePath">
            <summary>
            获取或设置文件保存路径（通常为Web相对路径）
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.IsPublic">
            <summary>
            获取或设置是否对其他用户公开
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.Watermark">
            <summary>
            获取或设置是否添加水印
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.WatermarkUserId">
            <summary>
            获取或设置添加水印的用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.WatermarkUserName">
            <summary>
            获取或设置添加水印的用户名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.WatermarkTime">
            <summary>
            获取或设置水印添加时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.DownloadCount">
            <summary>
            获取或设置下载计数
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.Other1">
            <summary>
            获取或设置缩略图或预览文件保存路径（通常为Web相对路径）
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.AllowedUpload">
            <summary>
            获取是否允许上传附件
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.AllowedDownload">
            <summary>
            获取或设置是否有下载权限
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.UrlDownload">
            <summary>
            获取或设置下载URL地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.UrlPreview">
            <summary>
            获取或设置预览URL地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.SupportThumbnail">
            <summary>
            获取或设置支持缩略图预览
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.UrlThumbnail">
            <summary>
            获取或设置预览URL地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Annexs.KdFileBase.IconName">
            <summary>
            显示文件图标名称
            </summary>
        </member>
        <member name="M:KdCore.Data.Annexs.KdFileBase.GetDataTitle">
            <summary>
            获取当前数据的标题名称，用于生成待办事项等关联数据时使用，或数据删除时提示显示等
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Annexs.KdFileBase.GetFileName">
            <summary>
            获取文件名称，用于页面显示或下载时默认保存文件名
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Annexs.KdFileBase.GetLastModifyTime">
            <summary>
            获取最后修改时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Annexs.KdFileBase.GetIconName">
            <summary>
            获取显示文件图标名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Annexs.KdFileBase.SupportWatermark">
            <summary>
            是否支持添加水印
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Annexs.KdFileBase.SupportThumbnails">
            <summary>
            检查是否支持生成缩略图或预览文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Annexs.KdFileBase.EnsureThumbnails(System.String)">
            <summary>
            生成缩略图或预览文件
            </summary>
            <param name="savePath">缩略图文件保存路径</param>
            <returns>是否成功生成，如果缩略文件已存在，则也会返回 false；只有本次生成并成功才返回 true</returns>
        </member>
        <member name="T:KdCore.Data.KdUtilAnnexFiles">
            <summary>
            附件上传扩展方法
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilAnnexFiles.Create``1(KdCore.Data.Annexs.IKdEntityAnnex,System.String)">
            <summary>
            生成默认文件上传设置
            </summary>
            <param name="source"></param>
            <param name="annexType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilAnnexFiles.CreateDefaultAnnexContext(KdCore.Data.Annexs.IKdEntityAnnex,System.String)">
            <summary>
            生成默认文件上传设置
            </summary>
            <param name="source"></param>
            <param name="annexType"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilAnnexFiles.CreateDefaultAnnexRequest(KdCore.Data.Annexs.IKdEntityAnnex,System.String)">
            <summary>
            生成默认附件查询请求设置
            </summary>
            <param name="source"></param>
            <param name="annexType"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdIpRange">
            <summary> 
             IP 地理位置记录（BaseIp） 
            </summary>
        </member>
        <member name="P:KdCore.Data.KdIpRange.StartRegion">
            <summary>
            地址段起始IP
            </summary>
        </member>
        <member name="P:KdCore.Data.KdIpRange.StartMark">
            <summary>
            地址段起始IP的数字形式值：x.y.z.m => x*256^3 + y*256^2 + z*256 + m
            </summary>
        </member>
        <member name="P:KdCore.Data.KdIpRange.EndRegion">
            <summary>
            地址段结束IP
            </summary>
        </member>
        <member name="P:KdCore.Data.KdIpRange.EndMark">
            <summary>
            地址段结束IP的数字形式值：x.y.z.m => x*256^3 + y*256^2 + z*256 + m
            </summary>
        </member>
        <member name="P:KdCore.Data.KdIpRange.IpAddress">
            <summary>
            IP的地理位置
            </summary>
        </member>
        <member name="T:KdCore.Data.KdUploadFile">
            <summary>
            上传文件相关参数封装
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.Name">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.Type">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.Status">
            <summary>
            文件状态，按 <see cref="T:System.Net.HttpStatusCode"/> 来设置
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.Size">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.SizeDesc">
            <summary>
            文件大小描述
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.SupportWatermark">
            <summary>
            是否支持添加水印
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.SupportThumbnail">
            <summary>
            是否支持缩略图预览
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.UrlDown">
            <summary>
            文件下载地址
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.UrlThumb">
            <summary>
            缩略图链接地址
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.DeleteType">
            <summary>
            删除类型
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.DeleteWithCredentials">
            <summary>
            删除凭据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUploadFile.MsgError">
            <summary>
            处理过程中的错误信息
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUploadFile.From(System.IO.FileInfo)">
            <summary>
            构造函数
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:KdCore.Data.KdUploadFile.From(KdCore.Data.Annexs.KdFileBase)">
            <summary>
            转换为上传文件类型，多用于上传结果信息返回
            </summary>
        </member>
        <member name="T:KdCore.Data.KdUtilJson">
            <summary>
            Json 常用处理方法封装
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUtilJson.Logger">
            <summary>
            日志记录对象
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilJson.GetSettings(System.Boolean,System.Boolean)">
            <summary>
            获取 Json 序列化默认设置
            </summary>
            <param name="format"></param>
            <param name="includeNullOrDefault"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilJson.FromJson``1(System.String)">
            <summary>
            JSON反序列化：使用 Newtonsoft.Json.JsonConvert 类进行反序列化
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilJson.FromJson``1(System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            JSON反序列化：使用 Newtonsoft.Json.JsonConvert 类进行反序列化
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilJson.FromJsonFile``1(System.String,System.Text.Encoding,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            JSON反序列化：使用 Newtonsoft.Json.JsonConvert 类进行反序列化
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilJson.FromJsonFile``1(System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            JSON反序列化：使用 Newtonsoft.Json.JsonConvert 类进行反序列化
            注意：JSON 文件必须是 UTF8 编码，否则请指定文件编码格式，使用<see cref="M:KdCore.Data.KdUtilJson.FromJsonFile``1(System.String,System.Text.Encoding,Newtonsoft.Json.JsonSerializerSettings)"/>
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilJson.FromJsonFile``1(System.String)">
            <summary>
            JSON反序列化：使用 Newtonsoft.Json.JsonConvert 类进行反序列化
            注意：JSON 文件必须是 UTF8 编码，否则请指定文件编码格式，使用<see cref="M:KdCore.Data.KdUtilJson.FromJsonFile``1(System.String,System.Text.Encoding,Newtonsoft.Json.JsonSerializerSettings)"/>
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilJson.ToJson``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            JSON序列化：使用 Newtonsoft.Json.JsonConvert 类进行序列化
            </summary>
            <typeparam name="T">序列化对象的类型</typeparam>
            <param name="t">要序列化的对象</param>
            <param name="settings"> Json 序列化设置 </param>
            <returns>序列化结果JSON字符串</returns>
        </member>
        <member name="M:KdCore.Data.KdUtilJson.ToJson``1(``0,System.Boolean,System.Boolean)">
            <summary>
            JSON序列化：使用 Newtonsoft.Json.JsonConvert 类进行序列化
            </summary>
            <typeparam name="T">序列化对象的类型</typeparam>
            <param name="t">要序列化的对象</param>
            <param name="includeNullOrDefault">是否包含为Null或属于默认值的值</param>
            <param name="format">是否对JSON字符串进行格式化</param>
            <returns>序列化结果JSON字符串</returns>
        </member>
        <member name="M:KdCore.Data.KdUtilJson.ToJsonCamelCase``1(``0,System.Boolean,System.Boolean)">
            <summary>
            JSON序列化：使用 Newtonsoft.Json.JsonConvert 类进行序列化
            </summary>
            <typeparam name="T">序列化对象的类型</typeparam>
            <param name="t">要序列化的对象</param>
            <param name="includeNullOrDefault">是否包含为Null或属于默认值的值</param>
            <param name="format">是否对JSON字符串进行格式化</param>
            <returns>序列化结果JSON字符串</returns>
        </member>
        <member name="M:KdCore.Data.KdUtilJson.ToJsonFile``1(``0,System.String,System.Boolean,System.Boolean)">
            <summary>
            序列化对象为JSON并保存为指定路径的文件
            注意：生成的 JSON 文件采用 UTF8 编码
            </summary>
            <typeparam name="T">序列化对象的类型</typeparam>
            <param name="t">要序列化的对象</param>
            <param name="jsonSavePath">保存路径，请指定为绝对路径的参数值</param>
            <param name="includeNullOrDefault">是否包含为Null或属于默认值的值</param>
            <param name="backupExists">是否备份现有文件</param>
            <returns>序列化结果JSON字符串</returns>
        </member>
        <member name="M:KdCore.Data.KdUtilJson.WriteToJsonFile``1(``0,System.String,Newtonsoft.Json.JsonSerializerSettings,System.Boolean)">
            <summary>
            序列化对象为JSON并保存为指定路径的文件
            注意：生成的 JSON 文件采用 UTF8 编码
            </summary>
            <typeparam name="T">序列化对象的类型</typeparam>
            <param name="t">要序列化的对象</param>
            <param name="jsonSavePath">保存路径，请指定为绝对路径的参数值</param>
            <param name="settings">序列化设置</param>
            <param name="backupExists">是否备份现有文件</param>
            <returns>序列化结果JSON字符串</returns>
        </member>
        <member name="T:KdCore.Data.Sms.IKdSmsTransceiver">
            <summary>
            短信收发的物理实现程序接口规范
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.IKdSmsTransceiver.ServiceUrl">
            <summary>
            短信接口的 URL 地址
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.IKdSmsTransceiver.UserName">
            <summary>
            短信接口验证用户名
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.IKdSmsTransceiver.Password">
            <summary>
            短信接口验证密码
            </summary>
        </member>
        <member name="M:KdCore.Data.Sms.IKdSmsTransceiver.ConnectTest">
            <summary>
            接口连接测试
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.Sms.IKdSmsTransceiver.SendSmsList(System.Collections.Generic.IEnumerable{KdCore.Data.Sms.KdSmsSend})">
            <summary>
            立即执行发送短信的真实处理，如果不能提供可直接返回结果集合为null
            </summary>
            <param name="smsSendWaitList">待发送的短信集合</param>
            <returns>已经更改了发送结果状态的短信数据集合</returns>
        </member>
        <member name="M:KdCore.Data.Sms.IKdSmsTransceiver.GetSmsSendStatus(System.Collections.Generic.IEnumerable{KdCore.Data.Sms.KdSmsSend})">
            <summary>
            查询短信的真实发送状态，如果不能提供可直接返回结果集合为null
            </summary>
            <param name="smsSendSubmitList">待发送的短信集合</param>
            <returns>已经更改了发送结果状态的短信数据集合</returns>
        </member>
        <member name="M:KdCore.Data.Sms.IKdSmsTransceiver.GetSmsReceive">
            <summary>
            获取接收到的短信集合，如果不能提供可直接返回结果集合为null
            </summary>
            <returns>接收到的短信集合</returns>
        </member>
        <member name="T:KdCore.Data.Sms.KdSmsSendBase">
            <summary>
            待发送短信数据记录
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsSendBase.PlanSendTime">
            <summary>
            计划发送时间
            </summary>
        </member>
        <member name="T:KdCore.Data.Sms.KdSmsBase">
            <summary>
            发送短信数据记录
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.Dispatch">
            <summary>
            短信发送类型，系统自动还是用户手动等
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.SmsLevel">
            <summary>
            短信关联事项等级
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.SmsType">
            <summary>
            短信内容类型
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.PrimaryId">
            <summary>
            短信数据最初关联数据源对象的主键，所关联事项的根节点对象的主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.SourceId">
            <summary>
            短信数据数据源对象的主键，如流程中被审批办理对象的主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.GroupId">
            <summary>
            发送短信关联分组数据对象的主键，如流程中发出该短信的待办审批记录的主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.ItemId">
            <summary>
            发送短信关联的数据对象的主键，如流程中对应该短信的待办审批记录的主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.TaskId">
            <summary>
            短信数据对应待办事项的主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.SmsUserId">
            <summary>
            短信接收人用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.SmsUserName">
            <summary>
            短信接收人名称
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.PhoneNum">
            <summary>
            发送接收人手机号码
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.BatchToken">
            <summary>
            短信批次标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.SmsId">
            <summary>
            与其他系统的短信识别唯一标识
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.SmsContent">
            <summary>
            发送短信内容
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.IsSended">
            <summary>
            是否发送成功
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.RealSendTime">
            <summary>
            实际发送时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsBase.NeedReport">
            <summary>
            是否需要送达报告
            </summary>
        </member>
        <member name="M:KdCore.Data.Sms.KdSmsBase.GetDataTitle">
            <summary>
            获取当前数据的标题名称，用于生成待办事项等关联数据时使用，或数据删除时提示显示等
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.Sms.KdSmsHistory">
            <summary>
            已发送短信数据记录
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsHistory.IsSubmit">
            <summary>
            是否已提交发送
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsHistory.IsFailed">
            <summary>
            是否发送失败
            </summary>
        </member>
        <member name="T:KdCore.Data.Sms.KdSmsReceive">
            <summary>
            接收短信数据记录
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsReceive.ReciveTime">
            <summary>
            接收短信的时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsReceive.IsDealed">
            <summary>
            是否已经处理短信相关内容事项
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsReceive.DealTime">
            <summary>
            处理时间
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsReceive.DealUserId">
            <summary>
            短信处理人用户主键
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsReceive.DealUserName">
            <summary>
            短信处理人姓名
            </summary>
        </member>
        <member name="T:KdCore.Data.Sms.KdSmsSend">
            <summary>
            待发送短信数据记录
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsSend.IsSubmit">
            <summary>
            是否已提交发送
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsSend.IsFailed">
            <summary>
            是否发送失败
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsSend.SmsSendUserIds">
            <summary>
            接收用户主键，仅用于发送短信时数据传输使用，不进行存储
            </summary>
        </member>
        <member name="P:KdCore.Data.Sms.KdSmsSend.SmsSendPhoneNums">
            <summary>
            其他接收手机号码，仅用于发送短信时数据传输使用，不进行存储
            </summary>
        </member>
        <member name="T:KdCore.Data.KdUtilUserTasks">
            <summary>
            用户待办事项常用工具
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.IsRunning(KdCore.Data.BbTaskStatus)">
            <summary>
            任务事项状态是否为正在办理
            </summary>
            <param name="taskStatus"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.NotRunning(KdCore.Data.BbTaskStatus)">
            <summary>
            任务事项状态是否为不在办理进行中
            </summary>
            <param name="taskStatus"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.IsFinished(KdCore.Data.BbTaskStatus)">
            <summary>
            任务事项状态是否为已办结
            </summary>
            <param name="taskStatus"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.IsValid(KdCore.Data.BbTaskStatus)">
            <summary>
            任务事项状态是否为有效数据
            </summary>
            <param name="taskStatus"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.IsErrored(KdCore.Data.BbTaskStatus)">
            <summary>
            任务事项状态是否为错误状态
            </summary>
            <param name="taskStatus"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.SetTaskSource(KdCore.Data.Tasks.IKdTaskOption,KdCore.Data.IKdEntityKeyId)">
            <summary>
            设置待办事项与数据源关联的设置值：<see cref="P:KdCore.Data.Tasks.IKdTaskOption.SourceId"/>、<see cref="P:KdCore.Data.Tasks.IKdTaskOption.SourceName"/>、<see cref="P:KdCore.Data.Tasks.IKdTaskOption.SourceType"/>
            如果参数 taskSource 为 null，将自动跳过
            </summary>
            <param name="taskOption">待办事项的选项设置</param>
            <param name="taskSource">待办事项关联的数据源</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.CreateUserTask(KdCore.Data.Tasks.IKdEntityTasks,KdCore.Data.Users.IKdUser,KdCore.Data.Tasks.IKdTaskOption,KdCore.Data.Users.IKdUser,KdCore.Data.BbTaskStatus)">
            <summary>
            为指定用户创建一条待办事项
            </summary>
            <param name="source">待办事项关联的数据源</param>
            <param name="receiver">待办事项的接收人/待办人</param>
            <param name="taskOption">待办事项的选项设置</param>
            <param name="creator">待办事项的数据记录的创建人</param>
            <param name="taskStatus">待办事项的初始化办理状态</param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.KdUtilUserTasks.TaskNoStart">
            <summary>
            用户待办事项是否在未启动状态的判断条件
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUtilUserTasks.TaskIsStarted">
            <summary>
            用户待办事项是否在已启动状态（应该出现在待办或已办中）的判断条件
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUtilUserTasks.TaskIsTodo">
            <summary>
            用户待办事项是否在待办状态的判断条件
            </summary>
        </member>
        <member name="P:KdCore.Data.KdUtilUserTasks.TaskIsOver">
            <summary>
            用户待办事项是否在办结状态的判断条件
            </summary>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.IsStarted(System.Linq.IQueryable{KdCore.Data.Tasks.KdUserTask})">
            <summary>
            查询已经启动的待办事项
            </summary>
            <param name="queryable">初始查询数据源</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.IsTodo(System.Linq.IQueryable{KdCore.Data.Tasks.KdUserTask},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            查询待办事项
            </summary>
            <param name="queryable">初始查询数据源</param> 
            <param name="todo">是否仍在待办状态</param>
            <param name="onlyView">是否仅需查阅的</param>
            <param name="ignoreCount">查询待办事项的忽略计数状态的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.WhereUserTodo(System.Linq.IQueryable{KdCore.Data.Tasks.KdUserTask},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            查询待办事项
            </summary>
            <param name="queryable">初始查询数据源</param> 
            <param name="userId"></param>
            <param name="todo">是否仍在待办状态</param>
            <param name="onlyView">是否仅需查阅的</param>
            <param name="ignoreCount">查询待办事项的忽略计数状态的值</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.WhereUserHandle(System.Linq.IQueryable{KdCore.Data.Tasks.KdUserTask},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            查询已办事项
            </summary>
            <param name="queryable">初始查询数据源</param> 
            <param name="userId"></param> 
            <param name="ignoreCount">查询待办事项的忽略计数状态的值</param>
            <param name="onlyView">是否仅需查阅</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.WhereSource(System.Linq.IQueryable{KdCore.Data.Tasks.KdUserTask},System.String,System.Nullable{System.Boolean})">
            <summary>
            获取符合条件的待办事项
            </summary>
            <param name="queryable">初始查询数据源</param> 
            <param name="sourceId">关联的源数据主键</param>
            <param name="onlyView">是否仅需查阅的</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.WhereSource(System.Linq.IQueryable{KdCore.Data.Tasks.KdUserTask},System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            获取符合条件的待办事项
            </summary>
            <param name="queryable">初始查询数据源</param> 
            <param name="sourceId">最终关联的源数据主键</param>
            <param name="itemId">直接关联的数据项主键</param>
            <param name="taskUserId">待办人用户主键</param>
            <param name="onlyView">是否仅需查阅的</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.Where(System.Linq.IQueryable{KdCore.Data.Tasks.KdUserTask},KdCore.Data.Tasks.IKdTaskOption)">
            <summary>
            对待办事项的按照设置选项进行筛选，因无法判断比较方式，不考虑时间类型的属性
            </summary>
            <param name="queryable"></param>
            <param name="option"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdUtilUserTasks.WhereSourceUnit(System.Linq.IQueryable{KdCore.Data.Tasks.KdUserTask},System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            查询指定用户与指定对象主键相关的待办事项集合
            </summary>
            <param name="queryable">待办事项查询数据源</param>
            <param name="sourceId">待办事项关联的事项数据主键</param>
            <param name="unitSign">待办事项关联的功能单元标识</param>
            <param name="sourceType">待办事项关联的事项数据类型标识</param>
            <param name="taskType">待办事项类型标识</param>
            <param name="receiverId">待办事项的接收人/待办人主键</param>
            <param name="onlyView">是否仅需查阅的</param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.BbEntityMapper">
            <summary>
            实体对象自动映射
            </summary>
        </member>
        <member name="M:KdCore.Data.BbEntityMapper.Config``2(System.Func{``0,``1})">
            <summary>
            配置实体映射复制设置
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TTarget"></typeparam>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbEntityMapper.Config(System.Type,System.Type)">
            <summary>
            配置实体映射复制设置
            </summary>
            <param name="tSource"></param>
            <param name="tTarget"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.BbEntityMapper.MapObject(System.Object,System.Object,System.Type,System.Type)">
            <summary>
            实体映射复制赋值
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="targetType"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdWorkDay">
            <summary>
            工作日定义记录
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkDay.UseHalfDay">
            <summary>
            获取或设置是否使用半天作为工作日计量单位
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkDay.DateDay">
            <summary>
            日历日期
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkDay.IsWorkDayAM">
            <summary>
            上午是否工作日
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkDay.IsWorkDayPM">
            <summary>
            下午是否工作日
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkDay.IsDefault">
            <summary>
            是否系统默认设置
            </summary>
        </member>
        <member name="M:KdCore.Data.KdWorkDay.IsWorkDayDefault">
            <summary>
            当期日期默认情况下是否工作日；去除周末，元旦，五一，十一（10.1、2、3）作为非工作日进行判断
            </summary>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdWorkDayHelper">
            <summary>
            工作日查询验证缓存辅助工具
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkDayHelper.WorkDays">
            <summary>
            系统工作日设定缓存
            </summary>
        </member>
        <member name="M:KdCore.Data.KdWorkDayHelper.GetWorkDay(System.DateTime,System.Nullable{System.Int32})">
            <summary>
            获取指定日期的工作日设置
            </summary>
            <param name="dateTime">查询的日期</param> 
            <param name="cacheRange">查询同时缓存的日期天数</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdWorkDayHelper.CalcWorkDaysCount(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Boolean)">
            <summary>
            计算实际使用的工作日天数
            </summary>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="includeEnd"></param>
            <param name="includeStart"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdWorkDayHelper.CalcNextWorkDate(System.Nullable{System.DateTime},System.Double)">
            <summary>
            计算参数日期时间后多少个工作日的日期时间，如果时间为12时前，从当天下午开始计算半天，如果12时之后，从第二天开始计算天数
            </summary>
            <param name="startDate">开始计算工作日的时间</param>
            <param name="limitDays">工作日数量</param>
            <returns></returns>
        </member>
        <member name="T:KdCore.Data.KdWorkWeek">
            <summary>
            工作日设置星期视图
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkWeek.WorkDays">
            <summary>
            工作日设置
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkWeek.ViewWorkDays">
            <summary>
            日历显示中包括的工作日视图
            </summary>
        </member>
        <member name="M:KdCore.Data.KdWorkWeek.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdWorkWeek.#ctor(System.Nullable{System.Int32},System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="weekIndex">星期唯一索引</param> 
            <param name="firstDayOfWeek">星期的第一天是星期几</param>
            <param name="weekRule">一年的第一周计算规则</param>
        </member>
        <member name="M:KdCore.Data.KdWorkWeek.#ctor(System.DateTime,System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="date">日期</param> 
            <param name="firstDayOfWeek">星期的第一天是星期几</param>
            <param name="weekRule">一年的第一周计算规则</param>
        </member>
        <member name="M:KdCore.Data.KdWorkWeek.SetWorkDays(System.Collections.Generic.IEnumerable{KdCore.Data.KdWorkDay})">
            <summary>
            设置星期中的工作日设置
            </summary>
            <param name="weekWorkDays"></param> 
        </member>
        <member name="T:KdCore.Data.KdWorkMonth">
            <summary>
            工作日设置月份视图
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkMonth.WorkDays">
            <summary>
            工作日设置
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkMonth.WorkWeeks">
            <summary>
            月份视图中包括的星期视图
            </summary>
        </member>
        <member name="M:KdCore.Data.KdWorkMonth.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdWorkMonth.#ctor(System.Nullable{System.Int32},System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="monthIndex"></param>
            <param name="firstDayOfWeek"></param>
            <param name="weekRule"></param>
        </member>
        <member name="M:KdCore.Data.KdWorkMonth.#ctor(System.DateTime,System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="date"></param>
            <param name="firstDayOfWeek"></param>
            <param name="weekRule"></param>
        </member>
        <member name="M:KdCore.Data.KdWorkMonth.SetWorkDays(System.Collections.Generic.IEnumerable{KdCore.Data.KdWorkDay},System.Boolean)">
            <summary>
            设置月份中的工作日设置
            </summary>
            <param name="monthWorkDays"></param>
            <param name="leastWeek"></param>
        </member>
        <member name="T:KdCore.Data.KdWorkYear">
            <summary>
            日程安排年度视图
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkYear.WorkDays">
            <summary>
            工作日设置
            </summary>
        </member>
        <member name="P:KdCore.Data.KdWorkYear.WorkMonths">
            <summary>
            年度视图中包括的月份视图
            </summary>
        </member>
        <member name="M:KdCore.Data.KdWorkYear.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:KdCore.Data.KdWorkYear.#ctor(System.Nullable{System.Int32},System.DayOfWeek,System.Globalization.CalendarWeekRule)">
            <summary>
            构造函数
            </summary>
            <param name="year"></param>
            <param name="firstDayOfWeek"></param>
            <param name="weekRule"></param>
        </member>
        <member name="M:KdCore.Data.KdWorkYear.SetWorkDays(System.Collections.Generic.IEnumerable{KdCore.Data.KdWorkDay})">
            <summary>
            设置年度中的工作日设置
            </summary>
            <param name="yearWorkDays"></param> 
        </member>
        <member name="T:KdCore.Data.KdAppProfile">
            <summary>
            系统整体全局配置
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.GlobalSavePath">
            <summary>
            获取或设置序列化保存路径
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.Global">
            <summary>
            获取当前的系统全局设置
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAppProfile.ResetCaches">
            <summary>
            重置系统全局设置缓存
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.AppShortName">
            <summary>
            当前系统的项目名称的简称
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UseVersionsNotify">
            <summary>
            获取或设置是否启用程序版本更新通知；
            设置为启用时，在开发人员每次登记了程序版本更新说明之后，用户第一次登录系统时，将会接收到系统通知
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.HttpKeepAlive">
            <summary>
            获取或设置是否保持当前会话持续连接；
            设置为启用时采用JavaScript脚本保持连接，确保当前登录用户不至于长时间未操作自动退出登录
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.HttpKeepAliveTimeout">
            <summary>
            获取或设置会话保持间隔时间，以秒为单位；
            保持当前会话持续连接时，间隔多长时间连接一次服务器
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.RenderElapsedTime">
            <summary>
            获取或设置是否呈现有关信息到用户界面：系统响应耗时；
            因手机屏幕较小，在手机端时不管是否设置都不会显示
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UrlInternet">
            <summary>
            全局设置--公网访问URL地址
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PwdWeakVerify">
            <summary>
            获取或设置是否启用弱口令验证
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PwdMinLength">
            <summary>
            获取或设置用户设置登录密码时不视为弱口令的最小长度
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PwdMinCharType">
            <summary>
            获取或设置用户密码不视为弱口令的最少字符类型
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UserLoginImageVerify">
            <summary>
            获取或设置图片验证码是否启用：用户登录
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UserPwdWrongLockCount">
            <summary>
            获取或设置密码错误锁定次数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UserPwdWrongCountTime">
            <summary>
            获取或设置用户密码错误计数的时间
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UserPwdWrongLockTime">
            <summary>
            获取或设置用户密码错误后锁定的时间
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.LogsUserActions">
            <summary>
            全局设置--是否启用自动用户操作日志
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.LogsEntityDetails">
            <summary>
            全局设置--是否启用自动用户操作日志（EntityFramework 每次CURD操作的详细日志）
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.LogsSqlDebug">
            <summary>
            全局设置--是否启用SQL调试日志输出（ILog4.net）
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.TempSavePath">
            <summary>
            全局设置--临时保存目录，支持“~”
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UploadSavePath">
            <summary>
            全局设置--附件保存目录，支持“~”
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UploadAutoStart">
            <summary>
            获取或设置选择附件后是否自动开始上传操作
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UploadDisabled">
            <summary>
            获取或设置是否禁用上传文件，禁用时在页面不生成上传的HTML代码；
            系统是否要调试 JavaScript，因附件上传采用了iframe，容易导致IE崩溃，可在调试JS时设置为true
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UploadTitle">
            <summary>
            获取或设置默认上传组件显示的标题
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UploadMaxSize">
            <summary>
            获取或设置上传文件大小的最大限制，以 KB 为单位
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UploadExtNames">
            <summary>
            获取或设置允许的文件类型
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UploadFileExtNames">
            <summary>
            获取允许的文件类型数组
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.FirstDayOfWeek">
            <summary>
            全局设置--每星期开始的是星期几
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.WeekRule">
            <summary>
            全局设置--每年第一个星期的计算方法规则
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.WorkTimeAmStart">
            <summary>
            全局设置--上午上班时间
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.WorkTimeAmEnd">
            <summary>
            全局设置--上午下班时间 
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.WorkTimePmStart">
            <summary>
            全局设置--工作日下午上班时间
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.WorkTimePmEnd">
            <summary>
            全局设置--工作日下午下班时间 
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.WorkPlanTimeSpan">
            <summary>
            全局设置--工作安排间隔分钟数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UserFileSavePeriod">
            <summary>
            获取或设置当前系统中用户文件的保存文件夹分组周期规则
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.DataLayout">
            <summary>
            系统默认数据显示布局方式
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.EnableSmsNotice">
            <summary>
            全局设置--是否启用短信通知
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.EnableSmsReceive">
            <summary>
            全局设置--是否启用短信接收
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.SmsCheckPeriod">
            <summary>
            全局设置--短信检查周期
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.UserTaskCheckPeriod">
            <summary>
            全局设置--待办事项状态检查周期
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.EnableSmsTaskOverdueForHandler">
            <summary>
            全局设置--是否启用待办超期短信
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.EnableSmsTaskOverdueForReader">
            <summary>
            全局设置--是否启用待阅超期短信
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.EnableSmsTaskOverdueAtAM">
            <summary>
            全局设置--是否启用上午发送超期短信
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.EnableSmsTaskOverdueAtPM">
            <summary>
            全局设置--是否启用下午发送超期短信
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.OverdueNoticeHours">
            <summary>
            设置为警示提醒(黄灯状态)的待办任务提前小时计数，即多少小时后将超过办理期限
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.OverdueAlertHours">
            <summary>
            设置视为严重超期的待办任务超期小时数（多少小时外超期视为严重超期）
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PageSize">
            <summary>
            获取或设置分页显示数据每页条数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PageSizeMax">
            <summary>
            获取或设置分页查询最大许可每页条数，基于显示性能考虑，默认值 1500
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PageIndexMax">
            <summary>
            获取或设置分页查询最大许可翻页页数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PageIndexLimit">
            <summary>
            获取或设置分页查询翻页页数限制，如未登录时只显示一部分数据
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PageButton">
            <summary>
            获取或设置分页显示数据翻页按钮个数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PageButtonTablet">
            <summary>
            分页显示数据翻页按钮个数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PageButtonMobile">
            <summary>
            分页显示数据翻页按钮个数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PageSizeEditable">
            <summary>
            是否可以修改每页条数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.PageIndexEditable">
            <summary>
            是否可以直接指定跳转到的页数
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.User_Reminder">
            <summary>
            个人设置--个人提醒消息弹出间隔（单位：分钟）
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.AdminUserDisabled">
            <summary>
            是否允许超级用户登录
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.AdminUserName">
            <summary>
            超级用户登录用户名
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.AdminRealName">
            <summary>
            超级用户显示的真实姓名
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.AdminUserPwd">
            <summary>
            超级用户登录密码
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAppProfile.InitValues">
            <summary>
            初始化默认设置
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAppProfile.VerifyValues">
            <summary>
            验证设置是否正确，如果有错误则尝试纠正
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAppProfile.IsVirtualUserName(System.String)">
            <summary>
            判断用户名或主键是否系统内置管理员账号
            </summary>
            <param name="userIdOrName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAppProfile.IsSysAdminUser(System.String)">
            <summary>
            判断用户名或主键是否系统内置管理员账号
            </summary>
            <param name="userIdOrName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAppProfile.IsInnerEmptyUser(System.String)">
            <summary>
            判断用户名或主键是否系统内置占位虚拟账号
            </summary>
            <param name="userIdOrName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAppProfile.IsInnerAutoUser(System.String)">
            <summary>
            判断用户名或主键是否系统内置数据自动处理账号
            </summary>
            <param name="userIdOrName"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.AdminUser">
            <summary>
            系统内置管理用户
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.EmptyUser">
            <summary>
            系统内置未登录用户
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.AutoUser">
            <summary>
            系统内置自动处理事务时使用的占位标识用户；
            如短信自动收发是没有用户操作的，但数据的创建人等规定不能为null，可使用该用户进行设置占位
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.ImportUser">
            <summary>
            系统内置处理数据导入时使用的占位标识用户 
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAppProfile.LoadGlobal">
            <summary>
            加载全局配置
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAppProfile.SaveGlobalCurrentValues">
            <summary>
            保存当前的全局配置
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAppProfile.FiltersSaveConfigValues">
            <summary>
            第一个参数是源数据对象（用户提交的配置），第二个参数是目标数据对象（将会保存的配置）
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAppProfile.SaveGlobalUserValues(KdCore.Data.KdAppProfile)">
            <summary>
            保存用户编辑的全局配置
            </summary>
            <param name="toSaveProfile"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAppProfile.FiltersSaveValues(KdCore.Data.KdAppProfile,KdCore.Data.KdAppProfile)">
            <summary>
            仅保存部分参数值，有些参数不允许用户修改
            </summary>
            <param name="source"></param>
            <param name="target"></param>
        </member>
        <member name="T:KdCore.Data.BbTaskHandle">
            <summary>
            用户办理提交的处理类型 
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.None">
            <summary>
            未设置，默认值，视为查询当前业务办理状况
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Save">
            <summary>
            保存签批对象的数据，不进行业务办理
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Refresh">
            <summary>
            更新计算流程办理进度状态，不进行业务办理
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Cancel">
            <summary>
            撤销操作
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Nullify">
            <summary>
            作废
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Start">
            <summary>
            发起
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Restart">
            <summary>
            退回发起人
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Comment">
            <summary>
            传阅意见、评论等
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Patch">
            <summary>
            补签意见
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Pause">
            <summary>
            任务暂停正在等待其他操作完成后才能继续进行
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Suspend">
            <summary>
            任务挂起
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Sign">
            <summary>
            签收
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Run">
            <summary>
            任务正在办理
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Wait">
            <summary>
            任务正在等待补签意见处理后结束
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Finish">
            <summary>
            任务已完成
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Close">
            <summary>
            任务已办结
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Back">
            <summary>
            退回上一步
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Pass">
            <summary>
            正常提交,办理通过
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.System">
            <summary>
            系统自动办理
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Error">
            <summary>
            任务出现错误
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Over">
            <summary>
            办理结束
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Overdue">
            <summary>
            超期后系统自动完成通过
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Abort">
            <summary>
            任务中止
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.AutoOver">
            <summary>
            系统自动完成
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskHandle.Others">
            <summary>
            其他类型
            </summary>
        </member>
        <member name="T:KdCore.Data.BbTodoState">
            <summary>
            任务安排的办理进度状态
            已有系统正在使用，不再进行调整
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.None">
            <summary>
            未设置状态
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.Ignore">
            <summary>
            忽略办理状态；因进度状态尚未开始计时，或因数据特殊性，不对办理进度进行状态标识
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.Todo">
            <summary>
             待办状态，状态判断比较使用，不直接用于赋值
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.TodoNormal">
            <summary>
            正常待办状态
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.TodoWarning">
            <summary>
            警告待办状态
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.TodoOverdue">
            <summary>
            超期未办状态
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.TodoAlert">
            <summary>
            严重超期未办状态
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.Over">
            <summary>
            办结状态，状态判断比较使用，不直接用于赋值
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.OverNormal">
            <summary>
            正常办结状态
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.OverWarning">
            <summary>
            警告办结状态
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.OverOverdue">
            <summary>
            超期办结状态
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTodoState.OverAlert">
            <summary>
             严重超期办结状态
            </summary>
        </member>
        <member name="T:KdCore.Data.BbTaskStatus">
            <summary>
            审批等事务处理进度或结果状态
            在查询当前审批处理状态时获取所有该文档的步骤实例，然后得出数值最低的状态，已撤销的步骤除外
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.None">
            <summary>
            无处理状态
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Cancelled">
            <summary>
            任务已撤销
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Deleted">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Nullified">
            <summary>
            作废
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Unstart">
            <summary>
            尚未启动任务
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Started">
            <summary>
            刚刚启动任务
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Paused">
            <summary>
            任务暂停正在等待其他操作完成后才能继续进行
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Suspended">
            <summary>
            任务挂起
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Restarted">
            <summary>
            刚刚重新启动任务
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Running">
            <summary>
            任务正在办理
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.RunningOverdue">
            <summary>
            任务正在办理,但超过了办理期限
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Waitting">
            <summary>
            任务正在等待补签意见处理后结束
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Finished">
            <summary>
            任务已完成
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Overed">
            <summary>
            正常办理结束，视为最终办理结果为全程通过，申办的事项有效
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.OveredOverdue">
            <summary>
            超期后系统自动办结
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.OveredAbort">
            <summary>
            任务中止
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.OveredSystem">
            <summary>
            系统自动完成
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Errored">
            <summary>
            任务出现错误
            </summary>
        </member>
        <member name="F:KdCore.Data.BbTaskStatus.Others">
            <summary>
            其他类型
            </summary>
        </member>
        <member name="T:KdCore.Data.KdAuthVerify">
            <summary>
            系统用户权限验证常用处理方法
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.LogLevel">
            <summary>
            当前类型中的 <see cref="M:KdCore.Data.KdAuthVerify.LogWrite(System.String,System.Object[])"/> 方法中的日志输出级别
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.Logger">
            <summary>
            获取当前类型的日志输出接口实例对象
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.LogWrite(System.String,System.Object[])">
            <summary>
            输出日志信息，设置统一方法，便于调整日志输出级别
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.EnableUserAuthCache">
            <summary>
            获取或设置是否启用用用户权限验证缓存
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.Func_LoginVerify">
            <summary>
            获取或设置用户验证的处理方法
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.Func_OnUserLoginVerify">
            <summary>
            获取或设置用户登录验证时在密码验证前的预验证处理（返回结果是验证不通过的原因说明，返回为空时表示通过验证）
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.Func_BuildVerifySign">
            <summary>
            获取或设置生成操作验证标识字符串的方法
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.Func_GetUnitAction">
            <summary>
            获取或设置通过验证标识获取操作定义的方法
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.Func_GetUserRoles">
            <summary>
            获取或设置用户拥有角色的获取方法
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.Func_GetKdRoleScope">
            <summary>
            获取或设置角色的操作权限验证方法
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.Func_GetKdAuthScope">
            <summary>
            获取或设置用户操作权限验证方法
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.Func_KdAuthEntityScope">
            <summary>
            获取或设置用户权限验证方法
            </summary>
        </member>
        <member name="P:KdCore.Data.KdAuthVerify.Func_AuthEntityScope">
            <summary>
            获取或设置用户权限验证方法
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.UnsuitableUserName(System.String)">
            <summary>
            验证用户名是否符合要求，如最大长度，是否包含非法字符等
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetDuty(KdCore.Data.Users.KdUser)">
            <summary>
            获取用户的所属职务
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAllowCorpCodes(KdCore.Data.Users.IKdUser)">
            <summary>
            获取用户可访问的单位标识编码，包含所属单位和授权单位
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAllowCorps(KdCore.Data.Users.IKdUser)">
            <summary>
            获取用户可访问的单位，包含所属单位和授权单位
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAllowCorps(KdCore.Data.Users.IKdUser,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            获取用户在指定的单位标识编码中可访问的单位，包含所属单位和授权单位
            </summary>
            <param name="user"></param>
            <param name="corpCodes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasMultiCorps(KdCore.Data.Users.IKdUser)">
            <summary>
            获取当前用户是否有多个可访问单位
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasGrantCorpCode(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            获取用户是否能访问指定标识编码的单位
            </summary>
            <param name="user"></param>
            <param name="corpCode"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasAnyCorpCode(KdCore.Data.Users.IKdUser,System.String[])">
            <summary>
            获取用户是否能访问指定标识编码中的某一个单位
            </summary>
            <param name="user"></param>
            <param name="corpCodes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAllowCorpCodes(KdCore.Data.Users.IKdUser,System.String[])">
            <summary>
            获取指定单位标识编码中该用户可访问的单位标识编码
            </summary>
            <param name="user"></param>
            <param name="corpCodes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAllowDeptIds(KdCore.Data.Users.IKdUser)">
            <summary>
            获取用户可访问的部门主键，包含所属部门和授权部门
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAllowDeptIds(KdCore.Data.Users.IKdUser,System.String[])">
            <summary>
            获取指定部门主键中该用户可访问的部门主键
            </summary>
            <param name="user"></param>
            <param name="deptIds"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAllowUserIds(KdCore.Data.Users.IKdUser)">
            <summary>
            获取用户可访问的用户主键，包含本人用户和授权用户
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasGrantDeptId(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            获取用户是否能访问指定主键的部门
            </summary>
            <param name="user"></param>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasAnyDeptId(KdCore.Data.Users.IKdUser,System.String[])">
            <summary>
            获取用户是否能访问指定主键中的某一个部门
            </summary>
            <param name="user"></param>
            <param name="deptIds"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasGrantUserId(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            获取用户是否能访问指定主键的部门
            </summary>
            <param name="user"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasAnyUserId(KdCore.Data.Users.IKdUser,System.String[])">
            <summary>
            获取用户是否能访问指定主键中的某一个部门
            </summary>
            <param name="user"></param>
            <param name="userIds"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.ToIKdUserList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            转换用户类型为通用的接口类型
            </summary>
            <param name="users"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetRoles(System.Security.Principal.IPrincipal)">
            <summary>
            获取用户被授于的角色列表
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.BuildVerifySign(System.String,System.String,System.String)">
            <summary>
            生成操作验证标识字符串
            </summary>
            <param name="action"></param>
            <param name="unit"></param>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetUnitAction(System.String)">
            <summary>
            通过操作验证标识获取操作定义
            </summary>
            <param name="actionSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.IsForbidden(KdCore.Data.BbDataScope)">
            <summary>
            判断指定权限范围是否包含被禁止
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.IsDefault(KdCore.Data.BbDataScope)">
            <summary>
            判断指定权限范围是否只包含了 <see cref="F:KdCore.Data.BbDataScope.Default"/>
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasAccess(KdCore.Data.BbDataScope)">
            <summary>
            判断指定权限范围是否允许访问
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasView(KdCore.Data.BbDataScope)">
            <summary>
            判断指定权限范围是否允许查看
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasHandle(KdCore.Data.BbDataScope)">
            <summary>
            判断指定权限范围是否允许操作
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasViewFull(KdCore.Data.BbDataScope)">
            <summary>
            判断指定权限范围是否包含查看所有数据的权限
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.HasHandleFull(KdCore.Data.BbDataScope)">
            <summary>
            判断指定权限范围是否包含操作所有数据的权限
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.WithoutAnyView(KdCore.Data.BbDataScope)">
            <summary>
            判断指定权限范围是否不包含任何范围的查看权限
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.WithoutAnyHandle(KdCore.Data.BbDataScope)">
            <summary>
            判断指定权限范围是否不包含任何范围的操作权限
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.ConvertHandleToView(KdCore.Data.BbDataScope)">
            <summary>
            将操作范围转换为对应的查看范围
            </summary>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.CoreVerifyGrantScope(System.String,System.String)">
            <summary>
            【核心验证方法】解析授权权限标识中包含的授权数据范围
            </summary>
            <param name="grantSign">已授权的权限标识及授权数据范围</param>
            <param name="actionSign">纯粹的权限标识，不能包含数据范围</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.CoreVerifyGrantScope(KdCore.Data.Users.IKdRole,System.String)">
            <summary>
            【核心验证方法】获取角色对操作验证标识的操作许可范围
            </summary>
            <param name="role"></param>
            <param name="actionSign">纯粹的权限标识，不能包含数据范围</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.CoreVerifyRoleScope(KdCore.Data.Users.IKdRole,KdCore.Data.Units.KdUnitAction)">
            <summary>
            【核心验证方法】 获取角色对模块操作的操作许可范围
            </summary>
            <param name="role"></param>
            <param name="unitAction"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAuthScope(KdCore.Data.Users.IKdRole,KdCore.Data.Units.KdUnitAction)">
            <summary>
            获取角色对模块操作的操作许可范围
            </summary>
            <param name="role"></param>
            <param name="unitAction"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.CoreVerifyUserScope(KdCore.Data.Users.IKdUser,KdCore.Data.Units.KdUnitAction)">
            <summary>
            【核心验证方法】获取用户授权范围
            </summary>
            <param name="user"></param>
            <param name="unitAction"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAuthScopeCore(KdCore.Data.Users.IKdUser,KdCore.Data.Units.KdUnitAction)">
            <summary>
            获取用户授权范围
            </summary>
            <param name="user"></param>
            <param name="unitAction"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.LogVerifyUserScope(System.Security.Principal.IPrincipal,System.String,KdCore.Data.Units.KdUnitAction,KdCore.Data.BbDataScope)">
            <summary>
            输出授权范围验证情况的日志记录
            </summary>
            <param name="principal"></param>
            <param name="actionSign"></param>
            <param name="unitAction"></param>
            <param name="scope"></param>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAuthScope(KdCore.Data.Users.IKdUser,KdCore.Data.Units.KdUnitAction)">
            <summary>
            获取用户授权范围
            </summary>
            <param name="user"></param>
            <param name="unitAction"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAuthScope(System.Security.Principal.IPrincipal,KdCore.Data.Units.KdUnitAction)">
            <summary>
            获取用户授权范围
            </summary>
            <param name="principal"></param>
            <param name="unitAction"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAuthScope(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            获取用户授权范围
            </summary>
            <param name="user"></param>
            <param name="actionSign"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetAuthScope(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            获取用户授权范围
            </summary>
            <param name="principal"></param>
            <param name="actionSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AuthAction(KdCore.Data.Users.IKdUser,KdCore.Data.Units.KdUnitAction)">
            <summary>
            验证用户是否拥有指定操作的授权范围
            </summary>
            <param name="user"></param>
            <param name="unitAction"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AuthAction(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            验证用户是否拥有指定操作的授权范围
            </summary>
            <param name="user"></param>
            <param name="actionSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AuthAction(System.Security.Principal.IPrincipal,KdCore.Data.Units.KdUnitAction)">
            <summary>
            验证用户是否拥有指定操作的授权范围
            </summary>
            <param name="principal"></param>
            <param name="unitAction"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AuthAction(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            验证用户是否拥有指定操作的授权范围
            </summary>
            <param name="principal"></param>
            <param name="actionSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.CoreAuthEntity(KdCore.Data.Users.IKdUser,KdCore.Data.IKdEntityBase,KdCore.Data.BbDataScope)">
            <summary>
            【核心验证方法】查询数据实体是否在用户的授权权限范围内
            </summary>
            <param name="user"></param>
            <param name="entity"></param>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AuthEntity(KdCore.Data.Users.IKdUser,KdCore.Data.IKdEntityBase,KdCore.Data.BbDataScope)">
            <summary>
            查询数据实体是否在用户的授权权限范围内
            </summary>
            <param name="user"></param>
            <param name="entity"></param>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AuthEntity(System.Security.Principal.IPrincipal,KdCore.Data.IKdEntityBase,KdCore.Data.BbDataScope)">
            <summary>
            查询数据实体是否在用户的授权权限范围内
            </summary>
            <param name="principal"></param>
            <param name="entity"></param>
            <param name="scope"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AuthEntity(System.Security.Principal.IPrincipal,KdCore.Data.IKdEntityBase,KdCore.Data.Units.KdUnitAction)">
            <summary>
            查询数据实体是否在用户的授权操作权限范围内
            </summary>
            <param name="principal"></param>
            <param name="entity"></param>
            <param name="unitAction"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AuthEntity(System.Security.Principal.IPrincipal,KdCore.Data.IKdEntityBase,System.String)">
            <summary>
            查询数据实体是否在用户的授权操作权限范围内
            </summary>
            <param name="principal"></param>
            <param name="entity"></param>
            <param name="actionSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.CoreGetQueryScopeByCreatorLinqExpression``1(KdCore.Data.Users.IKdUser,KdCore.Data.BbDataScope)">
            <summary>
            【核心验证方法】获取按查询用户授权的查询范围进行查询的表达式
            </summary>
            <typeparam name="TEntity"></typeparam> 
            <param name="user">进行查询的用户</param>
            <param name="scope">对进行查询用户授权的查询范围</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetQueryScopeByCreatorLinqExpression``1(KdCore.Data.Users.IKdUser,KdCore.Data.BbDataScope)">
            <summary>
            获取按查询用户授权的查询范围进行查询的表达式
            </summary>
            <typeparam name="TEntity"></typeparam> 
            <param name="user">进行查询的用户</param>
            <param name="scope">对进行查询用户授权的查询范围</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.QueryScopeByCreator``1(System.Linq.IQueryable{``0},KdCore.Data.Users.IKdUser,KdCore.Data.BbDataScope)">
            <summary>
            按查询用户授权的查询范围进行查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable">原始可查询的数据源</param>
            <param name="user">进行查询的用户</param>
            <param name="scope">对进行查询用户授权的查询范围</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.CoreGetQueryScopeByOwnerLinqExpression``1(KdCore.Data.Users.IKdUser,KdCore.Data.BbDataScope)">
            <summary>
            【核心验证方法】获取按查询用户授权的查询范围进行查询的表达式
            </summary>
            <typeparam name="TEntity"></typeparam> 
            <param name="user">进行查询的用户</param>
            <param name="scope">对进行查询用户授权的查询范围</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetQueryScopeByOwnerLinqExpression``1(KdCore.Data.Users.IKdUser,KdCore.Data.BbDataScope)">
            <summary>
            获取按查询用户授权的查询范围进行查询的表达式
            </summary>
            <typeparam name="TEntity"></typeparam> 
            <param name="user">进行查询的用户</param>
            <param name="scope">对进行查询用户授权的查询范围</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.QueryScopeByOwner``1(System.Linq.IQueryable{``0},KdCore.Data.Users.IKdUser,KdCore.Data.BbDataScope)">
            <summary>
            按查询用户授权的查询范围进行查询
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="queryable">原始可查询的数据源</param>
            <param name="user">进行查询的用户</param>
            <param name="scope">对进行查询用户授权的查询范围</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.UnlockPwdWrong(KdCore.Data.Users.IKdUser)">
            <summary>
            用户密码错误锁定解除，仅对属性赋值操作，不进行保存提交
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.CheckAutoUnlockPwdWrong(KdCore.Data.Users.IKdUser,System.Nullable{System.TimeSpan})">
            <summary>
            检查用户密码错误锁定状态，并按照系统的自动解锁时间设置自动进行解锁
            </summary>
            <param name="user"></param>
            <param name="autoUnlock">自动解除锁定时的距离锁定间隔时间</param>
            <returns>最终用户的密码错误锁定状态</returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.LoginVerify(KdCore.Data.Providers.IKdUserProvider,KdCore.Data.ViewModels.KdUserLogin)">
            <summary>
            用户登录验证
            </summary>
            <param name="provider"></param>
            <param name="loginView"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.GetUserItem(KdCore.KdAppIdentity,System.String)">
            <summary>
            获取远程用户信息
            </summary>
            <param name="appIdentity"></param>
            <param name="userToken"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.ToUserItems``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将实际用户数据源转换为前端使用的用户模型类集合
            </summary>
            <param name="users"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AuthMenuItem(KdCore.Data.Users.IKdRole,KdCore.Data.Menus.KdMenuItem)">
            <summary>
            验证菜单项对于参数角色是否授权
            </summary>
            <param name="role"></param>
            <param name="menuItem"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AuthMenu(System.Security.Principal.IPrincipal,KdCore.Data.Menus.KdMenu)">
            <summary>
            获取用户授权的菜单，并根据参数设置当前选定的菜单项
            </summary>
            <param name="principal"></param>
            <param name="fullMenu"></param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AllowStrict(KdCore.Data.Users.KdUser,System.String[],System.String[],System.String[],System.String[],System.String[])">
            <summary>
            根据指定的用户、职务、部门、组织主键，按照全部符合的方式，判断用户是否符合条件
            </summary>
            <param name="user"></param>
            <param name="userIds"></param>
            <param name="roleNames"></param>
            <param name="deptIds"></param>
            <param name="dutyIds"></param>
            <param name="corpCodes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AllowStrict(KdCore.Data.Users.KdUser,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            根据指定的用户、职务、部门、组织主键，按照全部符合的方式，判断用户是否符合条件
            </summary>
            <param name="user"></param>
            <param name="userIds"></param>
            <param name="roleNames"></param>
            <param name="deptIds"></param>
            <param name="dutyIds"></param>
            <param name="corpCodes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AllowStrict(KdCore.Data.Users.KdUser,KdCore.Data.Users.KdUserLimit)">
            <summary>
            根据指定的用户、职务、部门、组织主键，按照全部符合的方式，判断用户是否符合条件
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AllowRelax(KdCore.Data.Users.KdUser,System.String[],System.String[],System.String[],System.String[],System.String[])">
            <summary>
            根据指定的用户、职务、部门、组织主键，按照任意一项符合的方式，判断用户是否符合条件
            </summary>
            <param name="user"></param>
            <param name="userIds"></param>
            <param name="roleNames"></param>
            <param name="deptIds"></param>
            <param name="dutyIds"></param>
            <param name="corpCodes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AllowRelax(KdCore.Data.Users.KdUser,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            根据指定的用户、职务、部门、组织主键，按照任意一项符合的方式，判断用户是否符合条件
            </summary>
            <param name="user"></param>
            <param name="userIds"></param>
            <param name="roleNames"></param>
            <param name="deptIds"></param>
            <param name="dutyIds"></param>
            <param name="corpCodes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.AllowRelax(KdCore.Data.Users.KdUser,KdCore.Data.Users.KdUserLimit)">
            <summary>
            根据指定的用户、职务、部门、组织主键，按照任意一项符合的方式，判断用户是否符合条件
            </summary>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.Allow(KdCore.Data.Users.KdUser,System.Boolean,System.String[],System.String[],System.String[],System.String[],System.String[])">
            <summary>
            根据指定的用户、职务、部门、组织主键，判断用户是否符合条件
            </summary>
            <param name="user"></param>
            <param name="useRelaxMode"></param>
            <param name="userIds"></param>
            <param name="roleNames"></param>
            <param name="deptIds"></param>
            <param name="dutyIds"></param>
            <param name="corpCodes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.Allow(KdCore.Data.Users.KdUser,System.Boolean,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            根据指定的用户、职务、部门、组织主键，判断用户是否符合条件
            </summary>
            <param name="user"></param>
            <param name="useRelaxMode"></param>
            <param name="userIds"></param>
            <param name="roleNames"></param>
            <param name="deptIds"></param>
            <param name="dutyIds"></param>
            <param name="corpCodes"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.Data.KdAuthVerify.Allow(KdCore.Data.Users.KdUser,System.Boolean,KdCore.Data.Users.KdUserLimit)">
            <summary>
            根据指定的用户、职务、部门、组织主键，判断用户是否符合条件
            </summary>
        </member>
        <member name="T:KdCore.KdAppIdentity">
            <summary>
            系统集成时多系统间识别标识定义
            </summary>
        </member>
        <member name="P:KdCore.KdAppIdentity.AppSign">
            <summary>
            集成子系统的识别标识
            </summary>
        </member>
        <member name="P:KdCore.KdAppIdentity.UrlAppBase">
            <summary>
            集成子系统的基 URL 地址
            </summary>
        </member>
        <member name="P:KdCore.KdAppIdentity.UrlUserVerify">
            <summary>
            用户令牌验证并获取身份数据的 URL 地址
            </summary>
        </member>
        <member name="M:KdCore.KdAppIdentity.CreateQueryStringForVerify(System.String)">
            <summary>
            创建一个用于验证获取远程用户数据的查询字符串（QueryString）
            </summary>
            <param name="userToken"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.CreateDataForVerify(System.String)">
            <summary>
            创建一个用于验证获取远程用户数据的键值字典
            </summary>
            <param name="userToken"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.GetRemoteUser(System.String)">
            <summary>
            获取远程用户的数据信息（JSON 格式）
            </summary>
            <param name="userToken"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdAppIdentity.AppIdentityCache">
            <summary>
            获取或设置已注册的集成子系统标识缓存
            </summary>
        </member>
        <member name="P:KdCore.KdAppIdentity.Func_InitAppIdentity">
            <summary>
            获取或设置初始化注册集成子系统标识的方法
            </summary>
        </member>
        <member name="M:KdCore.KdAppIdentity.SetUserToken(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            设置系统缓存用户对象的识别令牌 UserToken
            </summary>
            <param name="principal"></param>
            <param name="userToken"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.GetUserByToken(System.String)">
            <summary>
            获取系统当前缓存的 UserToken 对应的用户对象
            </summary>
            <param name="userToken"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.RemoveUserToken(System.Security.Principal.IPrincipal)">
            <summary>
            移除系统当前用户对象的 UserToken 缓存
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.GetAllAppIdentities">
            <summary>
            获取或设置已注册的集成子系统标识
            </summary>
        </member>
        <member name="M:KdCore.KdAppIdentity.SetAppIdentity(KdCore.KdAppIdentity,System.String)">
            <summary>
            设置指定应用程序令牌的用户自动登录验证接口的 URL 地址
            </summary>
            <param name="appIdentity"></param>
            <param name="appSign"></param>
        </member>
        <member name="M:KdCore.KdAppIdentity.LoadConfigs(System.Nullable{System.Boolean},System.String)">
            <summary>
            加载 APP 令牌及用户验证 URL 配置
            </summary>
            <param name="enableAutoLoginByUserToken"></param>
            <param name="loadPath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.LoadConfigs(System.String)">
            <summary>
            加载 APP 令牌及用户验证 URL 配置
            </summary>
            <param name="loadPath"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.GetApp(System.String)">
            <summary>
            获取指定应用程序令牌的子系统应用程序
            </summary>
            <param name="appSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.GetAppById(System.String)">
            <summary>
            获取指定应用程序标识的子系统应用程序
            </summary>
            <param name="appId">应用程序标识</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.GetAppByToken(System.String)">
            <summary>
            获取指定应用程序标识的子系统应用程序
            </summary>
            <param name="appToken">应用程序标识</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.GetUserToken(System.Collections.Specialized.NameValueCollection[])">
            <summary>
            从包含用户令牌数据的键值集合中获取远程用户令牌
            </summary>
            <param name="collections"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.GetAppToken(System.Collections.Specialized.NameValueCollection[])">
            <summary>
            从包含用户令牌数据的键值集合中获取远程用户令牌
            </summary>
            <param name="collections"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.From(System.String,System.Collections.Specialized.NameValueCollection[])">
            <summary>
            从包含用户令牌数据的键值集合中获取远程应用程序标识
            </summary>
            <param name="collections"></param>
            <param name="userToken"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.GetAppName(System.String)">
            <summary>
            获取指定应用程序令牌的子系统应用程序的名称
            </summary>
            <param name="appSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.GetAppUrlBase(System.String)">
            <summary>
            获取指定应用程序令牌的子系统应用程序的基 URL 地址
            </summary>
            <param name="appSign"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppIdentity.GetAppUrlUserVerify(System.String)">
            <summary>
            获取指定应用程序令牌的子系统应用程序的用户自动登录验证接口的 URL 地址
            </summary>
            <param name="appIdToken"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.KdUnitConfigAttribute">
            <summary>
            系统功能单元的配置设定标注
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.Index">
            <summary>
            获取特性出现的先后顺序
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.Priority">
            <summary>
            获取或设置排序优先顺序，数字越小排序越优先
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.Code">
            <summary>
            获取或设置功能单元类型的编码
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.Name">
            <summary>
            获取或设置功能单元类型的名称
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.Description">
            <summary>
            获取或设置功能单元类型的描述说明
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.GroupName">
            <summary>
            获取或设置功能单元分组名称，主要是为了对应MVC中的Area
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.GroupCode">
            <summary>
            获取或设置功能单元分组编码，主要是为了对应MVC中的Area
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.IsAdmin">
            <summary>
            获取或设置当前模块是否属于后台管理模块
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.CheckLogin">
            <summary>
            获取或设置当前访问是否需要验证登录
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.UsePaging">
            <summary>
            获取或设置是否分页显示
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.UseFuzzyQuery">
            <summary>
            获取或设置是否启用了模糊查询
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.BackIndex">
            <summary>
            获取或设置保存数据后跳转到列表
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.LogsUserActions">
            <summary>
            获取或设置是否将用户操作日志保存到数据库
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.UseUserTask">
            <summary>
            获取或设置是否启用自动的用户待办事项
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.TaskOnlyView">
            <summary>
            获取或设置待办事项仅需要查阅
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.TaskIgnoreCount">
            <summary>
            获取或设置待办事项数据不计入正常的待办事项中，仅用于记录用户操作是否完成
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.ShowMsgActionSuccess">
            <summary>
            获取或设置通过 Json 方式响应操作结果时，是否清除操作成功时的结果说明消息（减少一次确认对话框的弹出）
            </summary>
        </member>
        <member name="P:KdCore.KdUnitConfigAttribute.ShowMsgJsonSuccess">
            <summary>
            获取或设置通过 Json 方式响应操作结果时，是否清除操作成功时的结果说明消息（减少一次确认对话框的弹出）
            </summary>
        </member>
        <member name="M:KdCore.KdUnitConfigAttribute.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:KdCore.KdUnitConfigAttribute.#ctor(System.Int32)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:KdCore.KdUnitConfigAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="T:KdCore.KdUnitGroupAttribute">
            <summary>
            系统功能或其他分类的单元标识
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.GroupName">
            <summary>
            获取或设置功能单元分组名称，主要是为了对应MVC中的Area
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.GroupCode">
            <summary>
            获取或设置功能单元分组编码，主要是为了对应MVC中的Area
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.Name">
            <summary>
            获取或设置功能单元名称
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.Code">
            <summary>
            获取或设置功能单元编码
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.Order">
            <summary>
            获取或设置功能单元排列顺序
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.ClientSupport">
            <summary>
            获取或设置功能单元支持的客户端类型
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.Description">
            <summary>
            获取或设置功能单元的描述说明
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.UnitPath">
            <summary>
            获取或设置功能单元调用标识或路径
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.MenuIgnore">
            <summary>
            获取或设置在菜单定义时是否忽略当前功能单元
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.DefaultAction">
            <summary>
            获取或设置点击菜单时的默认操作的识别编码
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.MenuAuthCodes">
            <summary>
            获取或设置判断菜单是否显示时的进行检验的操作识别编码
            </summary>
        </member>
        <member name="P:KdCore.KdUnitGroupAttribute.DeptScope">
            <summary>
            获取或设置是否按部门区分数据（按部门查询、编辑、删除等）
            </summary>
        </member>
        <member name="M:KdCore.KdUnitGroupAttribute.#ctor(System.String,System.Int32,KdCore.BbClientType,System.String)">
            <summary>
            初始化 KdCore.KdUnitAttribute 类的新实例。
            </summary>
            <param name="name">功能单元名称</param> 
            <param name="order">显示顺序</param>
            <param name="clientSupport">该模块支持的客户端种类</param>
            <param name="description">对该模块的描述说明</param>
        </member>
        <member name="M:KdCore.KdUnitGroupAttribute.#ctor(System.String,System.Int32,System.Boolean,KdCore.BbClientType,System.String)">
            <summary>
            初始化 KdCore.KdUnitAttribute 类的新实例。
            </summary>
            <param name="name">功能单元名称</param> 
            <param name="order">显示顺序</param>
            <param name="byDeptScope">该模块下数据是否默认按创建人部门权限进行筛选</param> 
            <param name="clientSupport">该模块支持的客户端种类</param>
            <param name="description">对该模块的描述说明</param>
        </member>
        <member name="T:KdCore.KdUnitCategoryAttribute">
            <summary>
            系统功能单元的分类标识
            </summary>
        </member>
        <member name="P:KdCore.KdUnitCategoryAttribute.Category">
            <summary>
            获取或设置功能单元的分类
            </summary>
        </member>
        <member name="P:KdCore.KdUnitCategoryAttribute.Name">
            <summary>
            获取或设置功能单元的分类名称
            </summary>
        </member>
        <member name="P:KdCore.KdUnitCategoryAttribute.Description">
            <summary>
            获取或设置功能单元的分类描述说明
            </summary>
        </member>
        <member name="M:KdCore.KdUnitCategoryAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="T:KdCore.KdUtilUsers">
            <summary>
            用户数据辅助处理工具
            </summary>
        </member>
        <member name="M:KdCore.KdUtilUsers.SetCurrUser(System.Web.HttpSessionStateBase,KdCore.Data.Users.IKdUser)">
            <summary>
            设置当前登录用户，并进行数据类型转换，去除代理类
            </summary>
            <param name="session"></param>
            <param name="user"></param>
        </member>
        <member name="M:KdCore.KdUtilUsers.GetUserCache(System.Security.Principal.IPrincipal)">
            <summary>
            获取指定用户的所有缓存数据
            </summary>
            <param name="principal"></param>
        </member>
        <member name="M:KdCore.KdUtilUsers.RemoveUserCache(System.Security.Principal.IPrincipal)">
            <summary>
            移除用户缓存数据
            </summary>
            <param name="principal"></param>
        </member>
        <member name="M:KdCore.KdUtilUsers.SetUserCache(System.Security.Principal.IPrincipal,System.String,System.Object)">
            <summary>
            设置用户缓存数据
            </summary>
            <param name="principal"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.GetUserCache(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            获取用户缓存数据
            </summary>
            <param name="principal"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.GetUserCache``1(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            获取用户缓存数据
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="principal"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.GetUserCache(KdCore.Data.Users.IKdUser)">
            <summary>
            获取指定用户的所有缓存数据
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:KdCore.KdUtilUsers.RemoveUserCache(KdCore.Data.Users.IKdUser)">
            <summary>
            移除用户缓存数据
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:KdCore.KdUtilUsers.SetUserCache(KdCore.Data.Users.IKdUser,System.String,System.Object)">
            <summary>
            设置用户缓存数据
            </summary>
            <param name="user"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.GetUserCache(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            获取用户缓存数据
            </summary>
            <param name="user"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.GetUserCache``1(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            获取用户缓存数据
            </summary>
            <typeparam name="TItem"></typeparam>
            <param name="user"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.ToSortList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            对用户进行排序
            </summary>
            <typeparam name="TKdUser"></typeparam>
            <param name="users"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.SortByDeptDuty``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{KdCore.Data.Users.KdUserDept},System.Collections.Generic.List{KdCore.Data.Users.KdUserDuty},System.Collections.Generic.List{KdCore.Data.Users.KdUserCorp})">
            <summary>
            按照部门和职务的顺序对用户进行排序
            </summary>
            <typeparam name="TKdUser"></typeparam>
            <param name="users"></param>
            <param name="depts"></param>
            <param name="dutys"></param>
            <param name="corps"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.SortByDeptDuty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            按照部门和职务的顺序对用户进行排序
            </summary>
            <param name="users"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.ToDictDeptUsers(System.Collections.Generic.IEnumerable{KdCore.Data.Users.KdUser},System.Boolean)">
            <summary>
            将用户集合转换为按部门组织的 Dictionary
            </summary>
            <param name="users"></param>
            <param name="withEmptyDepts"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.SortByCreator``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{KdCore.Data.Users.KdUser})">
            <summary>
            按照数据创建用户的部门和职务的顺序进行排序
            注意，不能直接在数据库查询上使用
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entityList">待排序的数据</param> 
            <param name="users">用来指定数据顺序的用户，不包含在内的用户所属数据排在最后面</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.SortByCreator``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{KdCore.Data.Users.IKdUser})">
            <summary>
            按照数据创建用户的部门和职务的顺序进行排序；
            注意，不能直接在数据库查询上使用
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entityList">待排序的数据</param> 
            <param name="users">用来指定数据顺序的用户，不包含在内的用户所属数据排在最后面</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.SortByOwner``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{KdCore.Data.Users.KdUser})">
            <summary>
            按照数据所属用户的部门和职务的顺序进行排序
            注意，不能直接在数据库查询上使用
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entityList">待排序的数据</param> 
            <param name="users">用来指定数据顺序的用户，不包含在内的用户所属数据排在最后面</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.SortByOwner``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{KdCore.Data.Users.IKdUser})">
            <summary>
            按照数据所属用户的部门和职务的顺序进行排序
            注意，不能直接在数据库查询上使用
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="entityList">待排序的数据</param> 
            <param name="users">用来指定数据顺序的用户，不包含在内的用户所属数据排在最后面</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.ToUserGroupView(KdCore.Data.IKdListItem)">
            <summary>
            将可选项转换为用户分组
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.ToUserGroupViews(System.Collections.Generic.IEnumerable{KdCore.Data.IKdListItem})">
            <summary>
            将可选项集合转换为用户分组集合
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdUtilUsers.GetUserGroupAllCategories">
            <summary>
            选择用户时，获取对用户分组的分类
            </summary>
        </member>
        <member name="M:KdCore.KdUtilUsers.ToPickView(KdCore.Data.Users.KdUserRange,System.Collections.Generic.List{KdCore.Data.ViewModels.KdUserGroupCategory})">
            <summary>
            将用户选择范围数据转换生成为用户选择视图数据
            </summary>
            <param name="userRange"></param>
            <param name="groupCategories"></param>
            <returns></returns>
        </member>
        <member name="T:KdCore.KdAppContext">
            <summary>
            系统程序基本配置与管理
            </summary>
        </member>
        <member name="F:KdCore.KdAppContext.AsyncCode">
            <summary>
            全局设置同步识别编码
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.LogLevel">
            <summary>
            KdCoreController 类型中的 <see cref="M:KdCore.KdAppContext.LogWrite(System.String,System.Object[])"/> 方法中的默认日志输出级别
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.DbLogLevel">
            <summary>
            数据库数据操作中的 <see cref="M:KdCore.KdAppContext.LogWrite(System.String,System.Object[])"/> 方法中的日志输出级别
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Logger">
            <summary>
            日志记录对象
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.Initialize">
            <summary>
            初始化应用程序配置
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.ResetCaches">
            <summary>
            重置缓存
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.VirtualUserTypeTag">
            <summary>
            获取或设置当前系统虚拟用户类型标识
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.UseRealNameAsUserName">
            <summary>
            是否使用真实姓名作为用户名进行登录等操作
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.LogWrite(System.String,System.Object[])">
            <summary>
            输出日志信息，设置统一方法，便于调整日志输出级别
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="P:KdCore.KdAppContext.Global">
            <summary>
            全局配置
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.EnabledSmsNotice">
            <summary>
            获取或设置是否启用了短信功能
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.EnableDataLogsActions">
            <summary>
            获取或设置是否启用了用户操作日志（保存到数据库的日志）
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.EnableDataLogsDetails">
            <summary>
            获取或设置是否是否启用自动用户操作日志（保存到数据库的日志）（EntityFramework 每次CURD操作的详细日志）
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.EnableLogsSqlDebug">
            <summary>
            获取或设置是否启用SQL调试日志输出到日志文件
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.SaveGlobalProfileInitFile">
            <summary>
            检查是否存在全局配置文件，如果不存在就保存当前的全局配置到文件
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.SaveGlobalUserValues(KdCore.Data.KdAppProfile)">
            <summary>
            保存用户编辑的全局配置
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.SaveGlobalCurrentValues">
            <summary>
            保存当前的全局配置
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Type_LogsProvider">
            <summary>
            获取或设置用于获取处理数据库日志的接口类型
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Type_AnnexsProvider">
            <summary>
            获取或设置用于获取处理附件数据的接口类型
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Type_UsersProvider">
            <summary>
            获取或设置用于获取处理用户查询的接口类型
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Type_TasksProvider">
            <summary>
            获取或设置用于获取处理待办事项的接口类型
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Type_NotifyProvider">
            <summary>
            获取或设置用于获取处理系统提醒通知消息的接口类型
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Type_UserFollowProvider">
            <summary>
            获取或设置用于获取处理用户收藏关注的接口类型
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Type_SmsProvider">
            <summary>
            获取或设置用于获取处理短信数据的接口类型
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.UseFlowSigns">
            <summary>
            获取或设置是否启用了事项签批流程
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.UseFlowBizs">
            <summary>
            获取或设置是否启用了事项办理流程
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.FileTypeAllowUpload(System.String)">
            <summary>
            验证是否是系统设置允许上传的文件类型
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.FileTypeDenyUpload(System.String)">
            <summary>
            验证是否是系统设置不允许上传的文件类型
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdAppContext.Func_GetWorkDays">
            <summary>
            获取或设置系统工作日设定的查询方法
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.GetWorkDays(System.DateTime,System.DateTime)">
            <summary>
            查询系统工作日设定
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetPageButton(KdCore.KdClientDevice)">
            <summary>
            获取客户端分页按钮显示个数
            </summary>
            <param name="clientDevice"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadRootFolder(System.Boolean)">
            <summary>
            获取上传文件保存的根目录路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFolderPath(System.String,System.String,System.String,System.Boolean,KdCore.BbCycleDateTime,System.String[])">
            <summary>
            获取上传文件保存文件夹的相对路径
            </summary>
            <param name="rootCode">文件保存根节点标识</param>
            <param name="fileCode">上传文件类型标识</param>
            <param name="annexType">附件类型标识</param>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="savePeriod">数据保存文件夹分组方式</param> 
            <param name="paths">分类文件夹下的文件夹路径名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFolderPath(System.String,System.String,System.String,System.Boolean,System.String[])">
            <summary>
            获取上传文件保存文件夹的相对路径
            </summary>
            <param name="rootCode">文件保存根节点标识</param>
            <param name="fileCode">上传文件类型标识</param>
            <param name="annexType">附件类型标识</param>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="paths">分类文件夹下的文件夹路径名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFolderPath(System.String,System.String,System.Boolean,KdCore.BbCycleDateTime,System.String[])">
            <summary>
            获取上传文件保存文件夹的相对路径
            </summary>
            <param name="fileCode">上传文件类型标识</param>
            <param name="annexType">附件类型标识</param>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="savePeriod">数据保存文件夹分组方式</param> 
            <param name="paths">分类文件夹下的文件夹路径名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFolderPath(System.String,System.String,System.Boolean,System.String[])">
            <summary>
            获取上传文件保存文件夹的相对路径
            </summary>
            <param name="fileCode">上传文件类型标识</param>
            <param name="annexType">附件类型标识</param>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="paths">分类文件夹下的文件夹路径名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFolderPath(System.String,System.Boolean,KdCore.BbCycleDateTime,System.String[])">
            <summary>
            获取上传文件保存文件夹的相对路径
            </summary>
            <param name="fileCode">上传文件类型标识</param>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="savePeriod">数据保存文件夹分组方式</param> 
            <param name="paths">分类文件夹下的文件夹路径名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFolderPath(System.String,System.Boolean,System.String[])">
            <summary>
            获取上传文件保存文件夹的相对路径
            </summary>
            <param name="fileCode">上传文件类型标识</param>
            <param name="isVirtual">是否返回虚拟路径</param>
            <param name="paths">分类文件夹下的文件夹路径名称</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFilePath(System.String,System.String,System.String,System.Boolean,KdCore.BbCycleDateTime,System.String,System.String[])">
            <summary>
            获取上传文件保存的相对路径
            </summary>
            <param name="rootCode">文件保存根节点标识</param>
            <param name="fileCode">上传文件类型标识</param> 
            <param name="annexType">附件类型标识</param>
            <param name="isVirtual">是否返回虚拟路径</param> 
            <param name="savePeriod">数据保存文件夹分组方式</param>
            <param name="fileName"></param>
            <param name="paths">分类文件夹下的文件夹路径名称</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFilePath(System.String,System.String,System.String,System.Boolean,System.String,System.String[])">
            <summary>
            获取上传文件保存的相对路径
            </summary>
            <param name="rootCode">文件保存根节点标识</param>
            <param name="fileCode">上传文件类型标识</param> 
            <param name="annexType">附件类型标识</param>
            <param name="isVirtual">是否返回虚拟路径</param>  
            <param name="fileName"></param>
            <param name="paths">分类文件夹下的文件夹路径名称</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFilePath(System.String,System.String,System.Boolean,KdCore.BbCycleDateTime,System.String,System.String[])">
            <summary>
            获取上传文件保存的相对路径
            </summary>
            <param name="fileCode">上传文件类型标识</param>
            <param name="annexType">附件类型标识</param> 
            <param name="isVirtual">是否返回虚拟路径</param> 
            <param name="savePeriod">数据保存文件夹分组方式</param>
            <param name="fileName"></param>
            <param name="paths">分类文件夹下的文件夹路径名称</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFilePath(System.String,System.String,System.Boolean,System.String,System.String[])">
            <summary>
            获取上传文件保存的相对路径
            </summary>
            <param name="fileCode">上传文件类型标识</param>
            <param name="annexType">附件类型标识</param> 
            <param name="isVirtual">是否返回虚拟路径</param>  
            <param name="fileName"></param>
            <param name="paths">分类文件夹下的文件夹路径名称</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFilePath(System.String,System.Boolean,KdCore.BbCycleDateTime,System.String,System.String[])">
            <summary>
            获取上传文件保存的相对路径
            </summary>
            <param name="fileCode">上传文件类型标识</param>
            <param name="isVirtual">是否返回虚拟路径</param>  
            <param name="savePeriod">数据保存文件夹分组方式</param>
            <param name="fileName"></param>
            <param name="paths">分类文件夹下的文件夹路径名称</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUploadFilePath(System.String,System.Boolean,System.String,System.String[])">
            <summary>
            获取上传文件保存的相对路径
            </summary>
            <param name="fileCode">上传文件类型标识</param>
            <param name="isVirtual">是否返回虚拟路径</param>   
            <param name="fileName"></param>
            <param name="paths">分类文件夹下的文件夹路径名称</param> 
            <returns></returns>
        </member>
        <member name="P:KdCore.KdAppContext.AdminUser">
            <summary>
            系统内置管理用户
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.EmptyUser">
            <summary>
            系统内置未登录/匿名用户
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.AutoUser">
            <summary>
            系统内置处理事务时使用的占位标识用户；
            如短信自动收发是没有用户操作的，但数据的创建人等规定不能为null，可使用该用户进行设置占位
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.ImportUser">
            <summary>
            系统内置处理数据导入时使用的占位标识用户
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.IsVirtualUser(System.Security.Principal.IPrincipal)">
            <summary>
            判断用户是否系统虚拟账号
            如：内置管理员、游客、数据处理账号、占位虚拟账号等
            </summary>
            <param name="principal"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.UserMarkVirtual(KdCore.Data.Users.KdUser,System.String)">
            <summary>
            将用户标识为虚拟用户
            </summary>
            <param name="user"></param>
            <param name="userId"></param>
        </member>
        <member name="M:KdCore.KdAppContext.IsInnerAdminUser(System.String)">
            <summary>
            判断用户是否是系统内置管理员用户
            </summary>
            <param name="userIdOrName"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.IsInnerAdminUser(System.Security.Principal.IPrincipal)">
            <summary>
            判断用户是否是系统内置管理员用户
            </summary>
            <param name="principal"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.IsInnerEmptyUser(System.Security.Principal.IPrincipal)">
            <summary>
            判断用户是否为空，或者是系统内置占位虚拟账号
            </summary>
            <param name="principal"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.IsInnerAutoUser(System.Security.Principal.IPrincipal)">
            <summary>
            判断用户名或主键是否系统内置数据处理账号
            </summary>
            <param name="principal"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdAppContext.Func_GetLocalUserByRemoteUser">
            <summary>
            获取或设置通过远程用户数据获取本地用户数据的方法，主要用于单点登录
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.GetLocalUser(KdCore.Data.Users.KdUserItem)">
            <summary>
            获取本地用户数据
            </summary>
            <param name="userItem"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.OnUserLogin(System.String,System.Security.Principal.IPrincipal)">
            <summary>
            设置当前 Session 的登录用户时，去除代理类型
            </summary>
            <param name="sessionId"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.OnUserLogout(System.String,System.Security.Principal.IPrincipal)">
            <summary>
            设置当前 Session 的登录用户时，去除代理类型
            </summary>
            <param name="sessionId"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUserDataFolderPath(KdCore.Data.Users.IKdUser,System.Boolean,KdCore.BbCycleDateTime,System.String[])">
            <summary>
            获取指定用户数据目录的相对路径
            </summary>
            <param name="user">指定用户</param>
            <param name="isVirtual">是否返回虚拟路径</param> 
            <param name="savePeriod">数据保存文件夹分组方式</param> 
            <param name="paths">分类文件夹下的文件夹路径名称</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUserDataFilePath(KdCore.Data.Users.IKdUser,System.Boolean,KdCore.BbCycleDateTime,System.String,System.String[])">
            <summary>
            获取指定用户数据文件保存路径
            </summary>
            <param name="user">指定用户</param>
            <param name="isVirtual">是否返回虚拟路径</param> 
            <param name="savePeriod">数据保存文件夹分组方式</param> 
            <param name="fileName">文件名</param>
            <param name="paths">分类文件夹下的文件夹路径名称</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUserDataFolderPath(KdCore.Data.Users.IKdUser,System.Boolean,System.String[])">
            <summary>
            获取用户数据目录的相对路径
            </summary>
            <param name="user">指定用户</param>
            <param name="isVirtual">是否返回虚拟路径</param>  
            <param name="paths">分类文件夹下的文件夹路径名称</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetUserDataFilePath(KdCore.Data.Users.IKdUser,System.Boolean,System.String,System.String[])">
            <summary>
            获取用户数据文件保存路径
            </summary>
            <param name="user">指定用户</param>
            <param name="isVirtual">是否返回虚拟路径</param>  
            <param name="fileName">文件名</param>
            <param name="paths">分类文件夹下的文件夹路径名称</param> 
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetProfilePath(KdCore.Data.Users.IKdUser)">
            <summary>
            获取用户配置文件保存的相对路径
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetProfile(KdCore.Data.Users.IKdUser)">
            <summary>
            获取用户配置文件
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.Set(KdCore.Data.Users.IKdUser,System.String,System.Object)">
            <summary>
            设置用户设置项的值，必须是字符串或者值类型的值
            </summary>
            <param name="user">设置用户</param>
            <param name="profileItemName">用户设置项的名称</param>
            <param name="profileItemValue">用户设置项的值</param> 
        </member>
        <member name="M:KdCore.KdAppContext.Get(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            获取用户设置项的值
            </summary>
            <param name="user">设置用户</param>
            <param name="profileItemName">用户设置项的名称</param>
            <returns>用户设置项的值</returns>
        </member>
        <member name="M:KdCore.KdAppContext.Get``1(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            获取用户设置项的值
            </summary>
            <param name="user">设置用户</param>
            <param name="profileItemName">用户设置项的名称</param>
            <returns>用户设置项的值</returns>
        </member>
        <member name="P:KdCore.KdAppContext.Action_InitUserProfile">
            <summary>
            初始化默认用户设置的方法
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.InitUserProfile(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            初始化默认用户配置文件
            </summary>
            <param name="userProfile"></param>
        </member>
        <member name="M:KdCore.KdAppContext.SetUserProfile(KdCore.Data.Users.IKdUser,System.String,System.Object)">
            <summary>
            设置用户的系统设置项为字符串值 
            </summary>
            <param name="user">设置用户</param>
            <param name="profileItemName">用户设置项的名称</param>
            <param name="profileItemValue">用户设置项的值</param>  
        </member>
        <member name="P:KdCore.KdAppContext.Action_SaveUserLogs">
            <summary>
            获取或设置保存用户操作日志的处理方法
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.SaveUserLogs(System.Object,System.Collections.Generic.IEnumerable{KdCore.Data.Users.KdUserAction})">
            <summary>
            保存用户操作日志
            </summary>
            <param name="batchToken">批次标识</param>
            <param name="actionLogs">要保存的日志记录</param>
        </member>
        <member name="M:KdCore.KdAppContext.SaveUserLogs(System.Object,KdCore.Data.Users.KdUserAction[])">
            <summary>
            保存用户操作日志
            </summary>
            <param name="batchToken">批次标识</param>
            <param name="actionLogs">要保存的日志记录</param>
        </member>
        <member name="M:KdCore.KdAppContext.SaveUserLogs(System.Collections.Generic.IEnumerable{KdCore.Data.Users.KdUserAction})">
            <summary>
            保存用户操作日志
            </summary>
            <param name="actionLogs">要保存的日志记录</param>
        </member>
        <member name="M:KdCore.KdAppContext.SaveUserLogs(KdCore.Data.Users.KdUserAction[])">
            <summary>
            保存用户操作日志
            </summary>
            <param name="actionLogs">要保存的日志记录</param>
        </member>
        <member name="M:KdCore.KdAppContext.SaveUserLogs(KdCore.Data.Users.IKdUser,System.Object,System.Collections.Generic.IEnumerable{KdCore.Data.Users.KdUserAction})">
            <summary>
            保存用户操作日志
            </summary>
            <param name="actionUser">产生日志的用户</param>
            <param name="batchToken">批次标识</param>
            <param name="actionLogs">要保存的日志记录</param>
        </member>
        <member name="M:KdCore.KdAppContext.SaveUserLogs(KdCore.Data.Users.IKdUser,System.Object,KdCore.Data.Users.KdUserAction[])">
            <summary>
            保存用户操作日志
            </summary>
            <param name="actionUser">产生日志的用户</param>
            <param name="batchToken">批次标识</param>
            <param name="actionLogs">要保存的日志记录</param>
        </member>
        <member name="M:KdCore.KdAppContext.SaveUserLogs(KdCore.Data.Users.IKdUser,System.Collections.Generic.IEnumerable{KdCore.Data.Users.KdUserAction})">
            <summary>
            保存用户操作日志
            </summary>
            <param name="actionUser">产生日志的用户</param>
            <param name="actionLogs">要保存的日志记录</param>
        </member>
        <member name="M:KdCore.KdAppContext.SaveUserLogs(KdCore.Data.Users.IKdUser,KdCore.Data.Users.KdUserAction[])">
            <summary>
            保存用户操作日志
            </summary>
            <param name="actionUser">产生日志的用户</param>
            <param name="actionLogs">要保存的日志记录</param>
        </member>
        <member name="P:KdCore.KdAppContext.Func_CalcOverdueState">
            <summary>
            获取或设置系统中默认的过期状态计算方法
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.CalcOverdueState(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            计算当前的过期状态
            </summary>
            <param name="limitTime"></param>
            <param name="handleTime"></param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdAppContext.TodoState_Lamp_DefaultUseImage">
            <summary>
            默认使用图片格式的来显示待办状态图标
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Func_TodoState_ToStateWord">
            <summary>
            设置获取待办状态转换为文字的方法
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Func_TodoState_ToLampName">
            <summary>
            设置获取待办状态转换为亮灯标识名称的方法
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Func_TodoState_ToLampTip">
            <summary>
            设置获取待办状态转换为亮灯超期状态提示文字的方法
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Func_TodoState_GetLampCssClass">
            <summary>
            设置获取待办状态转换为对应的页面显示时附加的CSS样式名称的方法
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Func_TodoState_GetLampFontIcon">
            <summary>
            设置获取待办状态转换为对应的显示字体图标样式（Font Icon）的方法
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Func_TodoState_GetLampImgFolder">
            <summary>
            设置获取待办或已办状态对应的显示图片按主题保存文件夹的方法
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Func_TodoState_GetLampImgPath">
            <summary>
            设置获取待办或已办状态对应的显示图片路径的方法
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Func_TodoState_GetTodoHtml">
            <summary>
            设置将待办或已办状态转换为 HTML 进行亮灯显示的方法
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.TodoState_Lamp_SupportThemes">
            <summary>
            待办状态显示是否支持用户自定义主题方案
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.TodoState_Lamp_Themes">
            <summary>
            待办状态显示主题方案
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.IsFontIconLamp(KdCore.Data.KdListItem)">
            <summary>
            待办状态显示主题方案
            </summary>
            <param name="theme"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetLampTheme(System.String)">
            <summary>
            查找亮灯状态显示方案
            </summary>
            <param name="themeId"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.ToStateWord(KdCore.Data.BbTodoState)">
            <summary>
            待办事项的 待办状态显示文字
            </summary>
            <param name="todoState"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.ToLampName(KdCore.Data.BbTodoState)">
            <summary>
            待办事项的 亮灯状态名称
            </summary>
            <param name="todoState"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.ToLampTip(KdCore.Data.BbTodoState,System.Nullable{System.DateTime})">
            <summary>
            待办事项的 超期状态显示文字说明
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.GetLampCssClass(KdCore.Data.BbTodoState,KdCore.Data.KdListItem)">
            <summary>
            待办事项的 待办状态显示字体图标
            </summary>
            <param name="todoState"></param>
            <param name="theme"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetLampFontIcon(KdCore.Data.BbTodoState,KdCore.Data.KdListItem)">
            <summary>
            待办事项的 待办状态显示字体图标
            </summary>
            <param name="todoState"></param>
            <param name="theme"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.ToHtmlFontIcon(KdCore.Data.BbTodoState,KdCore.Data.KdListItem,System.Nullable{System.DateTime})">
            <summary>
            将待办或已办进度状态转换为 HTML 进行显示，标识是否超出计划时间
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.ToHtmlFontIcon(KdCore.Data.BbTodoState,System.String,System.Nullable{System.DateTime})">
            <summary>
            将待办或已办进度状态转换为 HTML 进行显示，标识是否超出计划时间
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.GetLampImgPathDefault(KdCore.Data.BbTodoState)">
            <summary>
            待办事项的 待办状态默认显示图片
            </summary>
            <param name="todoState"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetLampImgFolder(KdCore.Data.KdListItem)">
            <summary>
            待办事项的 待办状态显示文字
            </summary>
            <param name="theme"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetLampImgPath(KdCore.Data.BbTodoState,KdCore.Data.KdListItem)">
            <summary>
            待办事项的 待办状态显示文字
            </summary>
            <param name="todoState"></param>
            <param name="theme"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.ToHtmlImage(KdCore.Data.BbTodoState,KdCore.Data.KdListItem,System.Nullable{System.DateTime},System.Func{System.String,System.String})">
            <summary>
            将待办或已办进度状态转换为 HTML 进行显示，标识是否超出计划时间
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.ToHtmlImage(KdCore.Data.BbTodoState,System.String,System.Nullable{System.DateTime},System.Func{System.String,System.String})">
            <summary>
            将待办或已办进度状态转换为 HTML 进行显示，标识是否超出计划时间
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.GetStateLampHtml(KdCore.Data.BbTodoState,KdCore.Data.KdListItem,System.Nullable{System.DateTime},System.Func{System.String,System.String})">
            <summary>
            将待办或已办进度转换为页面显示亮灯状态的 HTML
            </summary>
            <param name="todoState">待办或已办进度状态</param>
            <param name="theme">系统将尝试查找亮灯显示主题方案</param>
            <param name="timeLimit">办理期限日期</param>
            <param name="funcImgPathToWebClientUrl">在对亮灯状态图片路径从系统路基处理为页面显示客户端相对路径进行处理时使用的方法，如果传值为null，将强制使用系统默认图标字体方式进行显示</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetStateLampHtml(KdCore.Data.BbTodoState,System.String,System.Nullable{System.DateTime},System.Func{System.String,System.String})">
            <summary>
            将待办或已办进度转换为页面显示亮灯状态的 HTML
            </summary>
            <param name="todoState">待办或已办进度状态</param>
            <param name="themeId">系统将尝试查找亮灯显示主题方案</param>
            <param name="timeLimit">办理期限日期</param>
            <param name="funcImgPathToWebClientUrl">在对亮灯状态图片路径从系统路基处理为页面显示客户端相对路径进行处理时使用的方法，如果传值为null，将强制使用系统默认图标字体方式进行显示</param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.GetStateLampHtml(KdCore.Data.BbTodoState,System.Nullable{System.DateTime},KdCore.Data.Users.IKdUser,System.Func{System.String,System.String})">
            <summary>
            将待办或已办进度转换为页面显示亮灯状态的 HTML
            </summary>
            <param name="todoState">待办或已办进度状态</param>
            <param name="timeLimit">办理期限日期</param>
            <param name="user">当前用户，如果不为null，系统将尝试查找用户自定义设置的亮灯显示主题方案</param>
            <param name="funcImgPathToWebClientUrl">在对亮灯状态图片路径从系统路基处理为页面显示客户端相对路径进行处理时使用的方法，如果传值为null，将强制使用系统默认图标字体方式进行显示</param>
            <returns></returns>
        </member>
        <member name="P:KdCore.KdAppContext.UserNotify_LoadLimitTime">
            <summary>
            获取或设置提醒消息转换为 HTML 的处理方法
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Func_OnLoadUserNotify">
            <summary>
            获取或设置在获取用户提醒消息时插入额外优先提醒的处理方法
            </summary>
        </member>
        <member name="P:KdCore.KdAppContext.Func_OnReadUserNotify">
            <summary>
            获取或设置在用户标识提醒消息已读时插入额外优先提醒的处理方法
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.EnsureNotifyTimeLimit(System.Nullable{System.DateTime})">
            <summary>
            确认通知提醒的查询时间限制
            </summary>
            <param name="timeLimit"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.LoadUserNotifies(KdCore.Data.Users.IKdUser,System.String,System.Nullable{System.DateTime},System.Int32)">
            <summary>
            获取用户所有未读的提醒消息
            </summary>
            <param name="user"></param>
            <param name="prevNotifyId"></param>
            <param name="timeLimit"></param>
            <param name="maxCount"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.LoadUserNotify(KdCore.Data.Users.IKdUser,System.String,System.Nullable{System.DateTime})">
            <summary>
            获取用户最早一条待显示提醒通知
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.ReadUserNotify(KdCore.Data.Users.IKdUser,System.String)">
            <summary>
            用户标识指定主键的提醒消息为已读状态
            </summary>
        </member>
        <member name="M:KdCore.KdAppContext.AddNotifyForAllUsers(KdCore.Data.Users.KdUserNotify,KdCore.Data.IKdEntityBase)">
            <summary>
            给所有用户发送通知提醒
            </summary>
            <param name="notify"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:KdCore.KdAppContext.AddNotify(KdCore.Data.Users.KdUserNotify,KdCore.Data.IKdEntityBase,KdCore.Data.Users.IKdUser[])">
            <summary>
            给指定用户发送通知提醒
            </summary>
            <param name="notify"></param>
            <param name="source"></param>
            <param name="users"></param>
            <returns></returns>
        </member>
    </members>
</doc>
